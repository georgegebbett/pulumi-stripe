// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Stripe
{
    /// <summary>
    /// With this resource, you can create a promotion code - [Stripe API promotion code documentation](https://stripe.com/docs/api/promotion_codes).
    /// 
    /// A Promotion Code represents a customer-redeemable code for a coupon. It can be used to create multiple codes for a single coupon.
    /// 
    /// &gt; Removal of the promotion code isn't supported through the Stripe SDK.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Stripe = Pulumi.Stripe;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // promotion code for the coupon
    ///     var codePromotionCode = new Stripe.PromotionCode("codePromotionCode", new()
    ///     {
    ///         Coupon = stripe_coupon.Coupon.Id,
    ///         Code = "FREE",
    ///     });
    /// 
    ///     // promotion code for the coupon with limitations
    ///     var codeIndex_promotionCodePromotionCode = new Stripe.PromotionCode("codeIndex/promotionCodePromotionCode", new()
    ///     {
    ///         Coupon = stripe_coupon.Coupon.Id,
    ///         Code = "FREE",
    ///         MaxRedemptions = 5,
    ///         ExpiresAt = "2025-08-03T08:37:18+00:00",
    ///     });
    /// 
    ///     // promotion code for the coupon to customer
    ///     var codeStripeIndex_promotionCodePromotionCode = new Stripe.PromotionCode("codeStripeIndex/promotionCodePromotionCode", new()
    ///     {
    ///         Coupon = stripe_coupon.Coupon.Id,
    ///         Code = "FREE",
    ///         Customer = "cus...",
    ///     });
    /// 
    ///     // promotion code for the coupon with restrictions
    ///     var codeStripeIndex_promotionCodePromotionCode1 = new Stripe.PromotionCode("codeStripeIndex/promotionCodePromotionCode1", new()
    ///     {
    ///         Coupon = stripe_coupon.Coupon.Id,
    ///         Code = "FREE",
    ///         Restrictions = new Stripe.Inputs.PromotionCodeRestrictionsArgs
    ///         {
    ///             FirstTimeTransaction = true,
    ///             MinimumAmount = 100,
    ///             MinimumAmountCurrency = "aud",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [StripeResourceType("stripe:index/promotionCode:PromotionCode")]
    public partial class PromotionCode : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Bool. Whether the promotion code is currently active. Defaults to `true`.
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// String. The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. If left blank, we will generate one automatically.
        /// </summary>
        [Output("code")]
        public Output<string?> Code { get; private set; } = null!;

        /// <summary>
        /// String. The coupon for this promotion code.
        /// </summary>
        [Output("coupon")]
        public Output<string> Coupon { get; private set; } = null!;

        /// <summary>
        /// String. The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.
        /// </summary>
        [Output("customer")]
        public Output<string?> Customer { get; private set; } = null!;

        /// <summary>
        /// String. The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon’s `redeems_by`. Expected format is `RFC3339`.
        /// </summary>
        [Output("expiresAt")]
        public Output<string?> ExpiresAt { get; private set; } = null!;

        /// <summary>
        /// Int. A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon’s `max_redemptions`.
        /// </summary>
        [Output("maxRedemptions")]
        public Output<int?> MaxRedemptions { get; private set; } = null!;

        /// <summary>
        /// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// List(Resource). Settings that restrict the redemption of the promotion code. For details of individual arguments see Restrictions.
        /// </summary>
        [Output("restrictions")]
        public Output<Outputs.PromotionCodeRestrictions?> Restrictions { get; private set; } = null!;


        /// <summary>
        /// Create a PromotionCode resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PromotionCode(string name, PromotionCodeArgs args, CustomResourceOptions? options = null)
            : base("stripe:index/promotionCode:PromotionCode", name, args ?? new PromotionCodeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PromotionCode(string name, Input<string> id, PromotionCodeState? state = null, CustomResourceOptions? options = null)
            : base("stripe:index/promotionCode:PromotionCode", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/georgegebbett",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PromotionCode resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PromotionCode Get(string name, Input<string> id, PromotionCodeState? state = null, CustomResourceOptions? options = null)
        {
            return new PromotionCode(name, id, state, options);
        }
    }

    public sealed class PromotionCodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bool. Whether the promotion code is currently active. Defaults to `true`.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// String. The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. If left blank, we will generate one automatically.
        /// </summary>
        [Input("code")]
        public Input<string>? Code { get; set; }

        /// <summary>
        /// String. The coupon for this promotion code.
        /// </summary>
        [Input("coupon", required: true)]
        public Input<string> Coupon { get; set; } = null!;

        /// <summary>
        /// String. The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.
        /// </summary>
        [Input("customer")]
        public Input<string>? Customer { get; set; }

        /// <summary>
        /// String. The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon’s `redeems_by`. Expected format is `RFC3339`.
        /// </summary>
        [Input("expiresAt")]
        public Input<string>? ExpiresAt { get; set; }

        /// <summary>
        /// Int. A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon’s `max_redemptions`.
        /// </summary>
        [Input("maxRedemptions")]
        public Input<int>? MaxRedemptions { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// List(Resource). Settings that restrict the redemption of the promotion code. For details of individual arguments see Restrictions.
        /// </summary>
        [Input("restrictions")]
        public Input<Inputs.PromotionCodeRestrictionsArgs>? Restrictions { get; set; }

        public PromotionCodeArgs()
        {
        }
        public static new PromotionCodeArgs Empty => new PromotionCodeArgs();
    }

    public sealed class PromotionCodeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bool. Whether the promotion code is currently active. Defaults to `true`.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// String. The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. If left blank, we will generate one automatically.
        /// </summary>
        [Input("code")]
        public Input<string>? Code { get; set; }

        /// <summary>
        /// String. The coupon for this promotion code.
        /// </summary>
        [Input("coupon")]
        public Input<string>? Coupon { get; set; }

        /// <summary>
        /// String. The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.
        /// </summary>
        [Input("customer")]
        public Input<string>? Customer { get; set; }

        /// <summary>
        /// String. The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon’s `redeems_by`. Expected format is `RFC3339`.
        /// </summary>
        [Input("expiresAt")]
        public Input<string>? ExpiresAt { get; set; }

        /// <summary>
        /// Int. A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon’s `max_redemptions`.
        /// </summary>
        [Input("maxRedemptions")]
        public Input<int>? MaxRedemptions { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// List(Resource). Settings that restrict the redemption of the promotion code. For details of individual arguments see Restrictions.
        /// </summary>
        [Input("restrictions")]
        public Input<Inputs.PromotionCodeRestrictionsGetArgs>? Restrictions { get; set; }

        public PromotionCodeState()
        {
        }
        public static new PromotionCodeState Empty => new PromotionCodeState();
    }
}
