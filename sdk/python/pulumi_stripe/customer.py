# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['CustomerArgs', 'Customer']

@pulumi.input_type
class CustomerArgs:
    def __init__(__self__, *,
                 address: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 balance: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 invoice_prefix: Optional[pulumi.Input[str]] = None,
                 invoice_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 metadata: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 next_invoice_sequence: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 preferred_locales: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 shipping: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Customer resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] address: Map(String). The customer’s address, for all individual fields see: Address Fields.
        :param pulumi.Input[int] balance: Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        :param pulumi.Input[str] description: String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        :param pulumi.Input[str] email: String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        :param pulumi.Input[str] invoice_prefix: String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] invoice_settings: Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] metadata: Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        :param pulumi.Input[str] name: String. The customer’s full name or business name.
        :param pulumi.Input[int] next_invoice_sequence: Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        :param pulumi.Input[str] phone: String. The customer’s phone number.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_locales: List(String). Customer’s preferred languages, ordered by preference.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] shipping: Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if balance is not None:
            pulumi.set(__self__, "balance", balance)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if invoice_prefix is not None:
            pulumi.set(__self__, "invoice_prefix", invoice_prefix)
        if invoice_settings is not None:
            pulumi.set(__self__, "invoice_settings", invoice_settings)
        if metadata is not None:
            pulumi.set(__self__, "metadata", metadata)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if next_invoice_sequence is not None:
            pulumi.set(__self__, "next_invoice_sequence", next_invoice_sequence)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)
        if preferred_locales is not None:
            pulumi.set(__self__, "preferred_locales", preferred_locales)
        if shipping is not None:
            pulumi.set(__self__, "shipping", shipping)

    @property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). The customer’s address, for all individual fields see: Address Fields.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "address", value)

    @property
    @pulumi.getter
    def balance(self) -> Optional[pulumi.Input[int]]:
        """
        Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        """
        return pulumi.get(self, "balance")

    @balance.setter
    def balance(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "balance", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[str]]:
        """
        String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter(name="invoicePrefix")
    def invoice_prefix(self) -> Optional[pulumi.Input[str]]:
        """
        String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        """
        return pulumi.get(self, "invoice_prefix")

    @invoice_prefix.setter
    def invoice_prefix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "invoice_prefix", value)

    @property
    @pulumi.getter(name="invoiceSettings")
    def invoice_settings(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        """
        return pulumi.get(self, "invoice_settings")

    @invoice_settings.setter
    def invoice_settings(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "invoice_settings", value)

    @property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        """
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "metadata", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        String. The customer’s full name or business name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="nextInvoiceSequence")
    def next_invoice_sequence(self) -> Optional[pulumi.Input[int]]:
        """
        Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        """
        return pulumi.get(self, "next_invoice_sequence")

    @next_invoice_sequence.setter
    def next_invoice_sequence(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "next_invoice_sequence", value)

    @property
    @pulumi.getter
    def phone(self) -> Optional[pulumi.Input[str]]:
        """
        String. The customer’s phone number.
        """
        return pulumi.get(self, "phone")

    @phone.setter
    def phone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "phone", value)

    @property
    @pulumi.getter(name="preferredLocales")
    def preferred_locales(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List(String). Customer’s preferred languages, ordered by preference.
        """
        return pulumi.get(self, "preferred_locales")

    @preferred_locales.setter
    def preferred_locales(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "preferred_locales", value)

    @property
    @pulumi.getter
    def shipping(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        return pulumi.get(self, "shipping")

    @shipping.setter
    def shipping(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "shipping", value)


@pulumi.input_type
class _CustomerState:
    def __init__(__self__, *,
                 address: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 balance: Optional[pulumi.Input[int]] = None,
                 default_invoice_prefix: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 invoice_prefix: Optional[pulumi.Input[str]] = None,
                 invoice_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 metadata: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 next_invoice_sequence: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 preferred_locales: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 shipping: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering Customer resources.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] address: Map(String). The customer’s address, for all individual fields see: Address Fields.
        :param pulumi.Input[int] balance: Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        :param pulumi.Input[str] default_invoice_prefix: String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
        :param pulumi.Input[str] description: String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        :param pulumi.Input[str] email: String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        :param pulumi.Input[str] invoice_prefix: String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] invoice_settings: Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] metadata: Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        :param pulumi.Input[str] name: String. The customer’s full name or business name.
        :param pulumi.Input[int] next_invoice_sequence: Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        :param pulumi.Input[str] phone: String. The customer’s phone number.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_locales: List(String). Customer’s preferred languages, ordered by preference.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] shipping: Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if balance is not None:
            pulumi.set(__self__, "balance", balance)
        if default_invoice_prefix is not None:
            pulumi.set(__self__, "default_invoice_prefix", default_invoice_prefix)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if invoice_prefix is not None:
            pulumi.set(__self__, "invoice_prefix", invoice_prefix)
        if invoice_settings is not None:
            pulumi.set(__self__, "invoice_settings", invoice_settings)
        if metadata is not None:
            pulumi.set(__self__, "metadata", metadata)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if next_invoice_sequence is not None:
            pulumi.set(__self__, "next_invoice_sequence", next_invoice_sequence)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)
        if preferred_locales is not None:
            pulumi.set(__self__, "preferred_locales", preferred_locales)
        if shipping is not None:
            pulumi.set(__self__, "shipping", shipping)

    @property
    @pulumi.getter
    def address(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). The customer’s address, for all individual fields see: Address Fields.
        """
        return pulumi.get(self, "address")

    @address.setter
    def address(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "address", value)

    @property
    @pulumi.getter
    def balance(self) -> Optional[pulumi.Input[int]]:
        """
        Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        """
        return pulumi.get(self, "balance")

    @balance.setter
    def balance(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "balance", value)

    @property
    @pulumi.getter(name="defaultInvoicePrefix")
    def default_invoice_prefix(self) -> Optional[pulumi.Input[str]]:
        """
        String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
        """
        return pulumi.get(self, "default_invoice_prefix")

    @default_invoice_prefix.setter
    def default_invoice_prefix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default_invoice_prefix", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[str]]:
        """
        String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter(name="invoicePrefix")
    def invoice_prefix(self) -> Optional[pulumi.Input[str]]:
        """
        String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        """
        return pulumi.get(self, "invoice_prefix")

    @invoice_prefix.setter
    def invoice_prefix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "invoice_prefix", value)

    @property
    @pulumi.getter(name="invoiceSettings")
    def invoice_settings(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        """
        return pulumi.get(self, "invoice_settings")

    @invoice_settings.setter
    def invoice_settings(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "invoice_settings", value)

    @property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        """
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "metadata", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        String. The customer’s full name or business name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="nextInvoiceSequence")
    def next_invoice_sequence(self) -> Optional[pulumi.Input[int]]:
        """
        Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        """
        return pulumi.get(self, "next_invoice_sequence")

    @next_invoice_sequence.setter
    def next_invoice_sequence(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "next_invoice_sequence", value)

    @property
    @pulumi.getter
    def phone(self) -> Optional[pulumi.Input[str]]:
        """
        String. The customer’s phone number.
        """
        return pulumi.get(self, "phone")

    @phone.setter
    def phone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "phone", value)

    @property
    @pulumi.getter(name="preferredLocales")
    def preferred_locales(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List(String). Customer’s preferred languages, ordered by preference.
        """
        return pulumi.get(self, "preferred_locales")

    @preferred_locales.setter
    def preferred_locales(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "preferred_locales", value)

    @property
    @pulumi.getter
    def shipping(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        return pulumi.get(self, "shipping")

    @shipping.setter
    def shipping(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "shipping", value)


class Customer(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 balance: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 invoice_prefix: Optional[pulumi.Input[str]] = None,
                 invoice_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 metadata: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 next_invoice_sequence: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 preferred_locales: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 shipping: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        With this resource, you can create a customer - [Stripe API customer documentation](https://stripe.com/docs/api/customers).

        Customer objects allow you to perform recurring charges, and to track multiple charges,
        that are associated with the same customer.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_stripe as stripe

        # A customer with other details
        customer = stripe.Customer("customer",
            balance=10000,
            invoice_prefix="LA000",
            invoice_settings={
                "customFieldName": "customFieldValue",
                "footer": "--- Lukas Aron ---",
            },
            next_invoice_sequence=1001,
            preferred_locales=[
                "eng",
                "esp",
            ],
            shipping={
                "city": "Sydney",
                "country": "AU",
                "line1": "1 The Best Street",
                "line2": "Apartment 401",
                "name": "Lukas Aron",
                "phone": "+610123456789",
                "postal_code": "2000",
                "state": "New South Wales",
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] address: Map(String). The customer’s address, for all individual fields see: Address Fields.
        :param pulumi.Input[int] balance: Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        :param pulumi.Input[str] description: String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        :param pulumi.Input[str] email: String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        :param pulumi.Input[str] invoice_prefix: String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] invoice_settings: Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] metadata: Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        :param pulumi.Input[str] name: String. The customer’s full name or business name.
        :param pulumi.Input[int] next_invoice_sequence: Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        :param pulumi.Input[str] phone: String. The customer’s phone number.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_locales: List(String). Customer’s preferred languages, ordered by preference.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] shipping: Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[CustomerArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        With this resource, you can create a customer - [Stripe API customer documentation](https://stripe.com/docs/api/customers).

        Customer objects allow you to perform recurring charges, and to track multiple charges,
        that are associated with the same customer.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_stripe as stripe

        # A customer with other details
        customer = stripe.Customer("customer",
            balance=10000,
            invoice_prefix="LA000",
            invoice_settings={
                "customFieldName": "customFieldValue",
                "footer": "--- Lukas Aron ---",
            },
            next_invoice_sequence=1001,
            preferred_locales=[
                "eng",
                "esp",
            ],
            shipping={
                "city": "Sydney",
                "country": "AU",
                "line1": "1 The Best Street",
                "line2": "Apartment 401",
                "name": "Lukas Aron",
                "phone": "+610123456789",
                "postal_code": "2000",
                "state": "New South Wales",
            })
        ```

        :param str resource_name: The name of the resource.
        :param CustomerArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CustomerArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 balance: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 invoice_prefix: Optional[pulumi.Input[str]] = None,
                 invoice_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 metadata: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 next_invoice_sequence: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 preferred_locales: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 shipping: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CustomerArgs.__new__(CustomerArgs)

            __props__.__dict__["address"] = address
            __props__.__dict__["balance"] = balance
            __props__.__dict__["description"] = description
            __props__.__dict__["email"] = email
            __props__.__dict__["invoice_prefix"] = invoice_prefix
            __props__.__dict__["invoice_settings"] = invoice_settings
            __props__.__dict__["metadata"] = metadata
            __props__.__dict__["name"] = name
            __props__.__dict__["next_invoice_sequence"] = next_invoice_sequence
            __props__.__dict__["phone"] = phone
            __props__.__dict__["preferred_locales"] = preferred_locales
            __props__.__dict__["shipping"] = shipping
            __props__.__dict__["default_invoice_prefix"] = None
        super(Customer, __self__).__init__(
            'stripe:index/customer:Customer',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            address: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            balance: Optional[pulumi.Input[int]] = None,
            default_invoice_prefix: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            email: Optional[pulumi.Input[str]] = None,
            invoice_prefix: Optional[pulumi.Input[str]] = None,
            invoice_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            metadata: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            next_invoice_sequence: Optional[pulumi.Input[int]] = None,
            phone: Optional[pulumi.Input[str]] = None,
            preferred_locales: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            shipping: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None) -> 'Customer':
        """
        Get an existing Customer resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] address: Map(String). The customer’s address, for all individual fields see: Address Fields.
        :param pulumi.Input[int] balance: Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        :param pulumi.Input[str] default_invoice_prefix: String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
        :param pulumi.Input[str] description: String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        :param pulumi.Input[str] email: String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        :param pulumi.Input[str] invoice_prefix: String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] invoice_settings: Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] metadata: Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        :param pulumi.Input[str] name: String. The customer’s full name or business name.
        :param pulumi.Input[int] next_invoice_sequence: Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        :param pulumi.Input[str] phone: String. The customer’s phone number.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_locales: List(String). Customer’s preferred languages, ordered by preference.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] shipping: Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CustomerState.__new__(_CustomerState)

        __props__.__dict__["address"] = address
        __props__.__dict__["balance"] = balance
        __props__.__dict__["default_invoice_prefix"] = default_invoice_prefix
        __props__.__dict__["description"] = description
        __props__.__dict__["email"] = email
        __props__.__dict__["invoice_prefix"] = invoice_prefix
        __props__.__dict__["invoice_settings"] = invoice_settings
        __props__.__dict__["metadata"] = metadata
        __props__.__dict__["name"] = name
        __props__.__dict__["next_invoice_sequence"] = next_invoice_sequence
        __props__.__dict__["phone"] = phone
        __props__.__dict__["preferred_locales"] = preferred_locales
        __props__.__dict__["shipping"] = shipping
        return Customer(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def address(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Map(String). The customer’s address, for all individual fields see: Address Fields.
        """
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def balance(self) -> pulumi.Output[Optional[int]]:
        """
        Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
        """
        return pulumi.get(self, "balance")

    @property
    @pulumi.getter(name="defaultInvoicePrefix")
    def default_invoice_prefix(self) -> pulumi.Output[str]:
        """
        String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
        """
        return pulumi.get(self, "default_invoice_prefix")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def email(self) -> pulumi.Output[Optional[str]]:
        """
        String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
        """
        return pulumi.get(self, "email")

    @property
    @pulumi.getter(name="invoicePrefix")
    def invoice_prefix(self) -> pulumi.Output[Optional[str]]:
        """
        String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
        """
        return pulumi.get(self, "invoice_prefix")

    @property
    @pulumi.getter(name="invoiceSettings")
    def invoice_settings(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
        """
        return pulumi.get(self, "invoice_settings")

    @property
    @pulumi.getter
    def metadata(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
        """
        return pulumi.get(self, "metadata")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        String. The customer’s full name or business name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="nextInvoiceSequence")
    def next_invoice_sequence(self) -> pulumi.Output[Optional[int]]:
        """
        Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
        """
        return pulumi.get(self, "next_invoice_sequence")

    @property
    @pulumi.getter
    def phone(self) -> pulumi.Output[Optional[str]]:
        """
        String. The customer’s phone number.
        """
        return pulumi.get(self, "phone")

    @property
    @pulumi.getter(name="preferredLocales")
    def preferred_locales(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        List(String). Customer’s preferred languages, ordered by preference.
        """
        return pulumi.get(self, "preferred_locales")

    @property
    @pulumi.getter
    def shipping(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
        """
        return pulumi.get(self, "shipping")

