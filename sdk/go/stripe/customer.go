// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stripe

import (
	"context"
	"reflect"

	"github.com/georgegebbett/pulumi-stripe/sdk/go/stripe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// With this resource, you can create a customer - [Stripe API customer documentation](https://stripe.com/docs/api/customers).
//
// Customer objects allow you to perform recurring charges, and to track multiple charges,
// that are associated with the same customer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/georgegebbett/pulumi-stripe/sdk/go/stripe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// A customer with other details
//			_, err := stripe.NewCustomer(ctx, "customer", &stripe.CustomerArgs{
//				Balance:       pulumi.Int(10000),
//				InvoicePrefix: pulumi.String("LA000"),
//				InvoiceSettings: pulumi.StringMap{
//					"customFieldName": pulumi.String("customFieldValue"),
//					"footer":          pulumi.String("--- Lukas Aron ---"),
//				},
//				NextInvoiceSequence: pulumi.Int(1001),
//				PreferredLocales: pulumi.StringArray{
//					pulumi.String("eng"),
//					pulumi.String("esp"),
//				},
//				Shipping: pulumi.StringMap{
//					"city":        pulumi.String("Sydney"),
//					"country":     pulumi.String("AU"),
//					"line1":       pulumi.String("1 The Best Street"),
//					"line2":       pulumi.String("Apartment 401"),
//					"name":        pulumi.String("Lukas Aron"),
//					"phone":       pulumi.String("+610123456789"),
//					"postal_code": pulumi.String("2000"),
//					"state":       pulumi.String("New South Wales"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Customer struct {
	pulumi.CustomResourceState

	// Map(String). The customer’s address, for all individual fields see: Address Fields.
	Address pulumi.StringMapOutput `pulumi:"address"`
	// Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
	Balance pulumi.IntPtrOutput `pulumi:"balance"`
	// String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
	DefaultInvoicePrefix pulumi.StringOutput `pulumi:"defaultInvoicePrefix"`
	// String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
	Email pulumi.StringPtrOutput `pulumi:"email"`
	// String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
	InvoicePrefix pulumi.StringPtrOutput `pulumi:"invoicePrefix"`
	// Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
	InvoiceSettings pulumi.StringMapOutput `pulumi:"invoiceSettings"`
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// String. The customer’s full name or business name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
	NextInvoiceSequence pulumi.IntPtrOutput `pulumi:"nextInvoiceSequence"`
	// String. The customer’s phone number.
	Phone pulumi.StringPtrOutput `pulumi:"phone"`
	// List(String). Customer’s preferred languages, ordered by preference.
	PreferredLocales pulumi.StringArrayOutput `pulumi:"preferredLocales"`
	// Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
	Shipping pulumi.StringMapOutput `pulumi:"shipping"`
}

// NewCustomer registers a new resource with the given unique name, arguments, and options.
func NewCustomer(ctx *pulumi.Context,
	name string, args *CustomerArgs, opts ...pulumi.ResourceOption) (*Customer, error) {
	if args == nil {
		args = &CustomerArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Customer
	err := ctx.RegisterResource("stripe:index/customer:Customer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomer gets an existing Customer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerState, opts ...pulumi.ResourceOption) (*Customer, error) {
	var resource Customer
	err := ctx.ReadResource("stripe:index/customer:Customer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Customer resources.
type customerState struct {
	// Map(String). The customer’s address, for all individual fields see: Address Fields.
	Address map[string]string `pulumi:"address"`
	// Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
	Balance *int `pulumi:"balance"`
	// String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
	DefaultInvoicePrefix *string `pulumi:"defaultInvoicePrefix"`
	// String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
	Description *string `pulumi:"description"`
	// String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
	Email *string `pulumi:"email"`
	// String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
	InvoicePrefix *string `pulumi:"invoicePrefix"`
	// Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
	InvoiceSettings map[string]string `pulumi:"invoiceSettings"`
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `pulumi:"metadata"`
	// String. The customer’s full name or business name.
	Name *string `pulumi:"name"`
	// Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
	NextInvoiceSequence *int `pulumi:"nextInvoiceSequence"`
	// String. The customer’s phone number.
	Phone *string `pulumi:"phone"`
	// List(String). Customer’s preferred languages, ordered by preference.
	PreferredLocales []string `pulumi:"preferredLocales"`
	// Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
	Shipping map[string]string `pulumi:"shipping"`
}

type CustomerState struct {
	// Map(String). The customer’s address, for all individual fields see: Address Fields.
	Address pulumi.StringMapInput
	// Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
	Balance pulumi.IntPtrInput
	// String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
	DefaultInvoicePrefix pulumi.StringPtrInput
	// String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
	Description pulumi.StringPtrInput
	// String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
	Email pulumi.StringPtrInput
	// String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
	InvoicePrefix pulumi.StringPtrInput
	// Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
	InvoiceSettings pulumi.StringMapInput
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapInput
	// String. The customer’s full name or business name.
	Name pulumi.StringPtrInput
	// Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
	NextInvoiceSequence pulumi.IntPtrInput
	// String. The customer’s phone number.
	Phone pulumi.StringPtrInput
	// List(String). Customer’s preferred languages, ordered by preference.
	PreferredLocales pulumi.StringArrayInput
	// Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
	Shipping pulumi.StringMapInput
}

func (CustomerState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerState)(nil)).Elem()
}

type customerArgs struct {
	// Map(String). The customer’s address, for all individual fields see: Address Fields.
	Address map[string]string `pulumi:"address"`
	// Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
	Balance *int `pulumi:"balance"`
	// String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
	Description *string `pulumi:"description"`
	// String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
	Email *string `pulumi:"email"`
	// String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
	InvoicePrefix *string `pulumi:"invoicePrefix"`
	// Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
	InvoiceSettings map[string]string `pulumi:"invoiceSettings"`
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `pulumi:"metadata"`
	// String. The customer’s full name or business name.
	Name *string `pulumi:"name"`
	// Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
	NextInvoiceSequence *int `pulumi:"nextInvoiceSequence"`
	// String. The customer’s phone number.
	Phone *string `pulumi:"phone"`
	// List(String). Customer’s preferred languages, ordered by preference.
	PreferredLocales []string `pulumi:"preferredLocales"`
	// Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
	Shipping map[string]string `pulumi:"shipping"`
}

// The set of arguments for constructing a Customer resource.
type CustomerArgs struct {
	// Map(String). The customer’s address, for all individual fields see: Address Fields.
	Address pulumi.StringMapInput
	// Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
	Balance pulumi.IntPtrInput
	// String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
	Description pulumi.StringPtrInput
	// String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
	Email pulumi.StringPtrInput
	// String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
	InvoicePrefix pulumi.StringPtrInput
	// Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
	InvoiceSettings pulumi.StringMapInput
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapInput
	// String. The customer’s full name or business name.
	Name pulumi.StringPtrInput
	// Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
	NextInvoiceSequence pulumi.IntPtrInput
	// String. The customer’s phone number.
	Phone pulumi.StringPtrInput
	// List(String). Customer’s preferred languages, ordered by preference.
	PreferredLocales pulumi.StringArrayInput
	// Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
	Shipping pulumi.StringMapInput
}

func (CustomerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerArgs)(nil)).Elem()
}

type CustomerInput interface {
	pulumi.Input

	ToCustomerOutput() CustomerOutput
	ToCustomerOutputWithContext(ctx context.Context) CustomerOutput
}

func (*Customer) ElementType() reflect.Type {
	return reflect.TypeOf((**Customer)(nil)).Elem()
}

func (i *Customer) ToCustomerOutput() CustomerOutput {
	return i.ToCustomerOutputWithContext(context.Background())
}

func (i *Customer) ToCustomerOutputWithContext(ctx context.Context) CustomerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerOutput)
}

// CustomerArrayInput is an input type that accepts CustomerArray and CustomerArrayOutput values.
// You can construct a concrete instance of `CustomerArrayInput` via:
//
//	CustomerArray{ CustomerArgs{...} }
type CustomerArrayInput interface {
	pulumi.Input

	ToCustomerArrayOutput() CustomerArrayOutput
	ToCustomerArrayOutputWithContext(context.Context) CustomerArrayOutput
}

type CustomerArray []CustomerInput

func (CustomerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Customer)(nil)).Elem()
}

func (i CustomerArray) ToCustomerArrayOutput() CustomerArrayOutput {
	return i.ToCustomerArrayOutputWithContext(context.Background())
}

func (i CustomerArray) ToCustomerArrayOutputWithContext(ctx context.Context) CustomerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerArrayOutput)
}

// CustomerMapInput is an input type that accepts CustomerMap and CustomerMapOutput values.
// You can construct a concrete instance of `CustomerMapInput` via:
//
//	CustomerMap{ "key": CustomerArgs{...} }
type CustomerMapInput interface {
	pulumi.Input

	ToCustomerMapOutput() CustomerMapOutput
	ToCustomerMapOutputWithContext(context.Context) CustomerMapOutput
}

type CustomerMap map[string]CustomerInput

func (CustomerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Customer)(nil)).Elem()
}

func (i CustomerMap) ToCustomerMapOutput() CustomerMapOutput {
	return i.ToCustomerMapOutputWithContext(context.Background())
}

func (i CustomerMap) ToCustomerMapOutputWithContext(ctx context.Context) CustomerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerMapOutput)
}

type CustomerOutput struct{ *pulumi.OutputState }

func (CustomerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Customer)(nil)).Elem()
}

func (o CustomerOutput) ToCustomerOutput() CustomerOutput {
	return o
}

func (o CustomerOutput) ToCustomerOutputWithContext(ctx context.Context) CustomerOutput {
	return o
}

// Map(String). The customer’s address, for all individual fields see: Address Fields.
func (o CustomerOutput) Address() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringMapOutput { return v.Address }).(pulumi.StringMapOutput)
}

// Int. Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
func (o CustomerOutput) Balance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Customer) pulumi.IntPtrOutput { return v.Balance }).(pulumi.IntPtrOutput)
}

// String. The default invoice prefix generated by Stripe when not individual invoice prefix provided.
func (o CustomerOutput) DefaultInvoicePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.DefaultInvoicePrefix }).(pulumi.StringOutput)
}

// String. An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
func (o CustomerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// String. Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
func (o CustomerOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

// String. The prefix for the customer used to generate unique invoice numbers. Must be `3–12 uppercase letters or numbers`.
func (o CustomerOutput) InvoicePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringPtrOutput { return v.InvoicePrefix }).(pulumi.StringPtrOutput)
}

// Map(String). Default invoice settings for this customer. For supported fields see: Invoice Settings Fields.
func (o CustomerOutput) InvoiceSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringMapOutput { return v.InvoiceSettings }).(pulumi.StringMapOutput)
}

// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
func (o CustomerOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// String. The customer’s full name or business name.
func (o CustomerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Int. The sequence to be used on the customer’s next invoice. Defaults to 1.
func (o CustomerOutput) NextInvoiceSequence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Customer) pulumi.IntPtrOutput { return v.NextInvoiceSequence }).(pulumi.IntPtrOutput)
}

// String. The customer’s phone number.
func (o CustomerOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringPtrOutput { return v.Phone }).(pulumi.StringPtrOutput)
}

// List(String). Customer’s preferred languages, ordered by preference.
func (o CustomerOutput) PreferredLocales() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringArrayOutput { return v.PreferredLocales }).(pulumi.StringArrayOutput)
}

// Map(String). Mailing and shipping address for the customer. Appears on invoices emailed to this customer. For all individual fields see: Shipping Fields.
func (o CustomerOutput) Shipping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringMapOutput { return v.Shipping }).(pulumi.StringMapOutput)
}

type CustomerArrayOutput struct{ *pulumi.OutputState }

func (CustomerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Customer)(nil)).Elem()
}

func (o CustomerArrayOutput) ToCustomerArrayOutput() CustomerArrayOutput {
	return o
}

func (o CustomerArrayOutput) ToCustomerArrayOutputWithContext(ctx context.Context) CustomerArrayOutput {
	return o
}

func (o CustomerArrayOutput) Index(i pulumi.IntInput) CustomerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Customer {
		return vs[0].([]*Customer)[vs[1].(int)]
	}).(CustomerOutput)
}

type CustomerMapOutput struct{ *pulumi.OutputState }

func (CustomerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Customer)(nil)).Elem()
}

func (o CustomerMapOutput) ToCustomerMapOutput() CustomerMapOutput {
	return o
}

func (o CustomerMapOutput) ToCustomerMapOutputWithContext(ctx context.Context) CustomerMapOutput {
	return o
}

func (o CustomerMapOutput) MapIndex(k pulumi.StringInput) CustomerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Customer {
		return vs[0].(map[string]*Customer)[vs[1].(string)]
	}).(CustomerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerInput)(nil)).Elem(), &Customer{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerArrayInput)(nil)).Elem(), CustomerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerMapInput)(nil)).Elem(), CustomerMap{})
	pulumi.RegisterOutputType(CustomerOutput{})
	pulumi.RegisterOutputType(CustomerArrayOutput{})
	pulumi.RegisterOutputType(CustomerMapOutput{})
}
