// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stripe

import (
	"context"
	"reflect"

	"github.com/georgegebbett/pulumi-stripe/sdk/go/stripe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FileLink struct {
	// String. Time at which the object was created. Measured in seconds since the Unix epoch.
	Created *int `pulumi:"created"`
	// Bool. Returns if the link is already expired.
	Expired *bool `pulumi:"expired"`
	// Int. The link isn’t available after this future timestamp.
	ExpiresAt *int `pulumi:"expiresAt"`
	// String. Unique identifier for the object.
	Id *string `pulumi:"id"`
	// Bool. Has the value `true` if the object exists in live mode or the value `false`
	// if the object exists in test mode.
	Livemode *bool `pulumi:"livemode"`
	// Map(String). Set of key-value pairs that you can attach to an object.
	// This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `pulumi:"metadata"`
	// String. String representing the object’s type. Objects of the same type share the same value.
	Object *string `pulumi:"object"`
	// String. The publicly accessible URL to download the file.
	Url *string `pulumi:"url"`
}

// FileLinkInput is an input type that accepts FileLinkArgs and FileLinkOutput values.
// You can construct a concrete instance of `FileLinkInput` via:
//
//	FileLinkArgs{...}
type FileLinkInput interface {
	pulumi.Input

	ToFileLinkOutput() FileLinkOutput
	ToFileLinkOutputWithContext(context.Context) FileLinkOutput
}

type FileLinkArgs struct {
	// String. Time at which the object was created. Measured in seconds since the Unix epoch.
	Created pulumi.IntPtrInput `pulumi:"created"`
	// Bool. Returns if the link is already expired.
	Expired pulumi.BoolPtrInput `pulumi:"expired"`
	// Int. The link isn’t available after this future timestamp.
	ExpiresAt pulumi.IntPtrInput `pulumi:"expiresAt"`
	// String. Unique identifier for the object.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Bool. Has the value `true` if the object exists in live mode or the value `false`
	// if the object exists in test mode.
	Livemode pulumi.BoolPtrInput `pulumi:"livemode"`
	// Map(String). Set of key-value pairs that you can attach to an object.
	// This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// String. String representing the object’s type. Objects of the same type share the same value.
	Object pulumi.StringPtrInput `pulumi:"object"`
	// String. The publicly accessible URL to download the file.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (FileLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileLink)(nil)).Elem()
}

func (i FileLinkArgs) ToFileLinkOutput() FileLinkOutput {
	return i.ToFileLinkOutputWithContext(context.Background())
}

func (i FileLinkArgs) ToFileLinkOutputWithContext(ctx context.Context) FileLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileLinkOutput)
}

// FileLinkArrayInput is an input type that accepts FileLinkArray and FileLinkArrayOutput values.
// You can construct a concrete instance of `FileLinkArrayInput` via:
//
//	FileLinkArray{ FileLinkArgs{...} }
type FileLinkArrayInput interface {
	pulumi.Input

	ToFileLinkArrayOutput() FileLinkArrayOutput
	ToFileLinkArrayOutputWithContext(context.Context) FileLinkArrayOutput
}

type FileLinkArray []FileLinkInput

func (FileLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileLink)(nil)).Elem()
}

func (i FileLinkArray) ToFileLinkArrayOutput() FileLinkArrayOutput {
	return i.ToFileLinkArrayOutputWithContext(context.Background())
}

func (i FileLinkArray) ToFileLinkArrayOutputWithContext(ctx context.Context) FileLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileLinkArrayOutput)
}

type FileLinkOutput struct{ *pulumi.OutputState }

func (FileLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileLink)(nil)).Elem()
}

func (o FileLinkOutput) ToFileLinkOutput() FileLinkOutput {
	return o
}

func (o FileLinkOutput) ToFileLinkOutputWithContext(ctx context.Context) FileLinkOutput {
	return o
}

// String. Time at which the object was created. Measured in seconds since the Unix epoch.
func (o FileLinkOutput) Created() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileLink) *int { return v.Created }).(pulumi.IntPtrOutput)
}

// Bool. Returns if the link is already expired.
func (o FileLinkOutput) Expired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileLink) *bool { return v.Expired }).(pulumi.BoolPtrOutput)
}

// Int. The link isn’t available after this future timestamp.
func (o FileLinkOutput) ExpiresAt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileLink) *int { return v.ExpiresAt }).(pulumi.IntPtrOutput)
}

// String. Unique identifier for the object.
func (o FileLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Bool. Has the value `true` if the object exists in live mode or the value `false`
// if the object exists in test mode.
func (o FileLinkOutput) Livemode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileLink) *bool { return v.Livemode }).(pulumi.BoolPtrOutput)
}

// Map(String). Set of key-value pairs that you can attach to an object.
// This can be useful for storing additional information about the object in a structured format.
func (o FileLinkOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v FileLink) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// String. String representing the object’s type. Objects of the same type share the same value.
func (o FileLinkOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileLink) *string { return v.Object }).(pulumi.StringPtrOutput)
}

// String. The publicly accessible URL to download the file.
func (o FileLinkOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileLink) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type FileLinkArrayOutput struct{ *pulumi.OutputState }

func (FileLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileLink)(nil)).Elem()
}

func (o FileLinkArrayOutput) ToFileLinkArrayOutput() FileLinkArrayOutput {
	return o
}

func (o FileLinkArrayOutput) ToFileLinkArrayOutputWithContext(ctx context.Context) FileLinkArrayOutput {
	return o
}

func (o FileLinkArrayOutput) Index(i pulumi.IntInput) FileLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileLink {
		return vs[0].([]FileLink)[vs[1].(int)]
	}).(FileLinkOutput)
}

type FileLinkData struct {
	// Bool. Set this to `true` to create a file link for the newly created file.
	// Creating a link is only possible when the file’s purpose is one of the following: `businessIcon`, `businessLogo`,
	// `customerSignature`, `disputeEvidence`, `pciDocument`, `taxDocumentUserUpload`, or `terminalReaderSplashscreen`.
	Create bool `pulumi:"create"`
	// Int. The link isn’t available after this future timestamp.
	ExpiresAt *int `pulumi:"expiresAt"`
	// Map(String). Set of key-value pairs that you can attach to an object.
	// This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `pulumi:"metadata"`
}

// FileLinkDataInput is an input type that accepts FileLinkDataArgs and FileLinkDataOutput values.
// You can construct a concrete instance of `FileLinkDataInput` via:
//
//	FileLinkDataArgs{...}
type FileLinkDataInput interface {
	pulumi.Input

	ToFileLinkDataOutput() FileLinkDataOutput
	ToFileLinkDataOutputWithContext(context.Context) FileLinkDataOutput
}

type FileLinkDataArgs struct {
	// Bool. Set this to `true` to create a file link for the newly created file.
	// Creating a link is only possible when the file’s purpose is one of the following: `businessIcon`, `businessLogo`,
	// `customerSignature`, `disputeEvidence`, `pciDocument`, `taxDocumentUserUpload`, or `terminalReaderSplashscreen`.
	Create pulumi.BoolInput `pulumi:"create"`
	// Int. The link isn’t available after this future timestamp.
	ExpiresAt pulumi.IntPtrInput `pulumi:"expiresAt"`
	// Map(String). Set of key-value pairs that you can attach to an object.
	// This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
}

func (FileLinkDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileLinkData)(nil)).Elem()
}

func (i FileLinkDataArgs) ToFileLinkDataOutput() FileLinkDataOutput {
	return i.ToFileLinkDataOutputWithContext(context.Background())
}

func (i FileLinkDataArgs) ToFileLinkDataOutputWithContext(ctx context.Context) FileLinkDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileLinkDataOutput)
}

func (i FileLinkDataArgs) ToFileLinkDataPtrOutput() FileLinkDataPtrOutput {
	return i.ToFileLinkDataPtrOutputWithContext(context.Background())
}

func (i FileLinkDataArgs) ToFileLinkDataPtrOutputWithContext(ctx context.Context) FileLinkDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileLinkDataOutput).ToFileLinkDataPtrOutputWithContext(ctx)
}

// FileLinkDataPtrInput is an input type that accepts FileLinkDataArgs, FileLinkDataPtr and FileLinkDataPtrOutput values.
// You can construct a concrete instance of `FileLinkDataPtrInput` via:
//
//	        FileLinkDataArgs{...}
//
//	or:
//
//	        nil
type FileLinkDataPtrInput interface {
	pulumi.Input

	ToFileLinkDataPtrOutput() FileLinkDataPtrOutput
	ToFileLinkDataPtrOutputWithContext(context.Context) FileLinkDataPtrOutput
}

type fileLinkDataPtrType FileLinkDataArgs

func FileLinkDataPtr(v *FileLinkDataArgs) FileLinkDataPtrInput {
	return (*fileLinkDataPtrType)(v)
}

func (*fileLinkDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileLinkData)(nil)).Elem()
}

func (i *fileLinkDataPtrType) ToFileLinkDataPtrOutput() FileLinkDataPtrOutput {
	return i.ToFileLinkDataPtrOutputWithContext(context.Background())
}

func (i *fileLinkDataPtrType) ToFileLinkDataPtrOutputWithContext(ctx context.Context) FileLinkDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileLinkDataPtrOutput)
}

type FileLinkDataOutput struct{ *pulumi.OutputState }

func (FileLinkDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileLinkData)(nil)).Elem()
}

func (o FileLinkDataOutput) ToFileLinkDataOutput() FileLinkDataOutput {
	return o
}

func (o FileLinkDataOutput) ToFileLinkDataOutputWithContext(ctx context.Context) FileLinkDataOutput {
	return o
}

func (o FileLinkDataOutput) ToFileLinkDataPtrOutput() FileLinkDataPtrOutput {
	return o.ToFileLinkDataPtrOutputWithContext(context.Background())
}

func (o FileLinkDataOutput) ToFileLinkDataPtrOutputWithContext(ctx context.Context) FileLinkDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileLinkData) *FileLinkData {
		return &v
	}).(FileLinkDataPtrOutput)
}

// Bool. Set this to `true` to create a file link for the newly created file.
// Creating a link is only possible when the file’s purpose is one of the following: `businessIcon`, `businessLogo`,
// `customerSignature`, `disputeEvidence`, `pciDocument`, `taxDocumentUserUpload`, or `terminalReaderSplashscreen`.
func (o FileLinkDataOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v FileLinkData) bool { return v.Create }).(pulumi.BoolOutput)
}

// Int. The link isn’t available after this future timestamp.
func (o FileLinkDataOutput) ExpiresAt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileLinkData) *int { return v.ExpiresAt }).(pulumi.IntPtrOutput)
}

// Map(String). Set of key-value pairs that you can attach to an object.
// This can be useful for storing additional information about the object in a structured format.
func (o FileLinkDataOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v FileLinkData) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type FileLinkDataPtrOutput struct{ *pulumi.OutputState }

func (FileLinkDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileLinkData)(nil)).Elem()
}

func (o FileLinkDataPtrOutput) ToFileLinkDataPtrOutput() FileLinkDataPtrOutput {
	return o
}

func (o FileLinkDataPtrOutput) ToFileLinkDataPtrOutputWithContext(ctx context.Context) FileLinkDataPtrOutput {
	return o
}

func (o FileLinkDataPtrOutput) Elem() FileLinkDataOutput {
	return o.ApplyT(func(v *FileLinkData) FileLinkData {
		if v != nil {
			return *v
		}
		var ret FileLinkData
		return ret
	}).(FileLinkDataOutput)
}

// Bool. Set this to `true` to create a file link for the newly created file.
// Creating a link is only possible when the file’s purpose is one of the following: `businessIcon`, `businessLogo`,
// `customerSignature`, `disputeEvidence`, `pciDocument`, `taxDocumentUserUpload`, or `terminalReaderSplashscreen`.
func (o FileLinkDataPtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileLinkData) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// Int. The link isn’t available after this future timestamp.
func (o FileLinkDataPtrOutput) ExpiresAt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileLinkData) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresAt
	}).(pulumi.IntPtrOutput)
}

// Map(String). Set of key-value pairs that you can attach to an object.
// This can be useful for storing additional information about the object in a structured format.
func (o FileLinkDataPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FileLinkData) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

type PortalConfigurationBusinessProfile struct {
	// String. The messaging shown to customers in the portal.
	Headline *string `pulumi:"headline"`
	// String. A link to the business's publicly available privacy policy.
	PrivacyPolicyUrl *string `pulumi:"privacyPolicyUrl"`
	// String. A link to the business's publicly available terms of service.
	TermsOfServiceUrl *string `pulumi:"termsOfServiceUrl"`
}

// PortalConfigurationBusinessProfileInput is an input type that accepts PortalConfigurationBusinessProfileArgs and PortalConfigurationBusinessProfileOutput values.
// You can construct a concrete instance of `PortalConfigurationBusinessProfileInput` via:
//
//	PortalConfigurationBusinessProfileArgs{...}
type PortalConfigurationBusinessProfileInput interface {
	pulumi.Input

	ToPortalConfigurationBusinessProfileOutput() PortalConfigurationBusinessProfileOutput
	ToPortalConfigurationBusinessProfileOutputWithContext(context.Context) PortalConfigurationBusinessProfileOutput
}

type PortalConfigurationBusinessProfileArgs struct {
	// String. The messaging shown to customers in the portal.
	Headline pulumi.StringPtrInput `pulumi:"headline"`
	// String. A link to the business's publicly available privacy policy.
	PrivacyPolicyUrl pulumi.StringPtrInput `pulumi:"privacyPolicyUrl"`
	// String. A link to the business's publicly available terms of service.
	TermsOfServiceUrl pulumi.StringPtrInput `pulumi:"termsOfServiceUrl"`
}

func (PortalConfigurationBusinessProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationBusinessProfile)(nil)).Elem()
}

func (i PortalConfigurationBusinessProfileArgs) ToPortalConfigurationBusinessProfileOutput() PortalConfigurationBusinessProfileOutput {
	return i.ToPortalConfigurationBusinessProfileOutputWithContext(context.Background())
}

func (i PortalConfigurationBusinessProfileArgs) ToPortalConfigurationBusinessProfileOutputWithContext(ctx context.Context) PortalConfigurationBusinessProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationBusinessProfileOutput)
}

func (i PortalConfigurationBusinessProfileArgs) ToPortalConfigurationBusinessProfilePtrOutput() PortalConfigurationBusinessProfilePtrOutput {
	return i.ToPortalConfigurationBusinessProfilePtrOutputWithContext(context.Background())
}

func (i PortalConfigurationBusinessProfileArgs) ToPortalConfigurationBusinessProfilePtrOutputWithContext(ctx context.Context) PortalConfigurationBusinessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationBusinessProfileOutput).ToPortalConfigurationBusinessProfilePtrOutputWithContext(ctx)
}

// PortalConfigurationBusinessProfilePtrInput is an input type that accepts PortalConfigurationBusinessProfileArgs, PortalConfigurationBusinessProfilePtr and PortalConfigurationBusinessProfilePtrOutput values.
// You can construct a concrete instance of `PortalConfigurationBusinessProfilePtrInput` via:
//
//	        PortalConfigurationBusinessProfileArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationBusinessProfilePtrInput interface {
	pulumi.Input

	ToPortalConfigurationBusinessProfilePtrOutput() PortalConfigurationBusinessProfilePtrOutput
	ToPortalConfigurationBusinessProfilePtrOutputWithContext(context.Context) PortalConfigurationBusinessProfilePtrOutput
}

type portalConfigurationBusinessProfilePtrType PortalConfigurationBusinessProfileArgs

func PortalConfigurationBusinessProfilePtr(v *PortalConfigurationBusinessProfileArgs) PortalConfigurationBusinessProfilePtrInput {
	return (*portalConfigurationBusinessProfilePtrType)(v)
}

func (*portalConfigurationBusinessProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationBusinessProfile)(nil)).Elem()
}

func (i *portalConfigurationBusinessProfilePtrType) ToPortalConfigurationBusinessProfilePtrOutput() PortalConfigurationBusinessProfilePtrOutput {
	return i.ToPortalConfigurationBusinessProfilePtrOutputWithContext(context.Background())
}

func (i *portalConfigurationBusinessProfilePtrType) ToPortalConfigurationBusinessProfilePtrOutputWithContext(ctx context.Context) PortalConfigurationBusinessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationBusinessProfilePtrOutput)
}

type PortalConfigurationBusinessProfileOutput struct{ *pulumi.OutputState }

func (PortalConfigurationBusinessProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationBusinessProfile)(nil)).Elem()
}

func (o PortalConfigurationBusinessProfileOutput) ToPortalConfigurationBusinessProfileOutput() PortalConfigurationBusinessProfileOutput {
	return o
}

func (o PortalConfigurationBusinessProfileOutput) ToPortalConfigurationBusinessProfileOutputWithContext(ctx context.Context) PortalConfigurationBusinessProfileOutput {
	return o
}

func (o PortalConfigurationBusinessProfileOutput) ToPortalConfigurationBusinessProfilePtrOutput() PortalConfigurationBusinessProfilePtrOutput {
	return o.ToPortalConfigurationBusinessProfilePtrOutputWithContext(context.Background())
}

func (o PortalConfigurationBusinessProfileOutput) ToPortalConfigurationBusinessProfilePtrOutputWithContext(ctx context.Context) PortalConfigurationBusinessProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationBusinessProfile) *PortalConfigurationBusinessProfile {
		return &v
	}).(PortalConfigurationBusinessProfilePtrOutput)
}

// String. The messaging shown to customers in the portal.
func (o PortalConfigurationBusinessProfileOutput) Headline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationBusinessProfile) *string { return v.Headline }).(pulumi.StringPtrOutput)
}

// String. A link to the business's publicly available privacy policy.
func (o PortalConfigurationBusinessProfileOutput) PrivacyPolicyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationBusinessProfile) *string { return v.PrivacyPolicyUrl }).(pulumi.StringPtrOutput)
}

// String. A link to the business's publicly available terms of service.
func (o PortalConfigurationBusinessProfileOutput) TermsOfServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationBusinessProfile) *string { return v.TermsOfServiceUrl }).(pulumi.StringPtrOutput)
}

type PortalConfigurationBusinessProfilePtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationBusinessProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationBusinessProfile)(nil)).Elem()
}

func (o PortalConfigurationBusinessProfilePtrOutput) ToPortalConfigurationBusinessProfilePtrOutput() PortalConfigurationBusinessProfilePtrOutput {
	return o
}

func (o PortalConfigurationBusinessProfilePtrOutput) ToPortalConfigurationBusinessProfilePtrOutputWithContext(ctx context.Context) PortalConfigurationBusinessProfilePtrOutput {
	return o
}

func (o PortalConfigurationBusinessProfilePtrOutput) Elem() PortalConfigurationBusinessProfileOutput {
	return o.ApplyT(func(v *PortalConfigurationBusinessProfile) PortalConfigurationBusinessProfile {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationBusinessProfile
		return ret
	}).(PortalConfigurationBusinessProfileOutput)
}

// String. The messaging shown to customers in the portal.
func (o PortalConfigurationBusinessProfilePtrOutput) Headline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationBusinessProfile) *string {
		if v == nil {
			return nil
		}
		return v.Headline
	}).(pulumi.StringPtrOutput)
}

// String. A link to the business's publicly available privacy policy.
func (o PortalConfigurationBusinessProfilePtrOutput) PrivacyPolicyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationBusinessProfile) *string {
		if v == nil {
			return nil
		}
		return v.PrivacyPolicyUrl
	}).(pulumi.StringPtrOutput)
}

// String. A link to the business's publicly available terms of service.
func (o PortalConfigurationBusinessProfilePtrOutput) TermsOfServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationBusinessProfile) *string {
		if v == nil {
			return nil
		}
		return v.TermsOfServiceUrl
	}).(pulumi.StringPtrOutput)
}

type PortalConfigurationFeatures struct {
	// List(Resource). Information about updating the customer details in the portal. See Customer Update.
	CustomerUpdate *PortalConfigurationFeaturesCustomerUpdate `pulumi:"customerUpdate"`
	// List(Resource). Information about showing the billing history in the portal. See Invoice History.
	InvoiceHistory *PortalConfigurationFeaturesInvoiceHistory `pulumi:"invoiceHistory"`
	// List(Resource). Information about updating payment methods in the portal. See Payment Method Update.
	PaymentMethodUpdate *PortalConfigurationFeaturesPaymentMethodUpdate `pulumi:"paymentMethodUpdate"`
	// List(Resource). Information about canceling subscriptions in the portal. See Subscription Cancel.
	SubscriptionCancel *PortalConfigurationFeaturesSubscriptionCancel `pulumi:"subscriptionCancel"`
	// List(Resource). Information about pausing subscriptions in the portal. See Subscription Pause.
	SubscriptionPauses []PortalConfigurationFeaturesSubscriptionPause `pulumi:"subscriptionPauses"`
	// List(Resource). Information about updating subscriptions in the portal. See Subscription Update.
	SubscriptionUpdates []PortalConfigurationFeaturesSubscriptionUpdate `pulumi:"subscriptionUpdates"`
}

// PortalConfigurationFeaturesInput is an input type that accepts PortalConfigurationFeaturesArgs and PortalConfigurationFeaturesOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesInput` via:
//
//	PortalConfigurationFeaturesArgs{...}
type PortalConfigurationFeaturesInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesOutput() PortalConfigurationFeaturesOutput
	ToPortalConfigurationFeaturesOutputWithContext(context.Context) PortalConfigurationFeaturesOutput
}

type PortalConfigurationFeaturesArgs struct {
	// List(Resource). Information about updating the customer details in the portal. See Customer Update.
	CustomerUpdate PortalConfigurationFeaturesCustomerUpdatePtrInput `pulumi:"customerUpdate"`
	// List(Resource). Information about showing the billing history in the portal. See Invoice History.
	InvoiceHistory PortalConfigurationFeaturesInvoiceHistoryPtrInput `pulumi:"invoiceHistory"`
	// List(Resource). Information about updating payment methods in the portal. See Payment Method Update.
	PaymentMethodUpdate PortalConfigurationFeaturesPaymentMethodUpdatePtrInput `pulumi:"paymentMethodUpdate"`
	// List(Resource). Information about canceling subscriptions in the portal. See Subscription Cancel.
	SubscriptionCancel PortalConfigurationFeaturesSubscriptionCancelPtrInput `pulumi:"subscriptionCancel"`
	// List(Resource). Information about pausing subscriptions in the portal. See Subscription Pause.
	SubscriptionPauses PortalConfigurationFeaturesSubscriptionPauseArrayInput `pulumi:"subscriptionPauses"`
	// List(Resource). Information about updating subscriptions in the portal. See Subscription Update.
	SubscriptionUpdates PortalConfigurationFeaturesSubscriptionUpdateArrayInput `pulumi:"subscriptionUpdates"`
}

func (PortalConfigurationFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeatures)(nil)).Elem()
}

func (i PortalConfigurationFeaturesArgs) ToPortalConfigurationFeaturesOutput() PortalConfigurationFeaturesOutput {
	return i.ToPortalConfigurationFeaturesOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesArgs) ToPortalConfigurationFeaturesOutputWithContext(ctx context.Context) PortalConfigurationFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesOutput)
}

func (i PortalConfigurationFeaturesArgs) ToPortalConfigurationFeaturesPtrOutput() PortalConfigurationFeaturesPtrOutput {
	return i.ToPortalConfigurationFeaturesPtrOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesArgs) ToPortalConfigurationFeaturesPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesOutput).ToPortalConfigurationFeaturesPtrOutputWithContext(ctx)
}

// PortalConfigurationFeaturesPtrInput is an input type that accepts PortalConfigurationFeaturesArgs, PortalConfigurationFeaturesPtr and PortalConfigurationFeaturesPtrOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesPtrInput` via:
//
//	        PortalConfigurationFeaturesArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationFeaturesPtrInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesPtrOutput() PortalConfigurationFeaturesPtrOutput
	ToPortalConfigurationFeaturesPtrOutputWithContext(context.Context) PortalConfigurationFeaturesPtrOutput
}

type portalConfigurationFeaturesPtrType PortalConfigurationFeaturesArgs

func PortalConfigurationFeaturesPtr(v *PortalConfigurationFeaturesArgs) PortalConfigurationFeaturesPtrInput {
	return (*portalConfigurationFeaturesPtrType)(v)
}

func (*portalConfigurationFeaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeatures)(nil)).Elem()
}

func (i *portalConfigurationFeaturesPtrType) ToPortalConfigurationFeaturesPtrOutput() PortalConfigurationFeaturesPtrOutput {
	return i.ToPortalConfigurationFeaturesPtrOutputWithContext(context.Background())
}

func (i *portalConfigurationFeaturesPtrType) ToPortalConfigurationFeaturesPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesPtrOutput)
}

type PortalConfigurationFeaturesOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeatures)(nil)).Elem()
}

func (o PortalConfigurationFeaturesOutput) ToPortalConfigurationFeaturesOutput() PortalConfigurationFeaturesOutput {
	return o
}

func (o PortalConfigurationFeaturesOutput) ToPortalConfigurationFeaturesOutputWithContext(ctx context.Context) PortalConfigurationFeaturesOutput {
	return o
}

func (o PortalConfigurationFeaturesOutput) ToPortalConfigurationFeaturesPtrOutput() PortalConfigurationFeaturesPtrOutput {
	return o.ToPortalConfigurationFeaturesPtrOutputWithContext(context.Background())
}

func (o PortalConfigurationFeaturesOutput) ToPortalConfigurationFeaturesPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationFeatures) *PortalConfigurationFeatures {
		return &v
	}).(PortalConfigurationFeaturesPtrOutput)
}

// List(Resource). Information about updating the customer details in the portal. See Customer Update.
func (o PortalConfigurationFeaturesOutput) CustomerUpdate() PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeatures) *PortalConfigurationFeaturesCustomerUpdate {
		return v.CustomerUpdate
	}).(PortalConfigurationFeaturesCustomerUpdatePtrOutput)
}

// List(Resource). Information about showing the billing history in the portal. See Invoice History.
func (o PortalConfigurationFeaturesOutput) InvoiceHistory() PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeatures) *PortalConfigurationFeaturesInvoiceHistory {
		return v.InvoiceHistory
	}).(PortalConfigurationFeaturesInvoiceHistoryPtrOutput)
}

// List(Resource). Information about updating payment methods in the portal. See Payment Method Update.
func (o PortalConfigurationFeaturesOutput) PaymentMethodUpdate() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeatures) *PortalConfigurationFeaturesPaymentMethodUpdate {
		return v.PaymentMethodUpdate
	}).(PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput)
}

// List(Resource). Information about canceling subscriptions in the portal. See Subscription Cancel.
func (o PortalConfigurationFeaturesOutput) SubscriptionCancel() PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeatures) *PortalConfigurationFeaturesSubscriptionCancel {
		return v.SubscriptionCancel
	}).(PortalConfigurationFeaturesSubscriptionCancelPtrOutput)
}

// List(Resource). Information about pausing subscriptions in the portal. See Subscription Pause.
func (o PortalConfigurationFeaturesOutput) SubscriptionPauses() PortalConfigurationFeaturesSubscriptionPauseArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeatures) []PortalConfigurationFeaturesSubscriptionPause {
		return v.SubscriptionPauses
	}).(PortalConfigurationFeaturesSubscriptionPauseArrayOutput)
}

// List(Resource). Information about updating subscriptions in the portal. See Subscription Update.
func (o PortalConfigurationFeaturesOutput) SubscriptionUpdates() PortalConfigurationFeaturesSubscriptionUpdateArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeatures) []PortalConfigurationFeaturesSubscriptionUpdate {
		return v.SubscriptionUpdates
	}).(PortalConfigurationFeaturesSubscriptionUpdateArrayOutput)
}

type PortalConfigurationFeaturesPtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeatures)(nil)).Elem()
}

func (o PortalConfigurationFeaturesPtrOutput) ToPortalConfigurationFeaturesPtrOutput() PortalConfigurationFeaturesPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesPtrOutput) ToPortalConfigurationFeaturesPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesPtrOutput) Elem() PortalConfigurationFeaturesOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) PortalConfigurationFeatures {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationFeatures
		return ret
	}).(PortalConfigurationFeaturesOutput)
}

// List(Resource). Information about updating the customer details in the portal. See Customer Update.
func (o PortalConfigurationFeaturesPtrOutput) CustomerUpdate() PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) *PortalConfigurationFeaturesCustomerUpdate {
		if v == nil {
			return nil
		}
		return v.CustomerUpdate
	}).(PortalConfigurationFeaturesCustomerUpdatePtrOutput)
}

// List(Resource). Information about showing the billing history in the portal. See Invoice History.
func (o PortalConfigurationFeaturesPtrOutput) InvoiceHistory() PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) *PortalConfigurationFeaturesInvoiceHistory {
		if v == nil {
			return nil
		}
		return v.InvoiceHistory
	}).(PortalConfigurationFeaturesInvoiceHistoryPtrOutput)
}

// List(Resource). Information about updating payment methods in the portal. See Payment Method Update.
func (o PortalConfigurationFeaturesPtrOutput) PaymentMethodUpdate() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) *PortalConfigurationFeaturesPaymentMethodUpdate {
		if v == nil {
			return nil
		}
		return v.PaymentMethodUpdate
	}).(PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput)
}

// List(Resource). Information about canceling subscriptions in the portal. See Subscription Cancel.
func (o PortalConfigurationFeaturesPtrOutput) SubscriptionCancel() PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) *PortalConfigurationFeaturesSubscriptionCancel {
		if v == nil {
			return nil
		}
		return v.SubscriptionCancel
	}).(PortalConfigurationFeaturesSubscriptionCancelPtrOutput)
}

// List(Resource). Information about pausing subscriptions in the portal. See Subscription Pause.
func (o PortalConfigurationFeaturesPtrOutput) SubscriptionPauses() PortalConfigurationFeaturesSubscriptionPauseArrayOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) []PortalConfigurationFeaturesSubscriptionPause {
		if v == nil {
			return nil
		}
		return v.SubscriptionPauses
	}).(PortalConfigurationFeaturesSubscriptionPauseArrayOutput)
}

// List(Resource). Information about updating subscriptions in the portal. See Subscription Update.
func (o PortalConfigurationFeaturesPtrOutput) SubscriptionUpdates() PortalConfigurationFeaturesSubscriptionUpdateArrayOutput {
	return o.ApplyT(func(v *PortalConfigurationFeatures) []PortalConfigurationFeaturesSubscriptionUpdate {
		if v == nil {
			return nil
		}
		return v.SubscriptionUpdates
	}).(PortalConfigurationFeaturesSubscriptionUpdateArrayOutput)
}

type PortalConfigurationFeaturesCustomerUpdate struct {
	// List(String). The types of customer updates that are supported [`name`, `email`, `address`, `shipping`, `phone`, `taxId`]. When empty, customers are not updatable.
	AllowedUpdates []string `pulumi:"allowedUpdates"`
	// Bool. Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
}

// PortalConfigurationFeaturesCustomerUpdateInput is an input type that accepts PortalConfigurationFeaturesCustomerUpdateArgs and PortalConfigurationFeaturesCustomerUpdateOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesCustomerUpdateInput` via:
//
//	PortalConfigurationFeaturesCustomerUpdateArgs{...}
type PortalConfigurationFeaturesCustomerUpdateInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesCustomerUpdateOutput() PortalConfigurationFeaturesCustomerUpdateOutput
	ToPortalConfigurationFeaturesCustomerUpdateOutputWithContext(context.Context) PortalConfigurationFeaturesCustomerUpdateOutput
}

type PortalConfigurationFeaturesCustomerUpdateArgs struct {
	// List(String). The types of customer updates that are supported [`name`, `email`, `address`, `shipping`, `phone`, `taxId`]. When empty, customers are not updatable.
	AllowedUpdates pulumi.StringArrayInput `pulumi:"allowedUpdates"`
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (PortalConfigurationFeaturesCustomerUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesCustomerUpdate)(nil)).Elem()
}

func (i PortalConfigurationFeaturesCustomerUpdateArgs) ToPortalConfigurationFeaturesCustomerUpdateOutput() PortalConfigurationFeaturesCustomerUpdateOutput {
	return i.ToPortalConfigurationFeaturesCustomerUpdateOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesCustomerUpdateArgs) ToPortalConfigurationFeaturesCustomerUpdateOutputWithContext(ctx context.Context) PortalConfigurationFeaturesCustomerUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesCustomerUpdateOutput)
}

func (i PortalConfigurationFeaturesCustomerUpdateArgs) ToPortalConfigurationFeaturesCustomerUpdatePtrOutput() PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return i.ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesCustomerUpdateArgs) ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesCustomerUpdateOutput).ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(ctx)
}

// PortalConfigurationFeaturesCustomerUpdatePtrInput is an input type that accepts PortalConfigurationFeaturesCustomerUpdateArgs, PortalConfigurationFeaturesCustomerUpdatePtr and PortalConfigurationFeaturesCustomerUpdatePtrOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesCustomerUpdatePtrInput` via:
//
//	        PortalConfigurationFeaturesCustomerUpdateArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationFeaturesCustomerUpdatePtrInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesCustomerUpdatePtrOutput() PortalConfigurationFeaturesCustomerUpdatePtrOutput
	ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(context.Context) PortalConfigurationFeaturesCustomerUpdatePtrOutput
}

type portalConfigurationFeaturesCustomerUpdatePtrType PortalConfigurationFeaturesCustomerUpdateArgs

func PortalConfigurationFeaturesCustomerUpdatePtr(v *PortalConfigurationFeaturesCustomerUpdateArgs) PortalConfigurationFeaturesCustomerUpdatePtrInput {
	return (*portalConfigurationFeaturesCustomerUpdatePtrType)(v)
}

func (*portalConfigurationFeaturesCustomerUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesCustomerUpdate)(nil)).Elem()
}

func (i *portalConfigurationFeaturesCustomerUpdatePtrType) ToPortalConfigurationFeaturesCustomerUpdatePtrOutput() PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return i.ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(context.Background())
}

func (i *portalConfigurationFeaturesCustomerUpdatePtrType) ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesCustomerUpdatePtrOutput)
}

type PortalConfigurationFeaturesCustomerUpdateOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesCustomerUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesCustomerUpdate)(nil)).Elem()
}

func (o PortalConfigurationFeaturesCustomerUpdateOutput) ToPortalConfigurationFeaturesCustomerUpdateOutput() PortalConfigurationFeaturesCustomerUpdateOutput {
	return o
}

func (o PortalConfigurationFeaturesCustomerUpdateOutput) ToPortalConfigurationFeaturesCustomerUpdateOutputWithContext(ctx context.Context) PortalConfigurationFeaturesCustomerUpdateOutput {
	return o
}

func (o PortalConfigurationFeaturesCustomerUpdateOutput) ToPortalConfigurationFeaturesCustomerUpdatePtrOutput() PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return o.ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(context.Background())
}

func (o PortalConfigurationFeaturesCustomerUpdateOutput) ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationFeaturesCustomerUpdate) *PortalConfigurationFeaturesCustomerUpdate {
		return &v
	}).(PortalConfigurationFeaturesCustomerUpdatePtrOutput)
}

// List(String). The types of customer updates that are supported [`name`, `email`, `address`, `shipping`, `phone`, `taxId`]. When empty, customers are not updatable.
func (o PortalConfigurationFeaturesCustomerUpdateOutput) AllowedUpdates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesCustomerUpdate) []string { return v.AllowedUpdates }).(pulumi.StringArrayOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesCustomerUpdateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesCustomerUpdate) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type PortalConfigurationFeaturesCustomerUpdatePtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesCustomerUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesCustomerUpdate)(nil)).Elem()
}

func (o PortalConfigurationFeaturesCustomerUpdatePtrOutput) ToPortalConfigurationFeaturesCustomerUpdatePtrOutput() PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return o
}

func (o PortalConfigurationFeaturesCustomerUpdatePtrOutput) ToPortalConfigurationFeaturesCustomerUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesCustomerUpdatePtrOutput {
	return o
}

func (o PortalConfigurationFeaturesCustomerUpdatePtrOutput) Elem() PortalConfigurationFeaturesCustomerUpdateOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesCustomerUpdate) PortalConfigurationFeaturesCustomerUpdate {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationFeaturesCustomerUpdate
		return ret
	}).(PortalConfigurationFeaturesCustomerUpdateOutput)
}

// List(String). The types of customer updates that are supported [`name`, `email`, `address`, `shipping`, `phone`, `taxId`]. When empty, customers are not updatable.
func (o PortalConfigurationFeaturesCustomerUpdatePtrOutput) AllowedUpdates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesCustomerUpdate) []string {
		if v == nil {
			return nil
		}
		return v.AllowedUpdates
	}).(pulumi.StringArrayOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesCustomerUpdatePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesCustomerUpdate) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type PortalConfigurationFeaturesInvoiceHistory struct {
	// Bool. Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
}

// PortalConfigurationFeaturesInvoiceHistoryInput is an input type that accepts PortalConfigurationFeaturesInvoiceHistoryArgs and PortalConfigurationFeaturesInvoiceHistoryOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesInvoiceHistoryInput` via:
//
//	PortalConfigurationFeaturesInvoiceHistoryArgs{...}
type PortalConfigurationFeaturesInvoiceHistoryInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesInvoiceHistoryOutput() PortalConfigurationFeaturesInvoiceHistoryOutput
	ToPortalConfigurationFeaturesInvoiceHistoryOutputWithContext(context.Context) PortalConfigurationFeaturesInvoiceHistoryOutput
}

type PortalConfigurationFeaturesInvoiceHistoryArgs struct {
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (PortalConfigurationFeaturesInvoiceHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesInvoiceHistory)(nil)).Elem()
}

func (i PortalConfigurationFeaturesInvoiceHistoryArgs) ToPortalConfigurationFeaturesInvoiceHistoryOutput() PortalConfigurationFeaturesInvoiceHistoryOutput {
	return i.ToPortalConfigurationFeaturesInvoiceHistoryOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesInvoiceHistoryArgs) ToPortalConfigurationFeaturesInvoiceHistoryOutputWithContext(ctx context.Context) PortalConfigurationFeaturesInvoiceHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesInvoiceHistoryOutput)
}

func (i PortalConfigurationFeaturesInvoiceHistoryArgs) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutput() PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return i.ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesInvoiceHistoryArgs) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesInvoiceHistoryOutput).ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(ctx)
}

// PortalConfigurationFeaturesInvoiceHistoryPtrInput is an input type that accepts PortalConfigurationFeaturesInvoiceHistoryArgs, PortalConfigurationFeaturesInvoiceHistoryPtr and PortalConfigurationFeaturesInvoiceHistoryPtrOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesInvoiceHistoryPtrInput` via:
//
//	        PortalConfigurationFeaturesInvoiceHistoryArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationFeaturesInvoiceHistoryPtrInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesInvoiceHistoryPtrOutput() PortalConfigurationFeaturesInvoiceHistoryPtrOutput
	ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(context.Context) PortalConfigurationFeaturesInvoiceHistoryPtrOutput
}

type portalConfigurationFeaturesInvoiceHistoryPtrType PortalConfigurationFeaturesInvoiceHistoryArgs

func PortalConfigurationFeaturesInvoiceHistoryPtr(v *PortalConfigurationFeaturesInvoiceHistoryArgs) PortalConfigurationFeaturesInvoiceHistoryPtrInput {
	return (*portalConfigurationFeaturesInvoiceHistoryPtrType)(v)
}

func (*portalConfigurationFeaturesInvoiceHistoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesInvoiceHistory)(nil)).Elem()
}

func (i *portalConfigurationFeaturesInvoiceHistoryPtrType) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutput() PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return i.ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(context.Background())
}

func (i *portalConfigurationFeaturesInvoiceHistoryPtrType) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesInvoiceHistoryPtrOutput)
}

type PortalConfigurationFeaturesInvoiceHistoryOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesInvoiceHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesInvoiceHistory)(nil)).Elem()
}

func (o PortalConfigurationFeaturesInvoiceHistoryOutput) ToPortalConfigurationFeaturesInvoiceHistoryOutput() PortalConfigurationFeaturesInvoiceHistoryOutput {
	return o
}

func (o PortalConfigurationFeaturesInvoiceHistoryOutput) ToPortalConfigurationFeaturesInvoiceHistoryOutputWithContext(ctx context.Context) PortalConfigurationFeaturesInvoiceHistoryOutput {
	return o
}

func (o PortalConfigurationFeaturesInvoiceHistoryOutput) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutput() PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return o.ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(context.Background())
}

func (o PortalConfigurationFeaturesInvoiceHistoryOutput) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationFeaturesInvoiceHistory) *PortalConfigurationFeaturesInvoiceHistory {
		return &v
	}).(PortalConfigurationFeaturesInvoiceHistoryPtrOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesInvoiceHistoryOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesInvoiceHistory) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type PortalConfigurationFeaturesInvoiceHistoryPtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesInvoiceHistoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesInvoiceHistory)(nil)).Elem()
}

func (o PortalConfigurationFeaturesInvoiceHistoryPtrOutput) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutput() PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesInvoiceHistoryPtrOutput) ToPortalConfigurationFeaturesInvoiceHistoryPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesInvoiceHistoryPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesInvoiceHistoryPtrOutput) Elem() PortalConfigurationFeaturesInvoiceHistoryOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesInvoiceHistory) PortalConfigurationFeaturesInvoiceHistory {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationFeaturesInvoiceHistory
		return ret
	}).(PortalConfigurationFeaturesInvoiceHistoryOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesInvoiceHistoryPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesInvoiceHistory) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type PortalConfigurationFeaturesPaymentMethodUpdate struct {
	// Bool. Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
}

// PortalConfigurationFeaturesPaymentMethodUpdateInput is an input type that accepts PortalConfigurationFeaturesPaymentMethodUpdateArgs and PortalConfigurationFeaturesPaymentMethodUpdateOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesPaymentMethodUpdateInput` via:
//
//	PortalConfigurationFeaturesPaymentMethodUpdateArgs{...}
type PortalConfigurationFeaturesPaymentMethodUpdateInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesPaymentMethodUpdateOutput() PortalConfigurationFeaturesPaymentMethodUpdateOutput
	ToPortalConfigurationFeaturesPaymentMethodUpdateOutputWithContext(context.Context) PortalConfigurationFeaturesPaymentMethodUpdateOutput
}

type PortalConfigurationFeaturesPaymentMethodUpdateArgs struct {
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (PortalConfigurationFeaturesPaymentMethodUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesPaymentMethodUpdate)(nil)).Elem()
}

func (i PortalConfigurationFeaturesPaymentMethodUpdateArgs) ToPortalConfigurationFeaturesPaymentMethodUpdateOutput() PortalConfigurationFeaturesPaymentMethodUpdateOutput {
	return i.ToPortalConfigurationFeaturesPaymentMethodUpdateOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesPaymentMethodUpdateArgs) ToPortalConfigurationFeaturesPaymentMethodUpdateOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPaymentMethodUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesPaymentMethodUpdateOutput)
}

func (i PortalConfigurationFeaturesPaymentMethodUpdateArgs) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutput() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return i.ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesPaymentMethodUpdateArgs) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesPaymentMethodUpdateOutput).ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(ctx)
}

// PortalConfigurationFeaturesPaymentMethodUpdatePtrInput is an input type that accepts PortalConfigurationFeaturesPaymentMethodUpdateArgs, PortalConfigurationFeaturesPaymentMethodUpdatePtr and PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesPaymentMethodUpdatePtrInput` via:
//
//	        PortalConfigurationFeaturesPaymentMethodUpdateArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationFeaturesPaymentMethodUpdatePtrInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutput() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput
	ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(context.Context) PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput
}

type portalConfigurationFeaturesPaymentMethodUpdatePtrType PortalConfigurationFeaturesPaymentMethodUpdateArgs

func PortalConfigurationFeaturesPaymentMethodUpdatePtr(v *PortalConfigurationFeaturesPaymentMethodUpdateArgs) PortalConfigurationFeaturesPaymentMethodUpdatePtrInput {
	return (*portalConfigurationFeaturesPaymentMethodUpdatePtrType)(v)
}

func (*portalConfigurationFeaturesPaymentMethodUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesPaymentMethodUpdate)(nil)).Elem()
}

func (i *portalConfigurationFeaturesPaymentMethodUpdatePtrType) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutput() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return i.ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(context.Background())
}

func (i *portalConfigurationFeaturesPaymentMethodUpdatePtrType) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput)
}

type PortalConfigurationFeaturesPaymentMethodUpdateOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesPaymentMethodUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesPaymentMethodUpdate)(nil)).Elem()
}

func (o PortalConfigurationFeaturesPaymentMethodUpdateOutput) ToPortalConfigurationFeaturesPaymentMethodUpdateOutput() PortalConfigurationFeaturesPaymentMethodUpdateOutput {
	return o
}

func (o PortalConfigurationFeaturesPaymentMethodUpdateOutput) ToPortalConfigurationFeaturesPaymentMethodUpdateOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPaymentMethodUpdateOutput {
	return o
}

func (o PortalConfigurationFeaturesPaymentMethodUpdateOutput) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutput() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return o.ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(context.Background())
}

func (o PortalConfigurationFeaturesPaymentMethodUpdateOutput) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationFeaturesPaymentMethodUpdate) *PortalConfigurationFeaturesPaymentMethodUpdate {
		return &v
	}).(PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesPaymentMethodUpdateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesPaymentMethodUpdate) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesPaymentMethodUpdate)(nil)).Elem()
}

func (o PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutput() PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return o
}

func (o PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput) ToPortalConfigurationFeaturesPaymentMethodUpdatePtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput {
	return o
}

func (o PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput) Elem() PortalConfigurationFeaturesPaymentMethodUpdateOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesPaymentMethodUpdate) PortalConfigurationFeaturesPaymentMethodUpdate {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationFeaturesPaymentMethodUpdate
		return ret
	}).(PortalConfigurationFeaturesPaymentMethodUpdateOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesPaymentMethodUpdate) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionCancel struct {
	// List(Resource). Whether the cancellation reasons will be collected in the portal and which options are exposed to the customer. Details of this field is in Cancellation Reason.
	CancellationReason *PortalConfigurationFeaturesSubscriptionCancelCancellationReason `pulumi:"cancellationReason"`
	// Bool. Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
	// String. Whether to cancel subscriptions immediately or at the end of the billing period. Valid value is either `immediately` or `atPeriodEnd`
	Mode *string `pulumi:"mode"`
	// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
	ProrationBehavior *string `pulumi:"prorationBehavior"`
}

// PortalConfigurationFeaturesSubscriptionCancelInput is an input type that accepts PortalConfigurationFeaturesSubscriptionCancelArgs and PortalConfigurationFeaturesSubscriptionCancelOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionCancelInput` via:
//
//	PortalConfigurationFeaturesSubscriptionCancelArgs{...}
type PortalConfigurationFeaturesSubscriptionCancelInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionCancelOutput() PortalConfigurationFeaturesSubscriptionCancelOutput
	ToPortalConfigurationFeaturesSubscriptionCancelOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionCancelOutput
}

type PortalConfigurationFeaturesSubscriptionCancelArgs struct {
	// List(Resource). Whether the cancellation reasons will be collected in the portal and which options are exposed to the customer. Details of this field is in Cancellation Reason.
	CancellationReason PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrInput `pulumi:"cancellationReason"`
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// String. Whether to cancel subscriptions immediately or at the end of the billing period. Valid value is either `immediately` or `atPeriodEnd`
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
	ProrationBehavior pulumi.StringPtrInput `pulumi:"prorationBehavior"`
}

func (PortalConfigurationFeaturesSubscriptionCancelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancel)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionCancelArgs) ToPortalConfigurationFeaturesSubscriptionCancelOutput() PortalConfigurationFeaturesSubscriptionCancelOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionCancelOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionCancelArgs) ToPortalConfigurationFeaturesSubscriptionCancelOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionCancelOutput)
}

func (i PortalConfigurationFeaturesSubscriptionCancelArgs) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutput() PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionCancelArgs) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionCancelOutput).ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(ctx)
}

// PortalConfigurationFeaturesSubscriptionCancelPtrInput is an input type that accepts PortalConfigurationFeaturesSubscriptionCancelArgs, PortalConfigurationFeaturesSubscriptionCancelPtr and PortalConfigurationFeaturesSubscriptionCancelPtrOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionCancelPtrInput` via:
//
//	        PortalConfigurationFeaturesSubscriptionCancelArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationFeaturesSubscriptionCancelPtrInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionCancelPtrOutput() PortalConfigurationFeaturesSubscriptionCancelPtrOutput
	ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionCancelPtrOutput
}

type portalConfigurationFeaturesSubscriptionCancelPtrType PortalConfigurationFeaturesSubscriptionCancelArgs

func PortalConfigurationFeaturesSubscriptionCancelPtr(v *PortalConfigurationFeaturesSubscriptionCancelArgs) PortalConfigurationFeaturesSubscriptionCancelPtrInput {
	return (*portalConfigurationFeaturesSubscriptionCancelPtrType)(v)
}

func (*portalConfigurationFeaturesSubscriptionCancelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesSubscriptionCancel)(nil)).Elem()
}

func (i *portalConfigurationFeaturesSubscriptionCancelPtrType) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutput() PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(context.Background())
}

func (i *portalConfigurationFeaturesSubscriptionCancelPtrType) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionCancelPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionCancelOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionCancelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancel)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionCancelOutput) ToPortalConfigurationFeaturesSubscriptionCancelOutput() PortalConfigurationFeaturesSubscriptionCancelOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelOutput) ToPortalConfigurationFeaturesSubscriptionCancelOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelOutput) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutput() PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return o.ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(context.Background())
}

func (o PortalConfigurationFeaturesSubscriptionCancelOutput) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationFeaturesSubscriptionCancel) *PortalConfigurationFeaturesSubscriptionCancel {
		return &v
	}).(PortalConfigurationFeaturesSubscriptionCancelPtrOutput)
}

// List(Resource). Whether the cancellation reasons will be collected in the portal and which options are exposed to the customer. Details of this field is in Cancellation Reason.
func (o PortalConfigurationFeaturesSubscriptionCancelOutput) CancellationReason() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionCancel) *PortalConfigurationFeaturesSubscriptionCancelCancellationReason {
		return v.CancellationReason
	}).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesSubscriptionCancelOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionCancel) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// String. Whether to cancel subscriptions immediately or at the end of the billing period. Valid value is either `immediately` or `atPeriodEnd`
func (o PortalConfigurationFeaturesSubscriptionCancelOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionCancel) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
func (o PortalConfigurationFeaturesSubscriptionCancelOutput) ProrationBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionCancel) *string { return v.ProrationBehavior }).(pulumi.StringPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionCancelPtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionCancelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesSubscriptionCancel)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutput() PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) ToPortalConfigurationFeaturesSubscriptionCancelPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) Elem() PortalConfigurationFeaturesSubscriptionCancelOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancel) PortalConfigurationFeaturesSubscriptionCancel {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationFeaturesSubscriptionCancel
		return ret
	}).(PortalConfigurationFeaturesSubscriptionCancelOutput)
}

// List(Resource). Whether the cancellation reasons will be collected in the portal and which options are exposed to the customer. Details of this field is in Cancellation Reason.
func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) CancellationReason() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancel) *PortalConfigurationFeaturesSubscriptionCancelCancellationReason {
		if v == nil {
			return nil
		}
		return v.CancellationReason
	}).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancel) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// String. Whether to cancel subscriptions immediately or at the end of the billing period. Valid value is either `immediately` or `atPeriodEnd`
func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancel) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
func (o PortalConfigurationFeaturesSubscriptionCancelPtrOutput) ProrationBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancel) *string {
		if v == nil {
			return nil
		}
		return v.ProrationBehavior
	}).(pulumi.StringPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionCancelCancellationReason struct {
	// Bool. Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
	// List(String). Which cancellation reasons will be given as options to the customer. Supported values are `tooExpensive`, `missingFeatures`, `switchedService`, `unused`, `customerService`, `tooComplex`, `lowQuality`, and `other`.
	Options []string `pulumi:"options"`
}

// PortalConfigurationFeaturesSubscriptionCancelCancellationReasonInput is an input type that accepts PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs and PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionCancelCancellationReasonInput` via:
//
//	PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs{...}
type PortalConfigurationFeaturesSubscriptionCancelCancellationReasonInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput
	ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput
}

type PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs struct {
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// List(String). Which cancellation reasons will be given as options to the customer. Supported values are `tooExpensive`, `missingFeatures`, `switchedService`, `unused`, `customerService`, `tooComplex`, `lowQuality`, and `other`.
	Options pulumi.StringArrayInput `pulumi:"options"`
}

func (PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancelCancellationReason)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput)
}

func (i PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput).ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(ctx)
}

// PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrInput is an input type that accepts PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs, PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtr and PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrInput` via:
//
//	        PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput
	ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput
}

type portalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrType PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs

func PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtr(v *PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrInput {
	return (*portalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrType)(v)
}

func (*portalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesSubscriptionCancelCancellationReason)(nil)).Elem()
}

func (i *portalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrType) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(context.Background())
}

func (i *portalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrType) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancelCancellationReason)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return o.ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(context.Background())
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationFeaturesSubscriptionCancelCancellationReason) *PortalConfigurationFeaturesSubscriptionCancelCancellationReason {
		return &v
	}).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionCancelCancellationReason) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// List(String). Which cancellation reasons will be given as options to the customer. Supported values are `tooExpensive`, `missingFeatures`, `switchedService`, `unused`, `customerService`, `tooComplex`, `lowQuality`, and `other`.
func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionCancelCancellationReason) []string { return v.Options }).(pulumi.StringArrayOutput)
}

type PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationFeaturesSubscriptionCancelCancellationReason)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput) ToPortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput) Elem() PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancelCancellationReason) PortalConfigurationFeaturesSubscriptionCancelCancellationReason {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationFeaturesSubscriptionCancelCancellationReason
		return ret
	}).(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancelCancellationReason) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List(String). Which cancellation reasons will be given as options to the customer. Supported values are `tooExpensive`, `missingFeatures`, `switchedService`, `unused`, `customerService`, `tooComplex`, `lowQuality`, and `other`.
func (o PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PortalConfigurationFeaturesSubscriptionCancelCancellationReason) []string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringArrayOutput)
}

type PortalConfigurationFeaturesSubscriptionPause struct {
	// Bool. Whether the feature is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// PortalConfigurationFeaturesSubscriptionPauseInput is an input type that accepts PortalConfigurationFeaturesSubscriptionPauseArgs and PortalConfigurationFeaturesSubscriptionPauseOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionPauseInput` via:
//
//	PortalConfigurationFeaturesSubscriptionPauseArgs{...}
type PortalConfigurationFeaturesSubscriptionPauseInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionPauseOutput() PortalConfigurationFeaturesSubscriptionPauseOutput
	ToPortalConfigurationFeaturesSubscriptionPauseOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionPauseOutput
}

type PortalConfigurationFeaturesSubscriptionPauseArgs struct {
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (PortalConfigurationFeaturesSubscriptionPauseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionPause)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionPauseArgs) ToPortalConfigurationFeaturesSubscriptionPauseOutput() PortalConfigurationFeaturesSubscriptionPauseOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionPauseOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionPauseArgs) ToPortalConfigurationFeaturesSubscriptionPauseOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionPauseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionPauseOutput)
}

// PortalConfigurationFeaturesSubscriptionPauseArrayInput is an input type that accepts PortalConfigurationFeaturesSubscriptionPauseArray and PortalConfigurationFeaturesSubscriptionPauseArrayOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionPauseArrayInput` via:
//
//	PortalConfigurationFeaturesSubscriptionPauseArray{ PortalConfigurationFeaturesSubscriptionPauseArgs{...} }
type PortalConfigurationFeaturesSubscriptionPauseArrayInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionPauseArrayOutput() PortalConfigurationFeaturesSubscriptionPauseArrayOutput
	ToPortalConfigurationFeaturesSubscriptionPauseArrayOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionPauseArrayOutput
}

type PortalConfigurationFeaturesSubscriptionPauseArray []PortalConfigurationFeaturesSubscriptionPauseInput

func (PortalConfigurationFeaturesSubscriptionPauseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortalConfigurationFeaturesSubscriptionPause)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionPauseArray) ToPortalConfigurationFeaturesSubscriptionPauseArrayOutput() PortalConfigurationFeaturesSubscriptionPauseArrayOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionPauseArrayOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionPauseArray) ToPortalConfigurationFeaturesSubscriptionPauseArrayOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionPauseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionPauseArrayOutput)
}

type PortalConfigurationFeaturesSubscriptionPauseOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionPauseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionPause)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionPauseOutput) ToPortalConfigurationFeaturesSubscriptionPauseOutput() PortalConfigurationFeaturesSubscriptionPauseOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionPauseOutput) ToPortalConfigurationFeaturesSubscriptionPauseOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionPauseOutput {
	return o
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesSubscriptionPauseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionPause) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionPauseArrayOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionPauseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortalConfigurationFeaturesSubscriptionPause)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionPauseArrayOutput) ToPortalConfigurationFeaturesSubscriptionPauseArrayOutput() PortalConfigurationFeaturesSubscriptionPauseArrayOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionPauseArrayOutput) ToPortalConfigurationFeaturesSubscriptionPauseArrayOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionPauseArrayOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionPauseArrayOutput) Index(i pulumi.IntInput) PortalConfigurationFeaturesSubscriptionPauseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortalConfigurationFeaturesSubscriptionPause {
		return vs[0].([]PortalConfigurationFeaturesSubscriptionPause)[vs[1].(int)]
	}).(PortalConfigurationFeaturesSubscriptionPauseOutput)
}

type PortalConfigurationFeaturesSubscriptionUpdate struct {
	// List(String). The types of subscription updates that are supported. When empty, subscriptions are not updatable. Supported values are `price`, `quantity`, and `promotionCode`.
	DefaultAllowedUpdates []string `pulumi:"defaultAllowedUpdates"`
	// Bool. Whether the feature is enabled.
	Enabled bool `pulumi:"enabled"`
	// List(Resource). The list of products that support subscription updates. See details Products.
	Products []PortalConfigurationFeaturesSubscriptionUpdateProduct `pulumi:"products"`
	// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
	ProrationBehavior *string `pulumi:"prorationBehavior"`
}

// PortalConfigurationFeaturesSubscriptionUpdateInput is an input type that accepts PortalConfigurationFeaturesSubscriptionUpdateArgs and PortalConfigurationFeaturesSubscriptionUpdateOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionUpdateInput` via:
//
//	PortalConfigurationFeaturesSubscriptionUpdateArgs{...}
type PortalConfigurationFeaturesSubscriptionUpdateInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionUpdateOutput() PortalConfigurationFeaturesSubscriptionUpdateOutput
	ToPortalConfigurationFeaturesSubscriptionUpdateOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionUpdateOutput
}

type PortalConfigurationFeaturesSubscriptionUpdateArgs struct {
	// List(String). The types of subscription updates that are supported. When empty, subscriptions are not updatable. Supported values are `price`, `quantity`, and `promotionCode`.
	DefaultAllowedUpdates pulumi.StringArrayInput `pulumi:"defaultAllowedUpdates"`
	// Bool. Whether the feature is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// List(Resource). The list of products that support subscription updates. See details Products.
	Products PortalConfigurationFeaturesSubscriptionUpdateProductArrayInput `pulumi:"products"`
	// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
	ProrationBehavior pulumi.StringPtrInput `pulumi:"prorationBehavior"`
}

func (PortalConfigurationFeaturesSubscriptionUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdate)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionUpdateArgs) ToPortalConfigurationFeaturesSubscriptionUpdateOutput() PortalConfigurationFeaturesSubscriptionUpdateOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionUpdateOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionUpdateArgs) ToPortalConfigurationFeaturesSubscriptionUpdateOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionUpdateOutput)
}

// PortalConfigurationFeaturesSubscriptionUpdateArrayInput is an input type that accepts PortalConfigurationFeaturesSubscriptionUpdateArray and PortalConfigurationFeaturesSubscriptionUpdateArrayOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionUpdateArrayInput` via:
//
//	PortalConfigurationFeaturesSubscriptionUpdateArray{ PortalConfigurationFeaturesSubscriptionUpdateArgs{...} }
type PortalConfigurationFeaturesSubscriptionUpdateArrayInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutput() PortalConfigurationFeaturesSubscriptionUpdateArrayOutput
	ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionUpdateArrayOutput
}

type PortalConfigurationFeaturesSubscriptionUpdateArray []PortalConfigurationFeaturesSubscriptionUpdateInput

func (PortalConfigurationFeaturesSubscriptionUpdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortalConfigurationFeaturesSubscriptionUpdate)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionUpdateArray) ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutput() PortalConfigurationFeaturesSubscriptionUpdateArrayOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionUpdateArray) ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionUpdateArrayOutput)
}

type PortalConfigurationFeaturesSubscriptionUpdateOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdate)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionUpdateOutput) ToPortalConfigurationFeaturesSubscriptionUpdateOutput() PortalConfigurationFeaturesSubscriptionUpdateOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionUpdateOutput) ToPortalConfigurationFeaturesSubscriptionUpdateOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateOutput {
	return o
}

// List(String). The types of subscription updates that are supported. When empty, subscriptions are not updatable. Supported values are `price`, `quantity`, and `promotionCode`.
func (o PortalConfigurationFeaturesSubscriptionUpdateOutput) DefaultAllowedUpdates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionUpdate) []string { return v.DefaultAllowedUpdates }).(pulumi.StringArrayOutput)
}

// Bool. Whether the feature is enabled.
func (o PortalConfigurationFeaturesSubscriptionUpdateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionUpdate) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// List(Resource). The list of products that support subscription updates. See details Products.
func (o PortalConfigurationFeaturesSubscriptionUpdateOutput) Products() PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionUpdate) []PortalConfigurationFeaturesSubscriptionUpdateProduct {
		return v.Products
	}).(PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput)
}

// String. Whether to create prorations when canceling subscriptions. Possible values are `none` and `createProrations`, which is only compatible with `mode=immediately`. No prorations are generated when canceling a subscription at the end of its natural billing period.
func (o PortalConfigurationFeaturesSubscriptionUpdateOutput) ProrationBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionUpdate) *string { return v.ProrationBehavior }).(pulumi.StringPtrOutput)
}

type PortalConfigurationFeaturesSubscriptionUpdateArrayOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionUpdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortalConfigurationFeaturesSubscriptionUpdate)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionUpdateArrayOutput) ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutput() PortalConfigurationFeaturesSubscriptionUpdateArrayOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionUpdateArrayOutput) ToPortalConfigurationFeaturesSubscriptionUpdateArrayOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateArrayOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionUpdateArrayOutput) Index(i pulumi.IntInput) PortalConfigurationFeaturesSubscriptionUpdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortalConfigurationFeaturesSubscriptionUpdate {
		return vs[0].([]PortalConfigurationFeaturesSubscriptionUpdate)[vs[1].(int)]
	}).(PortalConfigurationFeaturesSubscriptionUpdateOutput)
}

type PortalConfigurationFeaturesSubscriptionUpdateProduct struct {
	// List(String). The list of price IDs for the product that a subscription can be updated to.
	Prices []string `pulumi:"prices"`
	// String. The product id.
	Product string `pulumi:"product"`
}

// PortalConfigurationFeaturesSubscriptionUpdateProductInput is an input type that accepts PortalConfigurationFeaturesSubscriptionUpdateProductArgs and PortalConfigurationFeaturesSubscriptionUpdateProductOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionUpdateProductInput` via:
//
//	PortalConfigurationFeaturesSubscriptionUpdateProductArgs{...}
type PortalConfigurationFeaturesSubscriptionUpdateProductInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionUpdateProductOutput() PortalConfigurationFeaturesSubscriptionUpdateProductOutput
	ToPortalConfigurationFeaturesSubscriptionUpdateProductOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionUpdateProductOutput
}

type PortalConfigurationFeaturesSubscriptionUpdateProductArgs struct {
	// List(String). The list of price IDs for the product that a subscription can be updated to.
	Prices pulumi.StringArrayInput `pulumi:"prices"`
	// String. The product id.
	Product pulumi.StringInput `pulumi:"product"`
}

func (PortalConfigurationFeaturesSubscriptionUpdateProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdateProduct)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionUpdateProductArgs) ToPortalConfigurationFeaturesSubscriptionUpdateProductOutput() PortalConfigurationFeaturesSubscriptionUpdateProductOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionUpdateProductOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionUpdateProductArgs) ToPortalConfigurationFeaturesSubscriptionUpdateProductOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionUpdateProductOutput)
}

// PortalConfigurationFeaturesSubscriptionUpdateProductArrayInput is an input type that accepts PortalConfigurationFeaturesSubscriptionUpdateProductArray and PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput values.
// You can construct a concrete instance of `PortalConfigurationFeaturesSubscriptionUpdateProductArrayInput` via:
//
//	PortalConfigurationFeaturesSubscriptionUpdateProductArray{ PortalConfigurationFeaturesSubscriptionUpdateProductArgs{...} }
type PortalConfigurationFeaturesSubscriptionUpdateProductArrayInput interface {
	pulumi.Input

	ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput() PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput
	ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutputWithContext(context.Context) PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput
}

type PortalConfigurationFeaturesSubscriptionUpdateProductArray []PortalConfigurationFeaturesSubscriptionUpdateProductInput

func (PortalConfigurationFeaturesSubscriptionUpdateProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortalConfigurationFeaturesSubscriptionUpdateProduct)(nil)).Elem()
}

func (i PortalConfigurationFeaturesSubscriptionUpdateProductArray) ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput() PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput {
	return i.ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutputWithContext(context.Background())
}

func (i PortalConfigurationFeaturesSubscriptionUpdateProductArray) ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput)
}

type PortalConfigurationFeaturesSubscriptionUpdateProductOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionUpdateProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdateProduct)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionUpdateProductOutput) ToPortalConfigurationFeaturesSubscriptionUpdateProductOutput() PortalConfigurationFeaturesSubscriptionUpdateProductOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionUpdateProductOutput) ToPortalConfigurationFeaturesSubscriptionUpdateProductOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateProductOutput {
	return o
}

// List(String). The list of price IDs for the product that a subscription can be updated to.
func (o PortalConfigurationFeaturesSubscriptionUpdateProductOutput) Prices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionUpdateProduct) []string { return v.Prices }).(pulumi.StringArrayOutput)
}

// String. The product id.
func (o PortalConfigurationFeaturesSubscriptionUpdateProductOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v PortalConfigurationFeaturesSubscriptionUpdateProduct) string { return v.Product }).(pulumi.StringOutput)
}

type PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput struct{ *pulumi.OutputState }

func (PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortalConfigurationFeaturesSubscriptionUpdateProduct)(nil)).Elem()
}

func (o PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput) ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput() PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput) ToPortalConfigurationFeaturesSubscriptionUpdateProductArrayOutputWithContext(ctx context.Context) PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput {
	return o
}

func (o PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput) Index(i pulumi.IntInput) PortalConfigurationFeaturesSubscriptionUpdateProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortalConfigurationFeaturesSubscriptionUpdateProduct {
		return vs[0].([]PortalConfigurationFeaturesSubscriptionUpdateProduct)[vs[1].(int)]
	}).(PortalConfigurationFeaturesSubscriptionUpdateProductOutput)
}

type PortalConfigurationLoginPage struct {
	// Bool. Set to true to generate a shareable URL login_page.url that will take your customers to a hosted login page for the customer portal.
	Enabled *bool `pulumi:"enabled"`
	// A shareable URL to the hosted portal login page. Your customers will be able to log in with their email and receive a link to their customer portal.
	Url *string `pulumi:"url"`
}

// PortalConfigurationLoginPageInput is an input type that accepts PortalConfigurationLoginPageArgs and PortalConfigurationLoginPageOutput values.
// You can construct a concrete instance of `PortalConfigurationLoginPageInput` via:
//
//	PortalConfigurationLoginPageArgs{...}
type PortalConfigurationLoginPageInput interface {
	pulumi.Input

	ToPortalConfigurationLoginPageOutput() PortalConfigurationLoginPageOutput
	ToPortalConfigurationLoginPageOutputWithContext(context.Context) PortalConfigurationLoginPageOutput
}

type PortalConfigurationLoginPageArgs struct {
	// Bool. Set to true to generate a shareable URL login_page.url that will take your customers to a hosted login page for the customer portal.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A shareable URL to the hosted portal login page. Your customers will be able to log in with their email and receive a link to their customer portal.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (PortalConfigurationLoginPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationLoginPage)(nil)).Elem()
}

func (i PortalConfigurationLoginPageArgs) ToPortalConfigurationLoginPageOutput() PortalConfigurationLoginPageOutput {
	return i.ToPortalConfigurationLoginPageOutputWithContext(context.Background())
}

func (i PortalConfigurationLoginPageArgs) ToPortalConfigurationLoginPageOutputWithContext(ctx context.Context) PortalConfigurationLoginPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationLoginPageOutput)
}

func (i PortalConfigurationLoginPageArgs) ToPortalConfigurationLoginPagePtrOutput() PortalConfigurationLoginPagePtrOutput {
	return i.ToPortalConfigurationLoginPagePtrOutputWithContext(context.Background())
}

func (i PortalConfigurationLoginPageArgs) ToPortalConfigurationLoginPagePtrOutputWithContext(ctx context.Context) PortalConfigurationLoginPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationLoginPageOutput).ToPortalConfigurationLoginPagePtrOutputWithContext(ctx)
}

// PortalConfigurationLoginPagePtrInput is an input type that accepts PortalConfigurationLoginPageArgs, PortalConfigurationLoginPagePtr and PortalConfigurationLoginPagePtrOutput values.
// You can construct a concrete instance of `PortalConfigurationLoginPagePtrInput` via:
//
//	        PortalConfigurationLoginPageArgs{...}
//
//	or:
//
//	        nil
type PortalConfigurationLoginPagePtrInput interface {
	pulumi.Input

	ToPortalConfigurationLoginPagePtrOutput() PortalConfigurationLoginPagePtrOutput
	ToPortalConfigurationLoginPagePtrOutputWithContext(context.Context) PortalConfigurationLoginPagePtrOutput
}

type portalConfigurationLoginPagePtrType PortalConfigurationLoginPageArgs

func PortalConfigurationLoginPagePtr(v *PortalConfigurationLoginPageArgs) PortalConfigurationLoginPagePtrInput {
	return (*portalConfigurationLoginPagePtrType)(v)
}

func (*portalConfigurationLoginPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationLoginPage)(nil)).Elem()
}

func (i *portalConfigurationLoginPagePtrType) ToPortalConfigurationLoginPagePtrOutput() PortalConfigurationLoginPagePtrOutput {
	return i.ToPortalConfigurationLoginPagePtrOutputWithContext(context.Background())
}

func (i *portalConfigurationLoginPagePtrType) ToPortalConfigurationLoginPagePtrOutputWithContext(ctx context.Context) PortalConfigurationLoginPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortalConfigurationLoginPagePtrOutput)
}

type PortalConfigurationLoginPageOutput struct{ *pulumi.OutputState }

func (PortalConfigurationLoginPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortalConfigurationLoginPage)(nil)).Elem()
}

func (o PortalConfigurationLoginPageOutput) ToPortalConfigurationLoginPageOutput() PortalConfigurationLoginPageOutput {
	return o
}

func (o PortalConfigurationLoginPageOutput) ToPortalConfigurationLoginPageOutputWithContext(ctx context.Context) PortalConfigurationLoginPageOutput {
	return o
}

func (o PortalConfigurationLoginPageOutput) ToPortalConfigurationLoginPagePtrOutput() PortalConfigurationLoginPagePtrOutput {
	return o.ToPortalConfigurationLoginPagePtrOutputWithContext(context.Background())
}

func (o PortalConfigurationLoginPageOutput) ToPortalConfigurationLoginPagePtrOutputWithContext(ctx context.Context) PortalConfigurationLoginPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PortalConfigurationLoginPage) *PortalConfigurationLoginPage {
		return &v
	}).(PortalConfigurationLoginPagePtrOutput)
}

// Bool. Set to true to generate a shareable URL login_page.url that will take your customers to a hosted login page for the customer portal.
func (o PortalConfigurationLoginPageOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PortalConfigurationLoginPage) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A shareable URL to the hosted portal login page. Your customers will be able to log in with their email and receive a link to their customer portal.
func (o PortalConfigurationLoginPageOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortalConfigurationLoginPage) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type PortalConfigurationLoginPagePtrOutput struct{ *pulumi.OutputState }

func (PortalConfigurationLoginPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortalConfigurationLoginPage)(nil)).Elem()
}

func (o PortalConfigurationLoginPagePtrOutput) ToPortalConfigurationLoginPagePtrOutput() PortalConfigurationLoginPagePtrOutput {
	return o
}

func (o PortalConfigurationLoginPagePtrOutput) ToPortalConfigurationLoginPagePtrOutputWithContext(ctx context.Context) PortalConfigurationLoginPagePtrOutput {
	return o
}

func (o PortalConfigurationLoginPagePtrOutput) Elem() PortalConfigurationLoginPageOutput {
	return o.ApplyT(func(v *PortalConfigurationLoginPage) PortalConfigurationLoginPage {
		if v != nil {
			return *v
		}
		var ret PortalConfigurationLoginPage
		return ret
	}).(PortalConfigurationLoginPageOutput)
}

// Bool. Set to true to generate a shareable URL login_page.url that will take your customers to a hosted login page for the customer portal.
func (o PortalConfigurationLoginPagePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationLoginPage) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A shareable URL to the hosted portal login page. Your customers will be able to log in with their email and receive a link to their customer portal.
func (o PortalConfigurationLoginPagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PortalConfigurationLoginPage) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type PriceCurrencyOption struct {
	// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
	Currency string `pulumi:"currency"`
	// List(Resource). When set,
	// provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
	// See details in custom unit amount.
	CustomUnitAmount *PriceCurrencyOptionCustomUnitAmount `pulumi:"customUnitAmount"`
	// String. Only required if a default tax behavior was not provided in the Stripe Tax settings.
	// Specifies whether the price is considered inclusive of taxes or exclusive of taxes.
	// One of `inclusive`, `exclusive`, or `unspecified`.
	// Once specified as either inclusive or exclusive, it cannot be changed.
	TaxBehavior *string `pulumi:"taxBehavior"`
	// List(Resource). Each element represents a pricing tier.
	// This parameter requires `billingScheme` to be set to `tiered`. This resource can be used more than once and follows
	// the same fields as the root tiers block
	Tiers []PriceCurrencyOptionTier `pulumi:"tiers"`
	// Int. A positive integer in cents (or -1 for a free price) representing how much to charge.
	UnitAmount *int `pulumi:"unitAmount"`
	// Float. Same as unit_amount, but accepts a decimal value in cents with at most 12
	// decimal places. Only one of unitAmount and unitAmountDecimal can be set.
	UnitAmountDecimal *float64 `pulumi:"unitAmountDecimal"`
}

// PriceCurrencyOptionInput is an input type that accepts PriceCurrencyOptionArgs and PriceCurrencyOptionOutput values.
// You can construct a concrete instance of `PriceCurrencyOptionInput` via:
//
//	PriceCurrencyOptionArgs{...}
type PriceCurrencyOptionInput interface {
	pulumi.Input

	ToPriceCurrencyOptionOutput() PriceCurrencyOptionOutput
	ToPriceCurrencyOptionOutputWithContext(context.Context) PriceCurrencyOptionOutput
}

type PriceCurrencyOptionArgs struct {
	// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
	Currency pulumi.StringInput `pulumi:"currency"`
	// List(Resource). When set,
	// provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
	// See details in custom unit amount.
	CustomUnitAmount PriceCurrencyOptionCustomUnitAmountPtrInput `pulumi:"customUnitAmount"`
	// String. Only required if a default tax behavior was not provided in the Stripe Tax settings.
	// Specifies whether the price is considered inclusive of taxes or exclusive of taxes.
	// One of `inclusive`, `exclusive`, or `unspecified`.
	// Once specified as either inclusive or exclusive, it cannot be changed.
	TaxBehavior pulumi.StringPtrInput `pulumi:"taxBehavior"`
	// List(Resource). Each element represents a pricing tier.
	// This parameter requires `billingScheme` to be set to `tiered`. This resource can be used more than once and follows
	// the same fields as the root tiers block
	Tiers PriceCurrencyOptionTierArrayInput `pulumi:"tiers"`
	// Int. A positive integer in cents (or -1 for a free price) representing how much to charge.
	UnitAmount pulumi.IntPtrInput `pulumi:"unitAmount"`
	// Float. Same as unit_amount, but accepts a decimal value in cents with at most 12
	// decimal places. Only one of unitAmount and unitAmountDecimal can be set.
	UnitAmountDecimal pulumi.Float64PtrInput `pulumi:"unitAmountDecimal"`
}

func (PriceCurrencyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceCurrencyOption)(nil)).Elem()
}

func (i PriceCurrencyOptionArgs) ToPriceCurrencyOptionOutput() PriceCurrencyOptionOutput {
	return i.ToPriceCurrencyOptionOutputWithContext(context.Background())
}

func (i PriceCurrencyOptionArgs) ToPriceCurrencyOptionOutputWithContext(ctx context.Context) PriceCurrencyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionOutput)
}

// PriceCurrencyOptionArrayInput is an input type that accepts PriceCurrencyOptionArray and PriceCurrencyOptionArrayOutput values.
// You can construct a concrete instance of `PriceCurrencyOptionArrayInput` via:
//
//	PriceCurrencyOptionArray{ PriceCurrencyOptionArgs{...} }
type PriceCurrencyOptionArrayInput interface {
	pulumi.Input

	ToPriceCurrencyOptionArrayOutput() PriceCurrencyOptionArrayOutput
	ToPriceCurrencyOptionArrayOutputWithContext(context.Context) PriceCurrencyOptionArrayOutput
}

type PriceCurrencyOptionArray []PriceCurrencyOptionInput

func (PriceCurrencyOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PriceCurrencyOption)(nil)).Elem()
}

func (i PriceCurrencyOptionArray) ToPriceCurrencyOptionArrayOutput() PriceCurrencyOptionArrayOutput {
	return i.ToPriceCurrencyOptionArrayOutputWithContext(context.Background())
}

func (i PriceCurrencyOptionArray) ToPriceCurrencyOptionArrayOutputWithContext(ctx context.Context) PriceCurrencyOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionArrayOutput)
}

type PriceCurrencyOptionOutput struct{ *pulumi.OutputState }

func (PriceCurrencyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceCurrencyOption)(nil)).Elem()
}

func (o PriceCurrencyOptionOutput) ToPriceCurrencyOptionOutput() PriceCurrencyOptionOutput {
	return o
}

func (o PriceCurrencyOptionOutput) ToPriceCurrencyOptionOutputWithContext(ctx context.Context) PriceCurrencyOptionOutput {
	return o
}

// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
func (o PriceCurrencyOptionOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v PriceCurrencyOption) string { return v.Currency }).(pulumi.StringOutput)
}

// List(Resource). When set,
// provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
// See details in custom unit amount.
func (o PriceCurrencyOptionOutput) CustomUnitAmount() PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOption) *PriceCurrencyOptionCustomUnitAmount { return v.CustomUnitAmount }).(PriceCurrencyOptionCustomUnitAmountPtrOutput)
}

// String. Only required if a default tax behavior was not provided in the Stripe Tax settings.
// Specifies whether the price is considered inclusive of taxes or exclusive of taxes.
// One of `inclusive`, `exclusive`, or `unspecified`.
// Once specified as either inclusive or exclusive, it cannot be changed.
func (o PriceCurrencyOptionOutput) TaxBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOption) *string { return v.TaxBehavior }).(pulumi.StringPtrOutput)
}

// List(Resource). Each element represents a pricing tier.
// This parameter requires `billingScheme` to be set to `tiered`. This resource can be used more than once and follows
// the same fields as the root tiers block
func (o PriceCurrencyOptionOutput) Tiers() PriceCurrencyOptionTierArrayOutput {
	return o.ApplyT(func(v PriceCurrencyOption) []PriceCurrencyOptionTier { return v.Tiers }).(PriceCurrencyOptionTierArrayOutput)
}

// Int. A positive integer in cents (or -1 for a free price) representing how much to charge.
func (o PriceCurrencyOptionOutput) UnitAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOption) *int { return v.UnitAmount }).(pulumi.IntPtrOutput)
}

// Float. Same as unit_amount, but accepts a decimal value in cents with at most 12
// decimal places. Only one of unitAmount and unitAmountDecimal can be set.
func (o PriceCurrencyOptionOutput) UnitAmountDecimal() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PriceCurrencyOption) *float64 { return v.UnitAmountDecimal }).(pulumi.Float64PtrOutput)
}

type PriceCurrencyOptionArrayOutput struct{ *pulumi.OutputState }

func (PriceCurrencyOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PriceCurrencyOption)(nil)).Elem()
}

func (o PriceCurrencyOptionArrayOutput) ToPriceCurrencyOptionArrayOutput() PriceCurrencyOptionArrayOutput {
	return o
}

func (o PriceCurrencyOptionArrayOutput) ToPriceCurrencyOptionArrayOutputWithContext(ctx context.Context) PriceCurrencyOptionArrayOutput {
	return o
}

func (o PriceCurrencyOptionArrayOutput) Index(i pulumi.IntInput) PriceCurrencyOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PriceCurrencyOption {
		return vs[0].([]PriceCurrencyOption)[vs[1].(int)]
	}).(PriceCurrencyOptionOutput)
}

type PriceCurrencyOptionCustomUnitAmount struct {
	// Bool. Pass in `true` to enable `customUnitAmount`, otherwise omit `customUnitAmount`.
	Enabled bool `pulumi:"enabled"`
	// Int. The maximum unit amount the customer can specify for this item.
	Maximum *int `pulumi:"maximum"`
	// Int. The minimum unit amount the customer can specify for this item.
	// Must be at least the minimum charge amount.
	Minimum *int `pulumi:"minimum"`
	// Int. The starting unit amount which can be updated by the customer.
	Preset *int `pulumi:"preset"`
}

// PriceCurrencyOptionCustomUnitAmountInput is an input type that accepts PriceCurrencyOptionCustomUnitAmountArgs and PriceCurrencyOptionCustomUnitAmountOutput values.
// You can construct a concrete instance of `PriceCurrencyOptionCustomUnitAmountInput` via:
//
//	PriceCurrencyOptionCustomUnitAmountArgs{...}
type PriceCurrencyOptionCustomUnitAmountInput interface {
	pulumi.Input

	ToPriceCurrencyOptionCustomUnitAmountOutput() PriceCurrencyOptionCustomUnitAmountOutput
	ToPriceCurrencyOptionCustomUnitAmountOutputWithContext(context.Context) PriceCurrencyOptionCustomUnitAmountOutput
}

type PriceCurrencyOptionCustomUnitAmountArgs struct {
	// Bool. Pass in `true` to enable `customUnitAmount`, otherwise omit `customUnitAmount`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Int. The maximum unit amount the customer can specify for this item.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Int. The minimum unit amount the customer can specify for this item.
	// Must be at least the minimum charge amount.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Int. The starting unit amount which can be updated by the customer.
	Preset pulumi.IntPtrInput `pulumi:"preset"`
}

func (PriceCurrencyOptionCustomUnitAmountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceCurrencyOptionCustomUnitAmount)(nil)).Elem()
}

func (i PriceCurrencyOptionCustomUnitAmountArgs) ToPriceCurrencyOptionCustomUnitAmountOutput() PriceCurrencyOptionCustomUnitAmountOutput {
	return i.ToPriceCurrencyOptionCustomUnitAmountOutputWithContext(context.Background())
}

func (i PriceCurrencyOptionCustomUnitAmountArgs) ToPriceCurrencyOptionCustomUnitAmountOutputWithContext(ctx context.Context) PriceCurrencyOptionCustomUnitAmountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionCustomUnitAmountOutput)
}

func (i PriceCurrencyOptionCustomUnitAmountArgs) ToPriceCurrencyOptionCustomUnitAmountPtrOutput() PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return i.ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(context.Background())
}

func (i PriceCurrencyOptionCustomUnitAmountArgs) ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(ctx context.Context) PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionCustomUnitAmountOutput).ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(ctx)
}

// PriceCurrencyOptionCustomUnitAmountPtrInput is an input type that accepts PriceCurrencyOptionCustomUnitAmountArgs, PriceCurrencyOptionCustomUnitAmountPtr and PriceCurrencyOptionCustomUnitAmountPtrOutput values.
// You can construct a concrete instance of `PriceCurrencyOptionCustomUnitAmountPtrInput` via:
//
//	        PriceCurrencyOptionCustomUnitAmountArgs{...}
//
//	or:
//
//	        nil
type PriceCurrencyOptionCustomUnitAmountPtrInput interface {
	pulumi.Input

	ToPriceCurrencyOptionCustomUnitAmountPtrOutput() PriceCurrencyOptionCustomUnitAmountPtrOutput
	ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(context.Context) PriceCurrencyOptionCustomUnitAmountPtrOutput
}

type priceCurrencyOptionCustomUnitAmountPtrType PriceCurrencyOptionCustomUnitAmountArgs

func PriceCurrencyOptionCustomUnitAmountPtr(v *PriceCurrencyOptionCustomUnitAmountArgs) PriceCurrencyOptionCustomUnitAmountPtrInput {
	return (*priceCurrencyOptionCustomUnitAmountPtrType)(v)
}

func (*priceCurrencyOptionCustomUnitAmountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PriceCurrencyOptionCustomUnitAmount)(nil)).Elem()
}

func (i *priceCurrencyOptionCustomUnitAmountPtrType) ToPriceCurrencyOptionCustomUnitAmountPtrOutput() PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return i.ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(context.Background())
}

func (i *priceCurrencyOptionCustomUnitAmountPtrType) ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(ctx context.Context) PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionCustomUnitAmountPtrOutput)
}

type PriceCurrencyOptionCustomUnitAmountOutput struct{ *pulumi.OutputState }

func (PriceCurrencyOptionCustomUnitAmountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceCurrencyOptionCustomUnitAmount)(nil)).Elem()
}

func (o PriceCurrencyOptionCustomUnitAmountOutput) ToPriceCurrencyOptionCustomUnitAmountOutput() PriceCurrencyOptionCustomUnitAmountOutput {
	return o
}

func (o PriceCurrencyOptionCustomUnitAmountOutput) ToPriceCurrencyOptionCustomUnitAmountOutputWithContext(ctx context.Context) PriceCurrencyOptionCustomUnitAmountOutput {
	return o
}

func (o PriceCurrencyOptionCustomUnitAmountOutput) ToPriceCurrencyOptionCustomUnitAmountPtrOutput() PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return o.ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(context.Background())
}

func (o PriceCurrencyOptionCustomUnitAmountOutput) ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(ctx context.Context) PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PriceCurrencyOptionCustomUnitAmount) *PriceCurrencyOptionCustomUnitAmount {
		return &v
	}).(PriceCurrencyOptionCustomUnitAmountPtrOutput)
}

// Bool. Pass in `true` to enable `customUnitAmount`, otherwise omit `customUnitAmount`.
func (o PriceCurrencyOptionCustomUnitAmountOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PriceCurrencyOptionCustomUnitAmount) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Int. The maximum unit amount the customer can specify for this item.
func (o PriceCurrencyOptionCustomUnitAmountOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionCustomUnitAmount) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Int. The minimum unit amount the customer can specify for this item.
// Must be at least the minimum charge amount.
func (o PriceCurrencyOptionCustomUnitAmountOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionCustomUnitAmount) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Int. The starting unit amount which can be updated by the customer.
func (o PriceCurrencyOptionCustomUnitAmountOutput) Preset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionCustomUnitAmount) *int { return v.Preset }).(pulumi.IntPtrOutput)
}

type PriceCurrencyOptionCustomUnitAmountPtrOutput struct{ *pulumi.OutputState }

func (PriceCurrencyOptionCustomUnitAmountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PriceCurrencyOptionCustomUnitAmount)(nil)).Elem()
}

func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) ToPriceCurrencyOptionCustomUnitAmountPtrOutput() PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return o
}

func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) ToPriceCurrencyOptionCustomUnitAmountPtrOutputWithContext(ctx context.Context) PriceCurrencyOptionCustomUnitAmountPtrOutput {
	return o
}

func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) Elem() PriceCurrencyOptionCustomUnitAmountOutput {
	return o.ApplyT(func(v *PriceCurrencyOptionCustomUnitAmount) PriceCurrencyOptionCustomUnitAmount {
		if v != nil {
			return *v
		}
		var ret PriceCurrencyOptionCustomUnitAmount
		return ret
	}).(PriceCurrencyOptionCustomUnitAmountOutput)
}

// Bool. Pass in `true` to enable `customUnitAmount`, otherwise omit `customUnitAmount`.
func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PriceCurrencyOptionCustomUnitAmount) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Int. The maximum unit amount the customer can specify for this item.
func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PriceCurrencyOptionCustomUnitAmount) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Int. The minimum unit amount the customer can specify for this item.
// Must be at least the minimum charge amount.
func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PriceCurrencyOptionCustomUnitAmount) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Int. The starting unit amount which can be updated by the customer.
func (o PriceCurrencyOptionCustomUnitAmountPtrOutput) Preset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PriceCurrencyOptionCustomUnitAmount) *int {
		if v == nil {
			return nil
		}
		return v.Preset
	}).(pulumi.IntPtrOutput)
}

type PriceCurrencyOptionTier struct {
	// Int. The flat billing amount for an entire tier, regardless of the number of units in the
	// tier.
	FlatAmount *int `pulumi:"flatAmount"`
	// Float. Same as `flatAmount`, but accepts a decimal value representing an integer
	// in the minor units of the currency. Only one of `flatAmount` and `flatAmountDecimal` can be set.
	FlatAmountDecimal *float64 `pulumi:"flatAmountDecimal"`
	// Int. The per-unit billing amount for each individual unit for which this tier applies.
	UnitAmount *int `pulumi:"unitAmount"`
	// Float. Same as `unitAmount`, but accepts a decimal value in cents with at most 12
	// decimal places. Only one of `unitAmount` and `unitAmountDecimal` can be set.
	UnitAmountDecimal *float64 `pulumi:"unitAmountDecimal"`
	// Int. Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the
	// previous tier adding one. Use `-1` to define a fallback tier.
	UpTo *int `pulumi:"upTo"`
}

// PriceCurrencyOptionTierInput is an input type that accepts PriceCurrencyOptionTierArgs and PriceCurrencyOptionTierOutput values.
// You can construct a concrete instance of `PriceCurrencyOptionTierInput` via:
//
//	PriceCurrencyOptionTierArgs{...}
type PriceCurrencyOptionTierInput interface {
	pulumi.Input

	ToPriceCurrencyOptionTierOutput() PriceCurrencyOptionTierOutput
	ToPriceCurrencyOptionTierOutputWithContext(context.Context) PriceCurrencyOptionTierOutput
}

type PriceCurrencyOptionTierArgs struct {
	// Int. The flat billing amount for an entire tier, regardless of the number of units in the
	// tier.
	FlatAmount pulumi.IntPtrInput `pulumi:"flatAmount"`
	// Float. Same as `flatAmount`, but accepts a decimal value representing an integer
	// in the minor units of the currency. Only one of `flatAmount` and `flatAmountDecimal` can be set.
	FlatAmountDecimal pulumi.Float64PtrInput `pulumi:"flatAmountDecimal"`
	// Int. The per-unit billing amount for each individual unit for which this tier applies.
	UnitAmount pulumi.IntPtrInput `pulumi:"unitAmount"`
	// Float. Same as `unitAmount`, but accepts a decimal value in cents with at most 12
	// decimal places. Only one of `unitAmount` and `unitAmountDecimal` can be set.
	UnitAmountDecimal pulumi.Float64PtrInput `pulumi:"unitAmountDecimal"`
	// Int. Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the
	// previous tier adding one. Use `-1` to define a fallback tier.
	UpTo pulumi.IntPtrInput `pulumi:"upTo"`
}

func (PriceCurrencyOptionTierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceCurrencyOptionTier)(nil)).Elem()
}

func (i PriceCurrencyOptionTierArgs) ToPriceCurrencyOptionTierOutput() PriceCurrencyOptionTierOutput {
	return i.ToPriceCurrencyOptionTierOutputWithContext(context.Background())
}

func (i PriceCurrencyOptionTierArgs) ToPriceCurrencyOptionTierOutputWithContext(ctx context.Context) PriceCurrencyOptionTierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionTierOutput)
}

// PriceCurrencyOptionTierArrayInput is an input type that accepts PriceCurrencyOptionTierArray and PriceCurrencyOptionTierArrayOutput values.
// You can construct a concrete instance of `PriceCurrencyOptionTierArrayInput` via:
//
//	PriceCurrencyOptionTierArray{ PriceCurrencyOptionTierArgs{...} }
type PriceCurrencyOptionTierArrayInput interface {
	pulumi.Input

	ToPriceCurrencyOptionTierArrayOutput() PriceCurrencyOptionTierArrayOutput
	ToPriceCurrencyOptionTierArrayOutputWithContext(context.Context) PriceCurrencyOptionTierArrayOutput
}

type PriceCurrencyOptionTierArray []PriceCurrencyOptionTierInput

func (PriceCurrencyOptionTierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PriceCurrencyOptionTier)(nil)).Elem()
}

func (i PriceCurrencyOptionTierArray) ToPriceCurrencyOptionTierArrayOutput() PriceCurrencyOptionTierArrayOutput {
	return i.ToPriceCurrencyOptionTierArrayOutputWithContext(context.Background())
}

func (i PriceCurrencyOptionTierArray) ToPriceCurrencyOptionTierArrayOutputWithContext(ctx context.Context) PriceCurrencyOptionTierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceCurrencyOptionTierArrayOutput)
}

type PriceCurrencyOptionTierOutput struct{ *pulumi.OutputState }

func (PriceCurrencyOptionTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceCurrencyOptionTier)(nil)).Elem()
}

func (o PriceCurrencyOptionTierOutput) ToPriceCurrencyOptionTierOutput() PriceCurrencyOptionTierOutput {
	return o
}

func (o PriceCurrencyOptionTierOutput) ToPriceCurrencyOptionTierOutputWithContext(ctx context.Context) PriceCurrencyOptionTierOutput {
	return o
}

// Int. The flat billing amount for an entire tier, regardless of the number of units in the
// tier.
func (o PriceCurrencyOptionTierOutput) FlatAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionTier) *int { return v.FlatAmount }).(pulumi.IntPtrOutput)
}

// Float. Same as `flatAmount`, but accepts a decimal value representing an integer
// in the minor units of the currency. Only one of `flatAmount` and `flatAmountDecimal` can be set.
func (o PriceCurrencyOptionTierOutput) FlatAmountDecimal() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionTier) *float64 { return v.FlatAmountDecimal }).(pulumi.Float64PtrOutput)
}

// Int. The per-unit billing amount for each individual unit for which this tier applies.
func (o PriceCurrencyOptionTierOutput) UnitAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionTier) *int { return v.UnitAmount }).(pulumi.IntPtrOutput)
}

// Float. Same as `unitAmount`, but accepts a decimal value in cents with at most 12
// decimal places. Only one of `unitAmount` and `unitAmountDecimal` can be set.
func (o PriceCurrencyOptionTierOutput) UnitAmountDecimal() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionTier) *float64 { return v.UnitAmountDecimal }).(pulumi.Float64PtrOutput)
}

// Int. Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the
// previous tier adding one. Use `-1` to define a fallback tier.
func (o PriceCurrencyOptionTierOutput) UpTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceCurrencyOptionTier) *int { return v.UpTo }).(pulumi.IntPtrOutput)
}

type PriceCurrencyOptionTierArrayOutput struct{ *pulumi.OutputState }

func (PriceCurrencyOptionTierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PriceCurrencyOptionTier)(nil)).Elem()
}

func (o PriceCurrencyOptionTierArrayOutput) ToPriceCurrencyOptionTierArrayOutput() PriceCurrencyOptionTierArrayOutput {
	return o
}

func (o PriceCurrencyOptionTierArrayOutput) ToPriceCurrencyOptionTierArrayOutputWithContext(ctx context.Context) PriceCurrencyOptionTierArrayOutput {
	return o
}

func (o PriceCurrencyOptionTierArrayOutput) Index(i pulumi.IntInput) PriceCurrencyOptionTierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PriceCurrencyOptionTier {
		return vs[0].([]PriceCurrencyOptionTier)[vs[1].(int)]
	}).(PriceCurrencyOptionTierOutput)
}

type PriceRecurring struct {
	// String. Specifies a usage of aggregation strategy for prices of `usage_type=metered`.
	// Allowed values are `sum` for summing up all usage during a period, `lastDuringPeriod` for using the last usage
	// record reported within a period, `lastEver` for using the last usage record ever (across period bounds) or `max`
	// which uses the usage record with the maximum reported usage during a period.
	AggregateUsage *string `pulumi:"aggregateUsage"`
	// String. Specifies billing frequency. Either `day`, `week`, `month` or `year`.
	Interval string `pulumi:"interval"`
	// Int. The number of intervals between subscription billings. For
	// example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year,
	// 12 months, or 52 weeks).
	IntervalCount *int `pulumi:"intervalCount"`
	// String. Configures how the quantity per period should be determined. Can be either `metered`
	// or `licensed`. `licensed` automatically bills the quantity set when adding it to a subscription. `metered` aggregates
	// the total usage based on usage records. Defaults to `licensed`.
	UsageType *string `pulumi:"usageType"`
}

// PriceRecurringInput is an input type that accepts PriceRecurringArgs and PriceRecurringOutput values.
// You can construct a concrete instance of `PriceRecurringInput` via:
//
//	PriceRecurringArgs{...}
type PriceRecurringInput interface {
	pulumi.Input

	ToPriceRecurringOutput() PriceRecurringOutput
	ToPriceRecurringOutputWithContext(context.Context) PriceRecurringOutput
}

type PriceRecurringArgs struct {
	// String. Specifies a usage of aggregation strategy for prices of `usage_type=metered`.
	// Allowed values are `sum` for summing up all usage during a period, `lastDuringPeriod` for using the last usage
	// record reported within a period, `lastEver` for using the last usage record ever (across period bounds) or `max`
	// which uses the usage record with the maximum reported usage during a period.
	AggregateUsage pulumi.StringPtrInput `pulumi:"aggregateUsage"`
	// String. Specifies billing frequency. Either `day`, `week`, `month` or `year`.
	Interval pulumi.StringInput `pulumi:"interval"`
	// Int. The number of intervals between subscription billings. For
	// example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year,
	// 12 months, or 52 weeks).
	IntervalCount pulumi.IntPtrInput `pulumi:"intervalCount"`
	// String. Configures how the quantity per period should be determined. Can be either `metered`
	// or `licensed`. `licensed` automatically bills the quantity set when adding it to a subscription. `metered` aggregates
	// the total usage based on usage records. Defaults to `licensed`.
	UsageType pulumi.StringPtrInput `pulumi:"usageType"`
}

func (PriceRecurringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceRecurring)(nil)).Elem()
}

func (i PriceRecurringArgs) ToPriceRecurringOutput() PriceRecurringOutput {
	return i.ToPriceRecurringOutputWithContext(context.Background())
}

func (i PriceRecurringArgs) ToPriceRecurringOutputWithContext(ctx context.Context) PriceRecurringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceRecurringOutput)
}

func (i PriceRecurringArgs) ToPriceRecurringPtrOutput() PriceRecurringPtrOutput {
	return i.ToPriceRecurringPtrOutputWithContext(context.Background())
}

func (i PriceRecurringArgs) ToPriceRecurringPtrOutputWithContext(ctx context.Context) PriceRecurringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceRecurringOutput).ToPriceRecurringPtrOutputWithContext(ctx)
}

// PriceRecurringPtrInput is an input type that accepts PriceRecurringArgs, PriceRecurringPtr and PriceRecurringPtrOutput values.
// You can construct a concrete instance of `PriceRecurringPtrInput` via:
//
//	        PriceRecurringArgs{...}
//
//	or:
//
//	        nil
type PriceRecurringPtrInput interface {
	pulumi.Input

	ToPriceRecurringPtrOutput() PriceRecurringPtrOutput
	ToPriceRecurringPtrOutputWithContext(context.Context) PriceRecurringPtrOutput
}

type priceRecurringPtrType PriceRecurringArgs

func PriceRecurringPtr(v *PriceRecurringArgs) PriceRecurringPtrInput {
	return (*priceRecurringPtrType)(v)
}

func (*priceRecurringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PriceRecurring)(nil)).Elem()
}

func (i *priceRecurringPtrType) ToPriceRecurringPtrOutput() PriceRecurringPtrOutput {
	return i.ToPriceRecurringPtrOutputWithContext(context.Background())
}

func (i *priceRecurringPtrType) ToPriceRecurringPtrOutputWithContext(ctx context.Context) PriceRecurringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceRecurringPtrOutput)
}

type PriceRecurringOutput struct{ *pulumi.OutputState }

func (PriceRecurringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceRecurring)(nil)).Elem()
}

func (o PriceRecurringOutput) ToPriceRecurringOutput() PriceRecurringOutput {
	return o
}

func (o PriceRecurringOutput) ToPriceRecurringOutputWithContext(ctx context.Context) PriceRecurringOutput {
	return o
}

func (o PriceRecurringOutput) ToPriceRecurringPtrOutput() PriceRecurringPtrOutput {
	return o.ToPriceRecurringPtrOutputWithContext(context.Background())
}

func (o PriceRecurringOutput) ToPriceRecurringPtrOutputWithContext(ctx context.Context) PriceRecurringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PriceRecurring) *PriceRecurring {
		return &v
	}).(PriceRecurringPtrOutput)
}

// String. Specifies a usage of aggregation strategy for prices of `usage_type=metered`.
// Allowed values are `sum` for summing up all usage during a period, `lastDuringPeriod` for using the last usage
// record reported within a period, `lastEver` for using the last usage record ever (across period bounds) or `max`
// which uses the usage record with the maximum reported usage during a period.
func (o PriceRecurringOutput) AggregateUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PriceRecurring) *string { return v.AggregateUsage }).(pulumi.StringPtrOutput)
}

// String. Specifies billing frequency. Either `day`, `week`, `month` or `year`.
func (o PriceRecurringOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v PriceRecurring) string { return v.Interval }).(pulumi.StringOutput)
}

// Int. The number of intervals between subscription billings. For
// example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year,
// 12 months, or 52 weeks).
func (o PriceRecurringOutput) IntervalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceRecurring) *int { return v.IntervalCount }).(pulumi.IntPtrOutput)
}

// String. Configures how the quantity per period should be determined. Can be either `metered`
// or `licensed`. `licensed` automatically bills the quantity set when adding it to a subscription. `metered` aggregates
// the total usage based on usage records. Defaults to `licensed`.
func (o PriceRecurringOutput) UsageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PriceRecurring) *string { return v.UsageType }).(pulumi.StringPtrOutput)
}

type PriceRecurringPtrOutput struct{ *pulumi.OutputState }

func (PriceRecurringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PriceRecurring)(nil)).Elem()
}

func (o PriceRecurringPtrOutput) ToPriceRecurringPtrOutput() PriceRecurringPtrOutput {
	return o
}

func (o PriceRecurringPtrOutput) ToPriceRecurringPtrOutputWithContext(ctx context.Context) PriceRecurringPtrOutput {
	return o
}

func (o PriceRecurringPtrOutput) Elem() PriceRecurringOutput {
	return o.ApplyT(func(v *PriceRecurring) PriceRecurring {
		if v != nil {
			return *v
		}
		var ret PriceRecurring
		return ret
	}).(PriceRecurringOutput)
}

// String. Specifies a usage of aggregation strategy for prices of `usage_type=metered`.
// Allowed values are `sum` for summing up all usage during a period, `lastDuringPeriod` for using the last usage
// record reported within a period, `lastEver` for using the last usage record ever (across period bounds) or `max`
// which uses the usage record with the maximum reported usage during a period.
func (o PriceRecurringPtrOutput) AggregateUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PriceRecurring) *string {
		if v == nil {
			return nil
		}
		return v.AggregateUsage
	}).(pulumi.StringPtrOutput)
}

// String. Specifies billing frequency. Either `day`, `week`, `month` or `year`.
func (o PriceRecurringPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PriceRecurring) *string {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.StringPtrOutput)
}

// Int. The number of intervals between subscription billings. For
// example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year,
// 12 months, or 52 weeks).
func (o PriceRecurringPtrOutput) IntervalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PriceRecurring) *int {
		if v == nil {
			return nil
		}
		return v.IntervalCount
	}).(pulumi.IntPtrOutput)
}

// String. Configures how the quantity per period should be determined. Can be either `metered`
// or `licensed`. `licensed` automatically bills the quantity set when adding it to a subscription. `metered` aggregates
// the total usage based on usage records. Defaults to `licensed`.
func (o PriceRecurringPtrOutput) UsageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PriceRecurring) *string {
		if v == nil {
			return nil
		}
		return v.UsageType
	}).(pulumi.StringPtrOutput)
}

type PriceTier struct {
	// Int. The flat billing amount for an entire tier, regardless of the number of units in the
	// tier.
	FlatAmount *int `pulumi:"flatAmount"`
	// Float. Same as `flatAmount`, but accepts a decimal value representing an integer
	// in the minor units of the currency. Only one of `flatAmount` and `flatAmountDecimal` can be set.
	FlatAmountDecimal *float64 `pulumi:"flatAmountDecimal"`
	// Int. The per-unit billing amount for each individual unit for which this tier applies.
	UnitAmount *int `pulumi:"unitAmount"`
	// Float. Same as `unitAmount`, but accepts a decimal value in cents with at most 12
	// decimal places. Only one of `unitAmount` and `unitAmountDecimal` can be set.
	UnitAmountDecimal *float64 `pulumi:"unitAmountDecimal"`
	// Int. Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the
	// previous tier adding one. Use `-1` to define a fallback tier.
	UpTo *int `pulumi:"upTo"`
}

// PriceTierInput is an input type that accepts PriceTierArgs and PriceTierOutput values.
// You can construct a concrete instance of `PriceTierInput` via:
//
//	PriceTierArgs{...}
type PriceTierInput interface {
	pulumi.Input

	ToPriceTierOutput() PriceTierOutput
	ToPriceTierOutputWithContext(context.Context) PriceTierOutput
}

type PriceTierArgs struct {
	// Int. The flat billing amount for an entire tier, regardless of the number of units in the
	// tier.
	FlatAmount pulumi.IntPtrInput `pulumi:"flatAmount"`
	// Float. Same as `flatAmount`, but accepts a decimal value representing an integer
	// in the minor units of the currency. Only one of `flatAmount` and `flatAmountDecimal` can be set.
	FlatAmountDecimal pulumi.Float64PtrInput `pulumi:"flatAmountDecimal"`
	// Int. The per-unit billing amount for each individual unit for which this tier applies.
	UnitAmount pulumi.IntPtrInput `pulumi:"unitAmount"`
	// Float. Same as `unitAmount`, but accepts a decimal value in cents with at most 12
	// decimal places. Only one of `unitAmount` and `unitAmountDecimal` can be set.
	UnitAmountDecimal pulumi.Float64PtrInput `pulumi:"unitAmountDecimal"`
	// Int. Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the
	// previous tier adding one. Use `-1` to define a fallback tier.
	UpTo pulumi.IntPtrInput `pulumi:"upTo"`
}

func (PriceTierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceTier)(nil)).Elem()
}

func (i PriceTierArgs) ToPriceTierOutput() PriceTierOutput {
	return i.ToPriceTierOutputWithContext(context.Background())
}

func (i PriceTierArgs) ToPriceTierOutputWithContext(ctx context.Context) PriceTierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceTierOutput)
}

// PriceTierArrayInput is an input type that accepts PriceTierArray and PriceTierArrayOutput values.
// You can construct a concrete instance of `PriceTierArrayInput` via:
//
//	PriceTierArray{ PriceTierArgs{...} }
type PriceTierArrayInput interface {
	pulumi.Input

	ToPriceTierArrayOutput() PriceTierArrayOutput
	ToPriceTierArrayOutputWithContext(context.Context) PriceTierArrayOutput
}

type PriceTierArray []PriceTierInput

func (PriceTierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PriceTier)(nil)).Elem()
}

func (i PriceTierArray) ToPriceTierArrayOutput() PriceTierArrayOutput {
	return i.ToPriceTierArrayOutputWithContext(context.Background())
}

func (i PriceTierArray) ToPriceTierArrayOutputWithContext(ctx context.Context) PriceTierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceTierArrayOutput)
}

type PriceTierOutput struct{ *pulumi.OutputState }

func (PriceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceTier)(nil)).Elem()
}

func (o PriceTierOutput) ToPriceTierOutput() PriceTierOutput {
	return o
}

func (o PriceTierOutput) ToPriceTierOutputWithContext(ctx context.Context) PriceTierOutput {
	return o
}

// Int. The flat billing amount for an entire tier, regardless of the number of units in the
// tier.
func (o PriceTierOutput) FlatAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceTier) *int { return v.FlatAmount }).(pulumi.IntPtrOutput)
}

// Float. Same as `flatAmount`, but accepts a decimal value representing an integer
// in the minor units of the currency. Only one of `flatAmount` and `flatAmountDecimal` can be set.
func (o PriceTierOutput) FlatAmountDecimal() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PriceTier) *float64 { return v.FlatAmountDecimal }).(pulumi.Float64PtrOutput)
}

// Int. The per-unit billing amount for each individual unit for which this tier applies.
func (o PriceTierOutput) UnitAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceTier) *int { return v.UnitAmount }).(pulumi.IntPtrOutput)
}

// Float. Same as `unitAmount`, but accepts a decimal value in cents with at most 12
// decimal places. Only one of `unitAmount` and `unitAmountDecimal` can be set.
func (o PriceTierOutput) UnitAmountDecimal() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PriceTier) *float64 { return v.UnitAmountDecimal }).(pulumi.Float64PtrOutput)
}

// Int. Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the
// previous tier adding one. Use `-1` to define a fallback tier.
func (o PriceTierOutput) UpTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PriceTier) *int { return v.UpTo }).(pulumi.IntPtrOutput)
}

type PriceTierArrayOutput struct{ *pulumi.OutputState }

func (PriceTierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PriceTier)(nil)).Elem()
}

func (o PriceTierArrayOutput) ToPriceTierArrayOutput() PriceTierArrayOutput {
	return o
}

func (o PriceTierArrayOutput) ToPriceTierArrayOutputWithContext(ctx context.Context) PriceTierArrayOutput {
	return o
}

func (o PriceTierArrayOutput) Index(i pulumi.IntInput) PriceTierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PriceTier {
		return vs[0].([]PriceTier)[vs[1].(int)]
	}).(PriceTierOutput)
}

type PriceTransformQuantity struct {
	// Int. Divide usage by this number.
	DivideBy int `pulumi:"divideBy"`
	// String. After division, either round the result `up` or `down`.
	Round string `pulumi:"round"`
}

// PriceTransformQuantityInput is an input type that accepts PriceTransformQuantityArgs and PriceTransformQuantityOutput values.
// You can construct a concrete instance of `PriceTransformQuantityInput` via:
//
//	PriceTransformQuantityArgs{...}
type PriceTransformQuantityInput interface {
	pulumi.Input

	ToPriceTransformQuantityOutput() PriceTransformQuantityOutput
	ToPriceTransformQuantityOutputWithContext(context.Context) PriceTransformQuantityOutput
}

type PriceTransformQuantityArgs struct {
	// Int. Divide usage by this number.
	DivideBy pulumi.IntInput `pulumi:"divideBy"`
	// String. After division, either round the result `up` or `down`.
	Round pulumi.StringInput `pulumi:"round"`
}

func (PriceTransformQuantityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceTransformQuantity)(nil)).Elem()
}

func (i PriceTransformQuantityArgs) ToPriceTransformQuantityOutput() PriceTransformQuantityOutput {
	return i.ToPriceTransformQuantityOutputWithContext(context.Background())
}

func (i PriceTransformQuantityArgs) ToPriceTransformQuantityOutputWithContext(ctx context.Context) PriceTransformQuantityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceTransformQuantityOutput)
}

func (i PriceTransformQuantityArgs) ToPriceTransformQuantityPtrOutput() PriceTransformQuantityPtrOutput {
	return i.ToPriceTransformQuantityPtrOutputWithContext(context.Background())
}

func (i PriceTransformQuantityArgs) ToPriceTransformQuantityPtrOutputWithContext(ctx context.Context) PriceTransformQuantityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceTransformQuantityOutput).ToPriceTransformQuantityPtrOutputWithContext(ctx)
}

// PriceTransformQuantityPtrInput is an input type that accepts PriceTransformQuantityArgs, PriceTransformQuantityPtr and PriceTransformQuantityPtrOutput values.
// You can construct a concrete instance of `PriceTransformQuantityPtrInput` via:
//
//	        PriceTransformQuantityArgs{...}
//
//	or:
//
//	        nil
type PriceTransformQuantityPtrInput interface {
	pulumi.Input

	ToPriceTransformQuantityPtrOutput() PriceTransformQuantityPtrOutput
	ToPriceTransformQuantityPtrOutputWithContext(context.Context) PriceTransformQuantityPtrOutput
}

type priceTransformQuantityPtrType PriceTransformQuantityArgs

func PriceTransformQuantityPtr(v *PriceTransformQuantityArgs) PriceTransformQuantityPtrInput {
	return (*priceTransformQuantityPtrType)(v)
}

func (*priceTransformQuantityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PriceTransformQuantity)(nil)).Elem()
}

func (i *priceTransformQuantityPtrType) ToPriceTransformQuantityPtrOutput() PriceTransformQuantityPtrOutput {
	return i.ToPriceTransformQuantityPtrOutputWithContext(context.Background())
}

func (i *priceTransformQuantityPtrType) ToPriceTransformQuantityPtrOutputWithContext(ctx context.Context) PriceTransformQuantityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PriceTransformQuantityPtrOutput)
}

type PriceTransformQuantityOutput struct{ *pulumi.OutputState }

func (PriceTransformQuantityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PriceTransformQuantity)(nil)).Elem()
}

func (o PriceTransformQuantityOutput) ToPriceTransformQuantityOutput() PriceTransformQuantityOutput {
	return o
}

func (o PriceTransformQuantityOutput) ToPriceTransformQuantityOutputWithContext(ctx context.Context) PriceTransformQuantityOutput {
	return o
}

func (o PriceTransformQuantityOutput) ToPriceTransformQuantityPtrOutput() PriceTransformQuantityPtrOutput {
	return o.ToPriceTransformQuantityPtrOutputWithContext(context.Background())
}

func (o PriceTransformQuantityOutput) ToPriceTransformQuantityPtrOutputWithContext(ctx context.Context) PriceTransformQuantityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PriceTransformQuantity) *PriceTransformQuantity {
		return &v
	}).(PriceTransformQuantityPtrOutput)
}

// Int. Divide usage by this number.
func (o PriceTransformQuantityOutput) DivideBy() pulumi.IntOutput {
	return o.ApplyT(func(v PriceTransformQuantity) int { return v.DivideBy }).(pulumi.IntOutput)
}

// String. After division, either round the result `up` or `down`.
func (o PriceTransformQuantityOutput) Round() pulumi.StringOutput {
	return o.ApplyT(func(v PriceTransformQuantity) string { return v.Round }).(pulumi.StringOutput)
}

type PriceTransformQuantityPtrOutput struct{ *pulumi.OutputState }

func (PriceTransformQuantityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PriceTransformQuantity)(nil)).Elem()
}

func (o PriceTransformQuantityPtrOutput) ToPriceTransformQuantityPtrOutput() PriceTransformQuantityPtrOutput {
	return o
}

func (o PriceTransformQuantityPtrOutput) ToPriceTransformQuantityPtrOutputWithContext(ctx context.Context) PriceTransformQuantityPtrOutput {
	return o
}

func (o PriceTransformQuantityPtrOutput) Elem() PriceTransformQuantityOutput {
	return o.ApplyT(func(v *PriceTransformQuantity) PriceTransformQuantity {
		if v != nil {
			return *v
		}
		var ret PriceTransformQuantity
		return ret
	}).(PriceTransformQuantityOutput)
}

// Int. Divide usage by this number.
func (o PriceTransformQuantityPtrOutput) DivideBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PriceTransformQuantity) *int {
		if v == nil {
			return nil
		}
		return &v.DivideBy
	}).(pulumi.IntPtrOutput)
}

// String. After division, either round the result `up` or `down`.
func (o PriceTransformQuantityPtrOutput) Round() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PriceTransformQuantity) *string {
		if v == nil {
			return nil
		}
		return &v.Round
	}).(pulumi.StringPtrOutput)
}

type PromotionCodeRestrictions struct {
	// Bool. A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices.
	FirstTimeTransaction bool `pulumi:"firstTimeTransaction"`
	// Int. Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
	MinimumAmount int `pulumi:"minimumAmount"`
	// String. Three-letter ISO code for `minimumAmount`.
	MinimumAmountCurrency string `pulumi:"minimumAmountCurrency"`
}

// PromotionCodeRestrictionsInput is an input type that accepts PromotionCodeRestrictionsArgs and PromotionCodeRestrictionsOutput values.
// You can construct a concrete instance of `PromotionCodeRestrictionsInput` via:
//
//	PromotionCodeRestrictionsArgs{...}
type PromotionCodeRestrictionsInput interface {
	pulumi.Input

	ToPromotionCodeRestrictionsOutput() PromotionCodeRestrictionsOutput
	ToPromotionCodeRestrictionsOutputWithContext(context.Context) PromotionCodeRestrictionsOutput
}

type PromotionCodeRestrictionsArgs struct {
	// Bool. A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices.
	FirstTimeTransaction pulumi.BoolInput `pulumi:"firstTimeTransaction"`
	// Int. Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
	MinimumAmount pulumi.IntInput `pulumi:"minimumAmount"`
	// String. Three-letter ISO code for `minimumAmount`.
	MinimumAmountCurrency pulumi.StringInput `pulumi:"minimumAmountCurrency"`
}

func (PromotionCodeRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionCodeRestrictions)(nil)).Elem()
}

func (i PromotionCodeRestrictionsArgs) ToPromotionCodeRestrictionsOutput() PromotionCodeRestrictionsOutput {
	return i.ToPromotionCodeRestrictionsOutputWithContext(context.Background())
}

func (i PromotionCodeRestrictionsArgs) ToPromotionCodeRestrictionsOutputWithContext(ctx context.Context) PromotionCodeRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionCodeRestrictionsOutput)
}

func (i PromotionCodeRestrictionsArgs) ToPromotionCodeRestrictionsPtrOutput() PromotionCodeRestrictionsPtrOutput {
	return i.ToPromotionCodeRestrictionsPtrOutputWithContext(context.Background())
}

func (i PromotionCodeRestrictionsArgs) ToPromotionCodeRestrictionsPtrOutputWithContext(ctx context.Context) PromotionCodeRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionCodeRestrictionsOutput).ToPromotionCodeRestrictionsPtrOutputWithContext(ctx)
}

// PromotionCodeRestrictionsPtrInput is an input type that accepts PromotionCodeRestrictionsArgs, PromotionCodeRestrictionsPtr and PromotionCodeRestrictionsPtrOutput values.
// You can construct a concrete instance of `PromotionCodeRestrictionsPtrInput` via:
//
//	        PromotionCodeRestrictionsArgs{...}
//
//	or:
//
//	        nil
type PromotionCodeRestrictionsPtrInput interface {
	pulumi.Input

	ToPromotionCodeRestrictionsPtrOutput() PromotionCodeRestrictionsPtrOutput
	ToPromotionCodeRestrictionsPtrOutputWithContext(context.Context) PromotionCodeRestrictionsPtrOutput
}

type promotionCodeRestrictionsPtrType PromotionCodeRestrictionsArgs

func PromotionCodeRestrictionsPtr(v *PromotionCodeRestrictionsArgs) PromotionCodeRestrictionsPtrInput {
	return (*promotionCodeRestrictionsPtrType)(v)
}

func (*promotionCodeRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionCodeRestrictions)(nil)).Elem()
}

func (i *promotionCodeRestrictionsPtrType) ToPromotionCodeRestrictionsPtrOutput() PromotionCodeRestrictionsPtrOutput {
	return i.ToPromotionCodeRestrictionsPtrOutputWithContext(context.Background())
}

func (i *promotionCodeRestrictionsPtrType) ToPromotionCodeRestrictionsPtrOutputWithContext(ctx context.Context) PromotionCodeRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromotionCodeRestrictionsPtrOutput)
}

type PromotionCodeRestrictionsOutput struct{ *pulumi.OutputState }

func (PromotionCodeRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromotionCodeRestrictions)(nil)).Elem()
}

func (o PromotionCodeRestrictionsOutput) ToPromotionCodeRestrictionsOutput() PromotionCodeRestrictionsOutput {
	return o
}

func (o PromotionCodeRestrictionsOutput) ToPromotionCodeRestrictionsOutputWithContext(ctx context.Context) PromotionCodeRestrictionsOutput {
	return o
}

func (o PromotionCodeRestrictionsOutput) ToPromotionCodeRestrictionsPtrOutput() PromotionCodeRestrictionsPtrOutput {
	return o.ToPromotionCodeRestrictionsPtrOutputWithContext(context.Background())
}

func (o PromotionCodeRestrictionsOutput) ToPromotionCodeRestrictionsPtrOutputWithContext(ctx context.Context) PromotionCodeRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromotionCodeRestrictions) *PromotionCodeRestrictions {
		return &v
	}).(PromotionCodeRestrictionsPtrOutput)
}

// Bool. A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices.
func (o PromotionCodeRestrictionsOutput) FirstTimeTransaction() pulumi.BoolOutput {
	return o.ApplyT(func(v PromotionCodeRestrictions) bool { return v.FirstTimeTransaction }).(pulumi.BoolOutput)
}

// Int. Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
func (o PromotionCodeRestrictionsOutput) MinimumAmount() pulumi.IntOutput {
	return o.ApplyT(func(v PromotionCodeRestrictions) int { return v.MinimumAmount }).(pulumi.IntOutput)
}

// String. Three-letter ISO code for `minimumAmount`.
func (o PromotionCodeRestrictionsOutput) MinimumAmountCurrency() pulumi.StringOutput {
	return o.ApplyT(func(v PromotionCodeRestrictions) string { return v.MinimumAmountCurrency }).(pulumi.StringOutput)
}

type PromotionCodeRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (PromotionCodeRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromotionCodeRestrictions)(nil)).Elem()
}

func (o PromotionCodeRestrictionsPtrOutput) ToPromotionCodeRestrictionsPtrOutput() PromotionCodeRestrictionsPtrOutput {
	return o
}

func (o PromotionCodeRestrictionsPtrOutput) ToPromotionCodeRestrictionsPtrOutputWithContext(ctx context.Context) PromotionCodeRestrictionsPtrOutput {
	return o
}

func (o PromotionCodeRestrictionsPtrOutput) Elem() PromotionCodeRestrictionsOutput {
	return o.ApplyT(func(v *PromotionCodeRestrictions) PromotionCodeRestrictions {
		if v != nil {
			return *v
		}
		var ret PromotionCodeRestrictions
		return ret
	}).(PromotionCodeRestrictionsOutput)
}

// Bool. A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices.
func (o PromotionCodeRestrictionsPtrOutput) FirstTimeTransaction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PromotionCodeRestrictions) *bool {
		if v == nil {
			return nil
		}
		return &v.FirstTimeTransaction
	}).(pulumi.BoolPtrOutput)
}

// Int. Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
func (o PromotionCodeRestrictionsPtrOutput) MinimumAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PromotionCodeRestrictions) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumAmount
	}).(pulumi.IntPtrOutput)
}

// String. Three-letter ISO code for `minimumAmount`.
func (o PromotionCodeRestrictionsPtrOutput) MinimumAmountCurrency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromotionCodeRestrictions) *string {
		if v == nil {
			return nil
		}
		return &v.MinimumAmountCurrency
	}).(pulumi.StringPtrOutput)
}

type ShippingRateDeliveryEstimate struct {
	// List(Resource. The upper bound of the estimated range.
	// Please see Delivery Estimate Definition.
	Maximum *ShippingRateDeliveryEstimateMaximum `pulumi:"maximum"`
	// List(Resource). The lower bound of the estimated range.
	// Please see Delivery Estimate Definition.
	Minimum *ShippingRateDeliveryEstimateMinimum `pulumi:"minimum"`
}

// ShippingRateDeliveryEstimateInput is an input type that accepts ShippingRateDeliveryEstimateArgs and ShippingRateDeliveryEstimateOutput values.
// You can construct a concrete instance of `ShippingRateDeliveryEstimateInput` via:
//
//	ShippingRateDeliveryEstimateArgs{...}
type ShippingRateDeliveryEstimateInput interface {
	pulumi.Input

	ToShippingRateDeliveryEstimateOutput() ShippingRateDeliveryEstimateOutput
	ToShippingRateDeliveryEstimateOutputWithContext(context.Context) ShippingRateDeliveryEstimateOutput
}

type ShippingRateDeliveryEstimateArgs struct {
	// List(Resource. The upper bound of the estimated range.
	// Please see Delivery Estimate Definition.
	Maximum ShippingRateDeliveryEstimateMaximumPtrInput `pulumi:"maximum"`
	// List(Resource). The lower bound of the estimated range.
	// Please see Delivery Estimate Definition.
	Minimum ShippingRateDeliveryEstimateMinimumPtrInput `pulumi:"minimum"`
}

func (ShippingRateDeliveryEstimateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateDeliveryEstimate)(nil)).Elem()
}

func (i ShippingRateDeliveryEstimateArgs) ToShippingRateDeliveryEstimateOutput() ShippingRateDeliveryEstimateOutput {
	return i.ToShippingRateDeliveryEstimateOutputWithContext(context.Background())
}

func (i ShippingRateDeliveryEstimateArgs) ToShippingRateDeliveryEstimateOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateOutput)
}

// ShippingRateDeliveryEstimateArrayInput is an input type that accepts ShippingRateDeliveryEstimateArray and ShippingRateDeliveryEstimateArrayOutput values.
// You can construct a concrete instance of `ShippingRateDeliveryEstimateArrayInput` via:
//
//	ShippingRateDeliveryEstimateArray{ ShippingRateDeliveryEstimateArgs{...} }
type ShippingRateDeliveryEstimateArrayInput interface {
	pulumi.Input

	ToShippingRateDeliveryEstimateArrayOutput() ShippingRateDeliveryEstimateArrayOutput
	ToShippingRateDeliveryEstimateArrayOutputWithContext(context.Context) ShippingRateDeliveryEstimateArrayOutput
}

type ShippingRateDeliveryEstimateArray []ShippingRateDeliveryEstimateInput

func (ShippingRateDeliveryEstimateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingRateDeliveryEstimate)(nil)).Elem()
}

func (i ShippingRateDeliveryEstimateArray) ToShippingRateDeliveryEstimateArrayOutput() ShippingRateDeliveryEstimateArrayOutput {
	return i.ToShippingRateDeliveryEstimateArrayOutputWithContext(context.Background())
}

func (i ShippingRateDeliveryEstimateArray) ToShippingRateDeliveryEstimateArrayOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateArrayOutput)
}

type ShippingRateDeliveryEstimateOutput struct{ *pulumi.OutputState }

func (ShippingRateDeliveryEstimateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateDeliveryEstimate)(nil)).Elem()
}

func (o ShippingRateDeliveryEstimateOutput) ToShippingRateDeliveryEstimateOutput() ShippingRateDeliveryEstimateOutput {
	return o
}

func (o ShippingRateDeliveryEstimateOutput) ToShippingRateDeliveryEstimateOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateOutput {
	return o
}

// List(Resource. The upper bound of the estimated range.
// Please see Delivery Estimate Definition.
func (o ShippingRateDeliveryEstimateOutput) Maximum() ShippingRateDeliveryEstimateMaximumPtrOutput {
	return o.ApplyT(func(v ShippingRateDeliveryEstimate) *ShippingRateDeliveryEstimateMaximum { return v.Maximum }).(ShippingRateDeliveryEstimateMaximumPtrOutput)
}

// List(Resource). The lower bound of the estimated range.
// Please see Delivery Estimate Definition.
func (o ShippingRateDeliveryEstimateOutput) Minimum() ShippingRateDeliveryEstimateMinimumPtrOutput {
	return o.ApplyT(func(v ShippingRateDeliveryEstimate) *ShippingRateDeliveryEstimateMinimum { return v.Minimum }).(ShippingRateDeliveryEstimateMinimumPtrOutput)
}

type ShippingRateDeliveryEstimateArrayOutput struct{ *pulumi.OutputState }

func (ShippingRateDeliveryEstimateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingRateDeliveryEstimate)(nil)).Elem()
}

func (o ShippingRateDeliveryEstimateArrayOutput) ToShippingRateDeliveryEstimateArrayOutput() ShippingRateDeliveryEstimateArrayOutput {
	return o
}

func (o ShippingRateDeliveryEstimateArrayOutput) ToShippingRateDeliveryEstimateArrayOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateArrayOutput {
	return o
}

func (o ShippingRateDeliveryEstimateArrayOutput) Index(i pulumi.IntInput) ShippingRateDeliveryEstimateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShippingRateDeliveryEstimate {
		return vs[0].([]ShippingRateDeliveryEstimate)[vs[1].(int)]
	}).(ShippingRateDeliveryEstimateOutput)
}

type ShippingRateDeliveryEstimateMaximum struct {
	// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
	Unit string `pulumi:"unit"`
	// Int. Must be greater than 0.
	Value int `pulumi:"value"`
}

// ShippingRateDeliveryEstimateMaximumInput is an input type that accepts ShippingRateDeliveryEstimateMaximumArgs and ShippingRateDeliveryEstimateMaximumOutput values.
// You can construct a concrete instance of `ShippingRateDeliveryEstimateMaximumInput` via:
//
//	ShippingRateDeliveryEstimateMaximumArgs{...}
type ShippingRateDeliveryEstimateMaximumInput interface {
	pulumi.Input

	ToShippingRateDeliveryEstimateMaximumOutput() ShippingRateDeliveryEstimateMaximumOutput
	ToShippingRateDeliveryEstimateMaximumOutputWithContext(context.Context) ShippingRateDeliveryEstimateMaximumOutput
}

type ShippingRateDeliveryEstimateMaximumArgs struct {
	// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Int. Must be greater than 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (ShippingRateDeliveryEstimateMaximumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateDeliveryEstimateMaximum)(nil)).Elem()
}

func (i ShippingRateDeliveryEstimateMaximumArgs) ToShippingRateDeliveryEstimateMaximumOutput() ShippingRateDeliveryEstimateMaximumOutput {
	return i.ToShippingRateDeliveryEstimateMaximumOutputWithContext(context.Background())
}

func (i ShippingRateDeliveryEstimateMaximumArgs) ToShippingRateDeliveryEstimateMaximumOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMaximumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateMaximumOutput)
}

func (i ShippingRateDeliveryEstimateMaximumArgs) ToShippingRateDeliveryEstimateMaximumPtrOutput() ShippingRateDeliveryEstimateMaximumPtrOutput {
	return i.ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(context.Background())
}

func (i ShippingRateDeliveryEstimateMaximumArgs) ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMaximumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateMaximumOutput).ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(ctx)
}

// ShippingRateDeliveryEstimateMaximumPtrInput is an input type that accepts ShippingRateDeliveryEstimateMaximumArgs, ShippingRateDeliveryEstimateMaximumPtr and ShippingRateDeliveryEstimateMaximumPtrOutput values.
// You can construct a concrete instance of `ShippingRateDeliveryEstimateMaximumPtrInput` via:
//
//	        ShippingRateDeliveryEstimateMaximumArgs{...}
//
//	or:
//
//	        nil
type ShippingRateDeliveryEstimateMaximumPtrInput interface {
	pulumi.Input

	ToShippingRateDeliveryEstimateMaximumPtrOutput() ShippingRateDeliveryEstimateMaximumPtrOutput
	ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(context.Context) ShippingRateDeliveryEstimateMaximumPtrOutput
}

type shippingRateDeliveryEstimateMaximumPtrType ShippingRateDeliveryEstimateMaximumArgs

func ShippingRateDeliveryEstimateMaximumPtr(v *ShippingRateDeliveryEstimateMaximumArgs) ShippingRateDeliveryEstimateMaximumPtrInput {
	return (*shippingRateDeliveryEstimateMaximumPtrType)(v)
}

func (*shippingRateDeliveryEstimateMaximumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingRateDeliveryEstimateMaximum)(nil)).Elem()
}

func (i *shippingRateDeliveryEstimateMaximumPtrType) ToShippingRateDeliveryEstimateMaximumPtrOutput() ShippingRateDeliveryEstimateMaximumPtrOutput {
	return i.ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(context.Background())
}

func (i *shippingRateDeliveryEstimateMaximumPtrType) ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMaximumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateMaximumPtrOutput)
}

type ShippingRateDeliveryEstimateMaximumOutput struct{ *pulumi.OutputState }

func (ShippingRateDeliveryEstimateMaximumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateDeliveryEstimateMaximum)(nil)).Elem()
}

func (o ShippingRateDeliveryEstimateMaximumOutput) ToShippingRateDeliveryEstimateMaximumOutput() ShippingRateDeliveryEstimateMaximumOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMaximumOutput) ToShippingRateDeliveryEstimateMaximumOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMaximumOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMaximumOutput) ToShippingRateDeliveryEstimateMaximumPtrOutput() ShippingRateDeliveryEstimateMaximumPtrOutput {
	return o.ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(context.Background())
}

func (o ShippingRateDeliveryEstimateMaximumOutput) ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMaximumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingRateDeliveryEstimateMaximum) *ShippingRateDeliveryEstimateMaximum {
		return &v
	}).(ShippingRateDeliveryEstimateMaximumPtrOutput)
}

// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
func (o ShippingRateDeliveryEstimateMaximumOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingRateDeliveryEstimateMaximum) string { return v.Unit }).(pulumi.StringOutput)
}

// Int. Must be greater than 0.
func (o ShippingRateDeliveryEstimateMaximumOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingRateDeliveryEstimateMaximum) int { return v.Value }).(pulumi.IntOutput)
}

type ShippingRateDeliveryEstimateMaximumPtrOutput struct{ *pulumi.OutputState }

func (ShippingRateDeliveryEstimateMaximumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingRateDeliveryEstimateMaximum)(nil)).Elem()
}

func (o ShippingRateDeliveryEstimateMaximumPtrOutput) ToShippingRateDeliveryEstimateMaximumPtrOutput() ShippingRateDeliveryEstimateMaximumPtrOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMaximumPtrOutput) ToShippingRateDeliveryEstimateMaximumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMaximumPtrOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMaximumPtrOutput) Elem() ShippingRateDeliveryEstimateMaximumOutput {
	return o.ApplyT(func(v *ShippingRateDeliveryEstimateMaximum) ShippingRateDeliveryEstimateMaximum {
		if v != nil {
			return *v
		}
		var ret ShippingRateDeliveryEstimateMaximum
		return ret
	}).(ShippingRateDeliveryEstimateMaximumOutput)
}

// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
func (o ShippingRateDeliveryEstimateMaximumPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingRateDeliveryEstimateMaximum) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Int. Must be greater than 0.
func (o ShippingRateDeliveryEstimateMaximumPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingRateDeliveryEstimateMaximum) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type ShippingRateDeliveryEstimateMinimum struct {
	// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
	Unit string `pulumi:"unit"`
	// Int. Must be greater than 0.
	Value int `pulumi:"value"`
}

// ShippingRateDeliveryEstimateMinimumInput is an input type that accepts ShippingRateDeliveryEstimateMinimumArgs and ShippingRateDeliveryEstimateMinimumOutput values.
// You can construct a concrete instance of `ShippingRateDeliveryEstimateMinimumInput` via:
//
//	ShippingRateDeliveryEstimateMinimumArgs{...}
type ShippingRateDeliveryEstimateMinimumInput interface {
	pulumi.Input

	ToShippingRateDeliveryEstimateMinimumOutput() ShippingRateDeliveryEstimateMinimumOutput
	ToShippingRateDeliveryEstimateMinimumOutputWithContext(context.Context) ShippingRateDeliveryEstimateMinimumOutput
}

type ShippingRateDeliveryEstimateMinimumArgs struct {
	// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Int. Must be greater than 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (ShippingRateDeliveryEstimateMinimumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateDeliveryEstimateMinimum)(nil)).Elem()
}

func (i ShippingRateDeliveryEstimateMinimumArgs) ToShippingRateDeliveryEstimateMinimumOutput() ShippingRateDeliveryEstimateMinimumOutput {
	return i.ToShippingRateDeliveryEstimateMinimumOutputWithContext(context.Background())
}

func (i ShippingRateDeliveryEstimateMinimumArgs) ToShippingRateDeliveryEstimateMinimumOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMinimumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateMinimumOutput)
}

func (i ShippingRateDeliveryEstimateMinimumArgs) ToShippingRateDeliveryEstimateMinimumPtrOutput() ShippingRateDeliveryEstimateMinimumPtrOutput {
	return i.ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(context.Background())
}

func (i ShippingRateDeliveryEstimateMinimumArgs) ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMinimumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateMinimumOutput).ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(ctx)
}

// ShippingRateDeliveryEstimateMinimumPtrInput is an input type that accepts ShippingRateDeliveryEstimateMinimumArgs, ShippingRateDeliveryEstimateMinimumPtr and ShippingRateDeliveryEstimateMinimumPtrOutput values.
// You can construct a concrete instance of `ShippingRateDeliveryEstimateMinimumPtrInput` via:
//
//	        ShippingRateDeliveryEstimateMinimumArgs{...}
//
//	or:
//
//	        nil
type ShippingRateDeliveryEstimateMinimumPtrInput interface {
	pulumi.Input

	ToShippingRateDeliveryEstimateMinimumPtrOutput() ShippingRateDeliveryEstimateMinimumPtrOutput
	ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(context.Context) ShippingRateDeliveryEstimateMinimumPtrOutput
}

type shippingRateDeliveryEstimateMinimumPtrType ShippingRateDeliveryEstimateMinimumArgs

func ShippingRateDeliveryEstimateMinimumPtr(v *ShippingRateDeliveryEstimateMinimumArgs) ShippingRateDeliveryEstimateMinimumPtrInput {
	return (*shippingRateDeliveryEstimateMinimumPtrType)(v)
}

func (*shippingRateDeliveryEstimateMinimumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingRateDeliveryEstimateMinimum)(nil)).Elem()
}

func (i *shippingRateDeliveryEstimateMinimumPtrType) ToShippingRateDeliveryEstimateMinimumPtrOutput() ShippingRateDeliveryEstimateMinimumPtrOutput {
	return i.ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(context.Background())
}

func (i *shippingRateDeliveryEstimateMinimumPtrType) ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMinimumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateDeliveryEstimateMinimumPtrOutput)
}

type ShippingRateDeliveryEstimateMinimumOutput struct{ *pulumi.OutputState }

func (ShippingRateDeliveryEstimateMinimumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateDeliveryEstimateMinimum)(nil)).Elem()
}

func (o ShippingRateDeliveryEstimateMinimumOutput) ToShippingRateDeliveryEstimateMinimumOutput() ShippingRateDeliveryEstimateMinimumOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMinimumOutput) ToShippingRateDeliveryEstimateMinimumOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMinimumOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMinimumOutput) ToShippingRateDeliveryEstimateMinimumPtrOutput() ShippingRateDeliveryEstimateMinimumPtrOutput {
	return o.ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(context.Background())
}

func (o ShippingRateDeliveryEstimateMinimumOutput) ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMinimumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingRateDeliveryEstimateMinimum) *ShippingRateDeliveryEstimateMinimum {
		return &v
	}).(ShippingRateDeliveryEstimateMinimumPtrOutput)
}

// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
func (o ShippingRateDeliveryEstimateMinimumOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingRateDeliveryEstimateMinimum) string { return v.Unit }).(pulumi.StringOutput)
}

// Int. Must be greater than 0.
func (o ShippingRateDeliveryEstimateMinimumOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingRateDeliveryEstimateMinimum) int { return v.Value }).(pulumi.IntOutput)
}

type ShippingRateDeliveryEstimateMinimumPtrOutput struct{ *pulumi.OutputState }

func (ShippingRateDeliveryEstimateMinimumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingRateDeliveryEstimateMinimum)(nil)).Elem()
}

func (o ShippingRateDeliveryEstimateMinimumPtrOutput) ToShippingRateDeliveryEstimateMinimumPtrOutput() ShippingRateDeliveryEstimateMinimumPtrOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMinimumPtrOutput) ToShippingRateDeliveryEstimateMinimumPtrOutputWithContext(ctx context.Context) ShippingRateDeliveryEstimateMinimumPtrOutput {
	return o
}

func (o ShippingRateDeliveryEstimateMinimumPtrOutput) Elem() ShippingRateDeliveryEstimateMinimumOutput {
	return o.ApplyT(func(v *ShippingRateDeliveryEstimateMinimum) ShippingRateDeliveryEstimateMinimum {
		if v != nil {
			return *v
		}
		var ret ShippingRateDeliveryEstimateMinimum
		return ret
	}).(ShippingRateDeliveryEstimateMinimumOutput)
}

// String. A unit of time. Possible values `hour`, `day`, `businessDay`, `week` and `month`.
func (o ShippingRateDeliveryEstimateMinimumPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingRateDeliveryEstimateMinimum) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Int. Must be greater than 0.
func (o ShippingRateDeliveryEstimateMinimumPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingRateDeliveryEstimateMinimum) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type ShippingRateFixedAmount struct {
	// Int. A non-negative integer in cents representing how much to charge.
	Amount int `pulumi:"amount"`
	// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
	Currency string `pulumi:"currency"`
	// List(Resource). Please see argument details Currency Option
	CurrencyOptions []ShippingRateFixedAmountCurrencyOption `pulumi:"currencyOptions"`
}

// ShippingRateFixedAmountInput is an input type that accepts ShippingRateFixedAmountArgs and ShippingRateFixedAmountOutput values.
// You can construct a concrete instance of `ShippingRateFixedAmountInput` via:
//
//	ShippingRateFixedAmountArgs{...}
type ShippingRateFixedAmountInput interface {
	pulumi.Input

	ToShippingRateFixedAmountOutput() ShippingRateFixedAmountOutput
	ToShippingRateFixedAmountOutputWithContext(context.Context) ShippingRateFixedAmountOutput
}

type ShippingRateFixedAmountArgs struct {
	// Int. A non-negative integer in cents representing how much to charge.
	Amount pulumi.IntInput `pulumi:"amount"`
	// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
	Currency pulumi.StringInput `pulumi:"currency"`
	// List(Resource). Please see argument details Currency Option
	CurrencyOptions ShippingRateFixedAmountCurrencyOptionArrayInput `pulumi:"currencyOptions"`
}

func (ShippingRateFixedAmountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateFixedAmount)(nil)).Elem()
}

func (i ShippingRateFixedAmountArgs) ToShippingRateFixedAmountOutput() ShippingRateFixedAmountOutput {
	return i.ToShippingRateFixedAmountOutputWithContext(context.Background())
}

func (i ShippingRateFixedAmountArgs) ToShippingRateFixedAmountOutputWithContext(ctx context.Context) ShippingRateFixedAmountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateFixedAmountOutput)
}

func (i ShippingRateFixedAmountArgs) ToShippingRateFixedAmountPtrOutput() ShippingRateFixedAmountPtrOutput {
	return i.ToShippingRateFixedAmountPtrOutputWithContext(context.Background())
}

func (i ShippingRateFixedAmountArgs) ToShippingRateFixedAmountPtrOutputWithContext(ctx context.Context) ShippingRateFixedAmountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateFixedAmountOutput).ToShippingRateFixedAmountPtrOutputWithContext(ctx)
}

// ShippingRateFixedAmountPtrInput is an input type that accepts ShippingRateFixedAmountArgs, ShippingRateFixedAmountPtr and ShippingRateFixedAmountPtrOutput values.
// You can construct a concrete instance of `ShippingRateFixedAmountPtrInput` via:
//
//	        ShippingRateFixedAmountArgs{...}
//
//	or:
//
//	        nil
type ShippingRateFixedAmountPtrInput interface {
	pulumi.Input

	ToShippingRateFixedAmountPtrOutput() ShippingRateFixedAmountPtrOutput
	ToShippingRateFixedAmountPtrOutputWithContext(context.Context) ShippingRateFixedAmountPtrOutput
}

type shippingRateFixedAmountPtrType ShippingRateFixedAmountArgs

func ShippingRateFixedAmountPtr(v *ShippingRateFixedAmountArgs) ShippingRateFixedAmountPtrInput {
	return (*shippingRateFixedAmountPtrType)(v)
}

func (*shippingRateFixedAmountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingRateFixedAmount)(nil)).Elem()
}

func (i *shippingRateFixedAmountPtrType) ToShippingRateFixedAmountPtrOutput() ShippingRateFixedAmountPtrOutput {
	return i.ToShippingRateFixedAmountPtrOutputWithContext(context.Background())
}

func (i *shippingRateFixedAmountPtrType) ToShippingRateFixedAmountPtrOutputWithContext(ctx context.Context) ShippingRateFixedAmountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateFixedAmountPtrOutput)
}

type ShippingRateFixedAmountOutput struct{ *pulumi.OutputState }

func (ShippingRateFixedAmountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateFixedAmount)(nil)).Elem()
}

func (o ShippingRateFixedAmountOutput) ToShippingRateFixedAmountOutput() ShippingRateFixedAmountOutput {
	return o
}

func (o ShippingRateFixedAmountOutput) ToShippingRateFixedAmountOutputWithContext(ctx context.Context) ShippingRateFixedAmountOutput {
	return o
}

func (o ShippingRateFixedAmountOutput) ToShippingRateFixedAmountPtrOutput() ShippingRateFixedAmountPtrOutput {
	return o.ToShippingRateFixedAmountPtrOutputWithContext(context.Background())
}

func (o ShippingRateFixedAmountOutput) ToShippingRateFixedAmountPtrOutputWithContext(ctx context.Context) ShippingRateFixedAmountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingRateFixedAmount) *ShippingRateFixedAmount {
		return &v
	}).(ShippingRateFixedAmountPtrOutput)
}

// Int. A non-negative integer in cents representing how much to charge.
func (o ShippingRateFixedAmountOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingRateFixedAmount) int { return v.Amount }).(pulumi.IntOutput)
}

// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
func (o ShippingRateFixedAmountOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingRateFixedAmount) string { return v.Currency }).(pulumi.StringOutput)
}

// List(Resource). Please see argument details Currency Option
func (o ShippingRateFixedAmountOutput) CurrencyOptions() ShippingRateFixedAmountCurrencyOptionArrayOutput {
	return o.ApplyT(func(v ShippingRateFixedAmount) []ShippingRateFixedAmountCurrencyOption { return v.CurrencyOptions }).(ShippingRateFixedAmountCurrencyOptionArrayOutput)
}

type ShippingRateFixedAmountPtrOutput struct{ *pulumi.OutputState }

func (ShippingRateFixedAmountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingRateFixedAmount)(nil)).Elem()
}

func (o ShippingRateFixedAmountPtrOutput) ToShippingRateFixedAmountPtrOutput() ShippingRateFixedAmountPtrOutput {
	return o
}

func (o ShippingRateFixedAmountPtrOutput) ToShippingRateFixedAmountPtrOutputWithContext(ctx context.Context) ShippingRateFixedAmountPtrOutput {
	return o
}

func (o ShippingRateFixedAmountPtrOutput) Elem() ShippingRateFixedAmountOutput {
	return o.ApplyT(func(v *ShippingRateFixedAmount) ShippingRateFixedAmount {
		if v != nil {
			return *v
		}
		var ret ShippingRateFixedAmount
		return ret
	}).(ShippingRateFixedAmountOutput)
}

// Int. A non-negative integer in cents representing how much to charge.
func (o ShippingRateFixedAmountPtrOutput) Amount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingRateFixedAmount) *int {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.IntPtrOutput)
}

// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
func (o ShippingRateFixedAmountPtrOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingRateFixedAmount) *string {
		if v == nil {
			return nil
		}
		return &v.Currency
	}).(pulumi.StringPtrOutput)
}

// List(Resource). Please see argument details Currency Option
func (o ShippingRateFixedAmountPtrOutput) CurrencyOptions() ShippingRateFixedAmountCurrencyOptionArrayOutput {
	return o.ApplyT(func(v *ShippingRateFixedAmount) []ShippingRateFixedAmountCurrencyOption {
		if v == nil {
			return nil
		}
		return v.CurrencyOptions
	}).(ShippingRateFixedAmountCurrencyOptionArrayOutput)
}

type ShippingRateFixedAmountCurrencyOption struct {
	// Int. (Required) Int. A non-negative integer in cents representing how much to charge.
	Amount int `pulumi:"amount"`
	// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
	Currency string `pulumi:"currency"`
	// Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or unspecified.
	TaxBehavior *string `pulumi:"taxBehavior"`
}

// ShippingRateFixedAmountCurrencyOptionInput is an input type that accepts ShippingRateFixedAmountCurrencyOptionArgs and ShippingRateFixedAmountCurrencyOptionOutput values.
// You can construct a concrete instance of `ShippingRateFixedAmountCurrencyOptionInput` via:
//
//	ShippingRateFixedAmountCurrencyOptionArgs{...}
type ShippingRateFixedAmountCurrencyOptionInput interface {
	pulumi.Input

	ToShippingRateFixedAmountCurrencyOptionOutput() ShippingRateFixedAmountCurrencyOptionOutput
	ToShippingRateFixedAmountCurrencyOptionOutputWithContext(context.Context) ShippingRateFixedAmountCurrencyOptionOutput
}

type ShippingRateFixedAmountCurrencyOptionArgs struct {
	// Int. (Required) Int. A non-negative integer in cents representing how much to charge.
	Amount pulumi.IntInput `pulumi:"amount"`
	// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
	Currency pulumi.StringInput `pulumi:"currency"`
	// Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or unspecified.
	TaxBehavior pulumi.StringPtrInput `pulumi:"taxBehavior"`
}

func (ShippingRateFixedAmountCurrencyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateFixedAmountCurrencyOption)(nil)).Elem()
}

func (i ShippingRateFixedAmountCurrencyOptionArgs) ToShippingRateFixedAmountCurrencyOptionOutput() ShippingRateFixedAmountCurrencyOptionOutput {
	return i.ToShippingRateFixedAmountCurrencyOptionOutputWithContext(context.Background())
}

func (i ShippingRateFixedAmountCurrencyOptionArgs) ToShippingRateFixedAmountCurrencyOptionOutputWithContext(ctx context.Context) ShippingRateFixedAmountCurrencyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateFixedAmountCurrencyOptionOutput)
}

// ShippingRateFixedAmountCurrencyOptionArrayInput is an input type that accepts ShippingRateFixedAmountCurrencyOptionArray and ShippingRateFixedAmountCurrencyOptionArrayOutput values.
// You can construct a concrete instance of `ShippingRateFixedAmountCurrencyOptionArrayInput` via:
//
//	ShippingRateFixedAmountCurrencyOptionArray{ ShippingRateFixedAmountCurrencyOptionArgs{...} }
type ShippingRateFixedAmountCurrencyOptionArrayInput interface {
	pulumi.Input

	ToShippingRateFixedAmountCurrencyOptionArrayOutput() ShippingRateFixedAmountCurrencyOptionArrayOutput
	ToShippingRateFixedAmountCurrencyOptionArrayOutputWithContext(context.Context) ShippingRateFixedAmountCurrencyOptionArrayOutput
}

type ShippingRateFixedAmountCurrencyOptionArray []ShippingRateFixedAmountCurrencyOptionInput

func (ShippingRateFixedAmountCurrencyOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingRateFixedAmountCurrencyOption)(nil)).Elem()
}

func (i ShippingRateFixedAmountCurrencyOptionArray) ToShippingRateFixedAmountCurrencyOptionArrayOutput() ShippingRateFixedAmountCurrencyOptionArrayOutput {
	return i.ToShippingRateFixedAmountCurrencyOptionArrayOutputWithContext(context.Background())
}

func (i ShippingRateFixedAmountCurrencyOptionArray) ToShippingRateFixedAmountCurrencyOptionArrayOutputWithContext(ctx context.Context) ShippingRateFixedAmountCurrencyOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingRateFixedAmountCurrencyOptionArrayOutput)
}

type ShippingRateFixedAmountCurrencyOptionOutput struct{ *pulumi.OutputState }

func (ShippingRateFixedAmountCurrencyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingRateFixedAmountCurrencyOption)(nil)).Elem()
}

func (o ShippingRateFixedAmountCurrencyOptionOutput) ToShippingRateFixedAmountCurrencyOptionOutput() ShippingRateFixedAmountCurrencyOptionOutput {
	return o
}

func (o ShippingRateFixedAmountCurrencyOptionOutput) ToShippingRateFixedAmountCurrencyOptionOutputWithContext(ctx context.Context) ShippingRateFixedAmountCurrencyOptionOutput {
	return o
}

// Int. (Required) Int. A non-negative integer in cents representing how much to charge.
func (o ShippingRateFixedAmountCurrencyOptionOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingRateFixedAmountCurrencyOption) int { return v.Amount }).(pulumi.IntOutput)
}

// String. Three-letter ISO currency code, in lowercase - [supported currencies](https://stripe.com/docs/currencies).
func (o ShippingRateFixedAmountCurrencyOptionOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingRateFixedAmountCurrencyOption) string { return v.Currency }).(pulumi.StringOutput)
}

// Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or unspecified.
func (o ShippingRateFixedAmountCurrencyOptionOutput) TaxBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingRateFixedAmountCurrencyOption) *string { return v.TaxBehavior }).(pulumi.StringPtrOutput)
}

type ShippingRateFixedAmountCurrencyOptionArrayOutput struct{ *pulumi.OutputState }

func (ShippingRateFixedAmountCurrencyOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingRateFixedAmountCurrencyOption)(nil)).Elem()
}

func (o ShippingRateFixedAmountCurrencyOptionArrayOutput) ToShippingRateFixedAmountCurrencyOptionArrayOutput() ShippingRateFixedAmountCurrencyOptionArrayOutput {
	return o
}

func (o ShippingRateFixedAmountCurrencyOptionArrayOutput) ToShippingRateFixedAmountCurrencyOptionArrayOutputWithContext(ctx context.Context) ShippingRateFixedAmountCurrencyOptionArrayOutput {
	return o
}

func (o ShippingRateFixedAmountCurrencyOptionArrayOutput) Index(i pulumi.IntInput) ShippingRateFixedAmountCurrencyOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShippingRateFixedAmountCurrencyOption {
		return vs[0].([]ShippingRateFixedAmountCurrencyOption)[vs[1].(int)]
	}).(ShippingRateFixedAmountCurrencyOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileLinkInput)(nil)).Elem(), FileLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileLinkArrayInput)(nil)).Elem(), FileLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileLinkDataInput)(nil)).Elem(), FileLinkDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileLinkDataPtrInput)(nil)).Elem(), FileLinkDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationBusinessProfileInput)(nil)).Elem(), PortalConfigurationBusinessProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationBusinessProfilePtrInput)(nil)).Elem(), PortalConfigurationBusinessProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesInput)(nil)).Elem(), PortalConfigurationFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesPtrInput)(nil)).Elem(), PortalConfigurationFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesCustomerUpdateInput)(nil)).Elem(), PortalConfigurationFeaturesCustomerUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesCustomerUpdatePtrInput)(nil)).Elem(), PortalConfigurationFeaturesCustomerUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesInvoiceHistoryInput)(nil)).Elem(), PortalConfigurationFeaturesInvoiceHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesInvoiceHistoryPtrInput)(nil)).Elem(), PortalConfigurationFeaturesInvoiceHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesPaymentMethodUpdateInput)(nil)).Elem(), PortalConfigurationFeaturesPaymentMethodUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesPaymentMethodUpdatePtrInput)(nil)).Elem(), PortalConfigurationFeaturesPaymentMethodUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancelInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionCancelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancelPtrInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionCancelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancelCancellationReasonInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionCancelCancellationReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionPauseInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionPauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionPauseArrayInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionPauseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdateInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdateArrayInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionUpdateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdateProductInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionUpdateProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationFeaturesSubscriptionUpdateProductArrayInput)(nil)).Elem(), PortalConfigurationFeaturesSubscriptionUpdateProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationLoginPageInput)(nil)).Elem(), PortalConfigurationLoginPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortalConfigurationLoginPagePtrInput)(nil)).Elem(), PortalConfigurationLoginPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceCurrencyOptionInput)(nil)).Elem(), PriceCurrencyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceCurrencyOptionArrayInput)(nil)).Elem(), PriceCurrencyOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceCurrencyOptionCustomUnitAmountInput)(nil)).Elem(), PriceCurrencyOptionCustomUnitAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceCurrencyOptionCustomUnitAmountPtrInput)(nil)).Elem(), PriceCurrencyOptionCustomUnitAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceCurrencyOptionTierInput)(nil)).Elem(), PriceCurrencyOptionTierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceCurrencyOptionTierArrayInput)(nil)).Elem(), PriceCurrencyOptionTierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceRecurringInput)(nil)).Elem(), PriceRecurringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceRecurringPtrInput)(nil)).Elem(), PriceRecurringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceTierInput)(nil)).Elem(), PriceTierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceTierArrayInput)(nil)).Elem(), PriceTierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceTransformQuantityInput)(nil)).Elem(), PriceTransformQuantityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PriceTransformQuantityPtrInput)(nil)).Elem(), PriceTransformQuantityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionCodeRestrictionsInput)(nil)).Elem(), PromotionCodeRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromotionCodeRestrictionsPtrInput)(nil)).Elem(), PromotionCodeRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateDeliveryEstimateInput)(nil)).Elem(), ShippingRateDeliveryEstimateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateDeliveryEstimateArrayInput)(nil)).Elem(), ShippingRateDeliveryEstimateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateDeliveryEstimateMaximumInput)(nil)).Elem(), ShippingRateDeliveryEstimateMaximumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateDeliveryEstimateMaximumPtrInput)(nil)).Elem(), ShippingRateDeliveryEstimateMaximumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateDeliveryEstimateMinimumInput)(nil)).Elem(), ShippingRateDeliveryEstimateMinimumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateDeliveryEstimateMinimumPtrInput)(nil)).Elem(), ShippingRateDeliveryEstimateMinimumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateFixedAmountInput)(nil)).Elem(), ShippingRateFixedAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateFixedAmountPtrInput)(nil)).Elem(), ShippingRateFixedAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateFixedAmountCurrencyOptionInput)(nil)).Elem(), ShippingRateFixedAmountCurrencyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShippingRateFixedAmountCurrencyOptionArrayInput)(nil)).Elem(), ShippingRateFixedAmountCurrencyOptionArray{})
	pulumi.RegisterOutputType(FileLinkOutput{})
	pulumi.RegisterOutputType(FileLinkArrayOutput{})
	pulumi.RegisterOutputType(FileLinkDataOutput{})
	pulumi.RegisterOutputType(FileLinkDataPtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationBusinessProfileOutput{})
	pulumi.RegisterOutputType(PortalConfigurationBusinessProfilePtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesPtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesCustomerUpdateOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesCustomerUpdatePtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesInvoiceHistoryOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesInvoiceHistoryPtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesPaymentMethodUpdateOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesPaymentMethodUpdatePtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionCancelOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionCancelPtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionCancelCancellationReasonPtrOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionPauseOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionPauseArrayOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionUpdateOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionUpdateArrayOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionUpdateProductOutput{})
	pulumi.RegisterOutputType(PortalConfigurationFeaturesSubscriptionUpdateProductArrayOutput{})
	pulumi.RegisterOutputType(PortalConfigurationLoginPageOutput{})
	pulumi.RegisterOutputType(PortalConfigurationLoginPagePtrOutput{})
	pulumi.RegisterOutputType(PriceCurrencyOptionOutput{})
	pulumi.RegisterOutputType(PriceCurrencyOptionArrayOutput{})
	pulumi.RegisterOutputType(PriceCurrencyOptionCustomUnitAmountOutput{})
	pulumi.RegisterOutputType(PriceCurrencyOptionCustomUnitAmountPtrOutput{})
	pulumi.RegisterOutputType(PriceCurrencyOptionTierOutput{})
	pulumi.RegisterOutputType(PriceCurrencyOptionTierArrayOutput{})
	pulumi.RegisterOutputType(PriceRecurringOutput{})
	pulumi.RegisterOutputType(PriceRecurringPtrOutput{})
	pulumi.RegisterOutputType(PriceTierOutput{})
	pulumi.RegisterOutputType(PriceTierArrayOutput{})
	pulumi.RegisterOutputType(PriceTransformQuantityOutput{})
	pulumi.RegisterOutputType(PriceTransformQuantityPtrOutput{})
	pulumi.RegisterOutputType(PromotionCodeRestrictionsOutput{})
	pulumi.RegisterOutputType(PromotionCodeRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(ShippingRateDeliveryEstimateOutput{})
	pulumi.RegisterOutputType(ShippingRateDeliveryEstimateArrayOutput{})
	pulumi.RegisterOutputType(ShippingRateDeliveryEstimateMaximumOutput{})
	pulumi.RegisterOutputType(ShippingRateDeliveryEstimateMaximumPtrOutput{})
	pulumi.RegisterOutputType(ShippingRateDeliveryEstimateMinimumOutput{})
	pulumi.RegisterOutputType(ShippingRateDeliveryEstimateMinimumPtrOutput{})
	pulumi.RegisterOutputType(ShippingRateFixedAmountOutput{})
	pulumi.RegisterOutputType(ShippingRateFixedAmountPtrOutput{})
	pulumi.RegisterOutputType(ShippingRateFixedAmountCurrencyOptionOutput{})
	pulumi.RegisterOutputType(ShippingRateFixedAmountCurrencyOptionArrayOutput{})
}
