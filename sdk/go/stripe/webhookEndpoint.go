// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stripe

import (
	"context"
	"reflect"

	"errors"
	"github.com/georgegebbett/pulumi-stripe/sdk/go/stripe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// With this resource, you can create a webhook endpoint - [Stripe API webhook endpoint documentation](https://stripe.com/docs/api/webhook_endpoints).
//
// You can configure webhook endpoints via the API to be notified about events that happen in your Stripe account or connected accounts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/georgegebbett/pulumi-stripe/sdk/go/stripe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := stripe.NewWebhookEndpoint(ctx, "webhook", &stripe.WebhookEndpointArgs{
//				Description: pulumi.String("example of webhook"),
//				EnabledEvents: pulumi.StringArray{
//					pulumi.String("customer.subscription.created"),
//					pulumi.String("customer.subscription.updated"),
//				},
//				Url: pulumi.String("https://webhook-url-consumer.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type WebhookEndpoint struct {
	pulumi.CustomResourceState

	// String. Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe Version.
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Bool. Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
	Connect pulumi.BoolPtrOutput `pulumi:"connect"`
	// String. Description of what the webhook is used for.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Bool. Disable the webhook endpoint if set to `true`. Can be used only for modification already existing webhook endpoint.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// List(String). The list of events to enable for this endpoint. `[*]` indicates that all events are enabled, except those that require explicit selection. All supported events listed here: [Stripe event types](https://stripe.com/docs/api/events/types).
	EnabledEvents pulumi.StringArrayOutput `pulumi:"enabledEvents"`
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// String. The endpoint’s secret, used to generate webhook signatures. This field is marked as `sensitive`.
	Secret pulumi.StringOutput `pulumi:"secret"`
	// String. The URL of the webhook endpoint.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewWebhookEndpoint registers a new resource with the given unique name, arguments, and options.
func NewWebhookEndpoint(ctx *pulumi.Context,
	name string, args *WebhookEndpointArgs, opts ...pulumi.ResourceOption) (*WebhookEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnabledEvents == nil {
		return nil, errors.New("invalid value for required argument 'EnabledEvents'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebhookEndpoint
	err := ctx.RegisterResource("stripe:index/webhookEndpoint:WebhookEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhookEndpoint gets an existing WebhookEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhookEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookEndpointState, opts ...pulumi.ResourceOption) (*WebhookEndpoint, error) {
	var resource WebhookEndpoint
	err := ctx.ReadResource("stripe:index/webhookEndpoint:WebhookEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhookEndpoint resources.
type webhookEndpointState struct {
	// String. Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe Version.
	ApiVersion *string `pulumi:"apiVersion"`
	// Bool. Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
	Connect *bool `pulumi:"connect"`
	// String. Description of what the webhook is used for.
	Description *string `pulumi:"description"`
	// Bool. Disable the webhook endpoint if set to `true`. Can be used only for modification already existing webhook endpoint.
	Disabled *bool `pulumi:"disabled"`
	// List(String). The list of events to enable for this endpoint. `[*]` indicates that all events are enabled, except those that require explicit selection. All supported events listed here: [Stripe event types](https://stripe.com/docs/api/events/types).
	EnabledEvents []string `pulumi:"enabledEvents"`
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `pulumi:"metadata"`
	// String. The endpoint’s secret, used to generate webhook signatures. This field is marked as `sensitive`.
	Secret *string `pulumi:"secret"`
	// String. The URL of the webhook endpoint.
	Url *string `pulumi:"url"`
}

type WebhookEndpointState struct {
	// String. Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe Version.
	ApiVersion pulumi.StringPtrInput
	// Bool. Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
	Connect pulumi.BoolPtrInput
	// String. Description of what the webhook is used for.
	Description pulumi.StringPtrInput
	// Bool. Disable the webhook endpoint if set to `true`. Can be used only for modification already existing webhook endpoint.
	Disabled pulumi.BoolPtrInput
	// List(String). The list of events to enable for this endpoint. `[*]` indicates that all events are enabled, except those that require explicit selection. All supported events listed here: [Stripe event types](https://stripe.com/docs/api/events/types).
	EnabledEvents pulumi.StringArrayInput
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapInput
	// String. The endpoint’s secret, used to generate webhook signatures. This field is marked as `sensitive`.
	Secret pulumi.StringPtrInput
	// String. The URL of the webhook endpoint.
	Url pulumi.StringPtrInput
}

func (WebhookEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookEndpointState)(nil)).Elem()
}

type webhookEndpointArgs struct {
	// String. Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe Version.
	ApiVersion *string `pulumi:"apiVersion"`
	// Bool. Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
	Connect *bool `pulumi:"connect"`
	// String. Description of what the webhook is used for.
	Description *string `pulumi:"description"`
	// Bool. Disable the webhook endpoint if set to `true`. Can be used only for modification already existing webhook endpoint.
	Disabled *bool `pulumi:"disabled"`
	// List(String). The list of events to enable for this endpoint. `[*]` indicates that all events are enabled, except those that require explicit selection. All supported events listed here: [Stripe event types](https://stripe.com/docs/api/events/types).
	EnabledEvents []string `pulumi:"enabledEvents"`
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata map[string]string `pulumi:"metadata"`
	// String. The URL of the webhook endpoint.
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a WebhookEndpoint resource.
type WebhookEndpointArgs struct {
	// String. Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe Version.
	ApiVersion pulumi.StringPtrInput
	// Bool. Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
	Connect pulumi.BoolPtrInput
	// String. Description of what the webhook is used for.
	Description pulumi.StringPtrInput
	// Bool. Disable the webhook endpoint if set to `true`. Can be used only for modification already existing webhook endpoint.
	Disabled pulumi.BoolPtrInput
	// List(String). The list of events to enable for this endpoint. `[*]` indicates that all events are enabled, except those that require explicit selection. All supported events listed here: [Stripe event types](https://stripe.com/docs/api/events/types).
	EnabledEvents pulumi.StringArrayInput
	// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
	Metadata pulumi.StringMapInput
	// String. The URL of the webhook endpoint.
	Url pulumi.StringInput
}

func (WebhookEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookEndpointArgs)(nil)).Elem()
}

type WebhookEndpointInput interface {
	pulumi.Input

	ToWebhookEndpointOutput() WebhookEndpointOutput
	ToWebhookEndpointOutputWithContext(ctx context.Context) WebhookEndpointOutput
}

func (*WebhookEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookEndpoint)(nil)).Elem()
}

func (i *WebhookEndpoint) ToWebhookEndpointOutput() WebhookEndpointOutput {
	return i.ToWebhookEndpointOutputWithContext(context.Background())
}

func (i *WebhookEndpoint) ToWebhookEndpointOutputWithContext(ctx context.Context) WebhookEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookEndpointOutput)
}

// WebhookEndpointArrayInput is an input type that accepts WebhookEndpointArray and WebhookEndpointArrayOutput values.
// You can construct a concrete instance of `WebhookEndpointArrayInput` via:
//
//	WebhookEndpointArray{ WebhookEndpointArgs{...} }
type WebhookEndpointArrayInput interface {
	pulumi.Input

	ToWebhookEndpointArrayOutput() WebhookEndpointArrayOutput
	ToWebhookEndpointArrayOutputWithContext(context.Context) WebhookEndpointArrayOutput
}

type WebhookEndpointArray []WebhookEndpointInput

func (WebhookEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhookEndpoint)(nil)).Elem()
}

func (i WebhookEndpointArray) ToWebhookEndpointArrayOutput() WebhookEndpointArrayOutput {
	return i.ToWebhookEndpointArrayOutputWithContext(context.Background())
}

func (i WebhookEndpointArray) ToWebhookEndpointArrayOutputWithContext(ctx context.Context) WebhookEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookEndpointArrayOutput)
}

// WebhookEndpointMapInput is an input type that accepts WebhookEndpointMap and WebhookEndpointMapOutput values.
// You can construct a concrete instance of `WebhookEndpointMapInput` via:
//
//	WebhookEndpointMap{ "key": WebhookEndpointArgs{...} }
type WebhookEndpointMapInput interface {
	pulumi.Input

	ToWebhookEndpointMapOutput() WebhookEndpointMapOutput
	ToWebhookEndpointMapOutputWithContext(context.Context) WebhookEndpointMapOutput
}

type WebhookEndpointMap map[string]WebhookEndpointInput

func (WebhookEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhookEndpoint)(nil)).Elem()
}

func (i WebhookEndpointMap) ToWebhookEndpointMapOutput() WebhookEndpointMapOutput {
	return i.ToWebhookEndpointMapOutputWithContext(context.Background())
}

func (i WebhookEndpointMap) ToWebhookEndpointMapOutputWithContext(ctx context.Context) WebhookEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookEndpointMapOutput)
}

type WebhookEndpointOutput struct{ *pulumi.OutputState }

func (WebhookEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookEndpoint)(nil)).Elem()
}

func (o WebhookEndpointOutput) ToWebhookEndpointOutput() WebhookEndpointOutput {
	return o
}

func (o WebhookEndpointOutput) ToWebhookEndpointOutputWithContext(ctx context.Context) WebhookEndpointOutput {
	return o
}

// String. Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe Version.
func (o WebhookEndpointOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Bool. Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
func (o WebhookEndpointOutput) Connect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.BoolPtrOutput { return v.Connect }).(pulumi.BoolPtrOutput)
}

// String. Description of what the webhook is used for.
func (o WebhookEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Bool. Disable the webhook endpoint if set to `true`. Can be used only for modification already existing webhook endpoint.
func (o WebhookEndpointOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// List(String). The list of events to enable for this endpoint. `[*]` indicates that all events are enabled, except those that require explicit selection. All supported events listed here: [Stripe event types](https://stripe.com/docs/api/events/types).
func (o WebhookEndpointOutput) EnabledEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.StringArrayOutput { return v.EnabledEvents }).(pulumi.StringArrayOutput)
}

// Map(String). Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
func (o WebhookEndpointOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// String. The endpoint’s secret, used to generate webhook signatures. This field is marked as `sensitive`.
func (o WebhookEndpointOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// String. The URL of the webhook endpoint.
func (o WebhookEndpointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookEndpoint) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type WebhookEndpointArrayOutput struct{ *pulumi.OutputState }

func (WebhookEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhookEndpoint)(nil)).Elem()
}

func (o WebhookEndpointArrayOutput) ToWebhookEndpointArrayOutput() WebhookEndpointArrayOutput {
	return o
}

func (o WebhookEndpointArrayOutput) ToWebhookEndpointArrayOutputWithContext(ctx context.Context) WebhookEndpointArrayOutput {
	return o
}

func (o WebhookEndpointArrayOutput) Index(i pulumi.IntInput) WebhookEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebhookEndpoint {
		return vs[0].([]*WebhookEndpoint)[vs[1].(int)]
	}).(WebhookEndpointOutput)
}

type WebhookEndpointMapOutput struct{ *pulumi.OutputState }

func (WebhookEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhookEndpoint)(nil)).Elem()
}

func (o WebhookEndpointMapOutput) ToWebhookEndpointMapOutput() WebhookEndpointMapOutput {
	return o
}

func (o WebhookEndpointMapOutput) ToWebhookEndpointMapOutputWithContext(ctx context.Context) WebhookEndpointMapOutput {
	return o
}

func (o WebhookEndpointMapOutput) MapIndex(k pulumi.StringInput) WebhookEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebhookEndpoint {
		return vs[0].(map[string]*WebhookEndpoint)[vs[1].(string)]
	}).(WebhookEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookEndpointInput)(nil)).Elem(), &WebhookEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookEndpointArrayInput)(nil)).Elem(), WebhookEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookEndpointMapInput)(nil)).Elem(), WebhookEndpointMap{})
	pulumi.RegisterOutputType(WebhookEndpointOutput{})
	pulumi.RegisterOutputType(WebhookEndpointArrayOutput{})
	pulumi.RegisterOutputType(WebhookEndpointMapOutput{})
}
